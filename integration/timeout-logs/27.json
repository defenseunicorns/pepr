{
  "numFailedTestSuites": 8,
  "numFailedTests": 19,
  "numPassedTestSuites": 49,
  "numPassedTests": 960,
  "numPendingTestSuites": 1,
  "numPendingTests": 2,
  "numRuntimeErrorTestSuites": 2,
  "numTodoTests": 0,
  "numTotalTestSuites": 58,
  "numTotalTests": 981,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1737148308103,
  "success": false,
  "testResults": [
    {
      "assertionResults": [
        {
          "ancestorTitles": ["KFC Dev Helper E2E Test"],
          "duration": 94,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Usage:\"\u001b[39m\nReceived string:    \u001b[31m\"node:internal/modules/cjs/loader:1412\u001b[39m\n\u001b[31m  throw err;\u001b[39m\n\u001b[31m  ^·\u001b[39m\n\u001b[31mError: Cannot find module '/Users/sam/code/work/pepr/integration/hack/kfc-dev.js'\u001b[39m\n\u001b[31m\u001b[90m    at Function._resolveFilename (node:internal/modules/cjs/loader:1409:15)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at defaultResolveImpl (node:internal/modules/cjs/loader:1060:19)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1065:22)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at Function._load (node:internal/modules/cjs/loader:1214:37)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at wrapModuleLoad (node:internal/modules/cjs/loader:234:24)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at node:internal/main/run_main_module:33:47\u001b[39m\u001b[31m {\u001b[39m\n\u001b[31m  code: \u001b[32m'MODULE_NOT_FOUND'\u001b[39m\u001b[31m,\u001b[39m\n\u001b[31m  requireStack: []\u001b[39m\n\u001b[31m}·\u001b[39m\n\u001b[31mNode.js v23.6.0\u001b[39m\n\u001b[31m\"\u001b[39m",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Usage:\"\u001b[39m\nReceived string:    \u001b[31m\"node:internal/modules/cjs/loader:1412\u001b[39m\n\u001b[31m  throw err;\u001b[39m\n\u001b[31m  ^·\u001b[39m\n\u001b[31mError: Cannot find module '/Users/sam/code/work/pepr/integration/hack/kfc-dev.js'\u001b[39m\n\u001b[31m\u001b[90m    at Function._resolveFilename (node:internal/modules/cjs/loader:1409:15)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at defaultResolveImpl (node:internal/modules/cjs/loader:1060:19)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1065:22)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at Function._load (node:internal/modules/cjs/loader:1214:37)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at wrapModuleLoad (node:internal/modules/cjs/loader:234:24)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at node:internal/main/run_main_module:33:47\u001b[39m\u001b[31m {\u001b[39m\n\u001b[31m  code: \u001b[32m'MODULE_NOT_FOUND'\u001b[39m\u001b[31m,\u001b[39m\n\u001b[31m  requireStack: []\u001b[39m\n\u001b[31m}·\u001b[39m\n\u001b[31mNode.js v23.6.0\u001b[39m\n\u001b[31m\"\u001b[39m\n    at Object.<anonymous> (/Users/sam/code/work/pepr/hack/kfc-dev.test.js:29:39)\n    at Promise.then.completed (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:121:9)\n    at run (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/opt/homebrew/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/opt/homebrew/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/opt/homebrew/lib/node_modules/jest/node_modules/jest-runner/build/testWorker.js:106:12)"
          ],
          "fullName": "KFC Dev Helper E2E Test should display usage information if no command is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should display usage information if no command is provided"
        },
        {
          "ancestorTitles": ["KFC Dev Helper E2E Test"],
          "duration": 36,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Please provide a path for the import operation.\"\u001b[39m\nReceived string:    \u001b[31m\"node:internal/modules/cjs/loader:1412\u001b[39m\n\u001b[31m  throw err;\u001b[39m\n\u001b[31m  ^·\u001b[39m\n\u001b[31mError: Cannot find module '/Users/sam/code/work/pepr/integration/hack/kfc-dev.js'\u001b[39m\n\u001b[31m\u001b[90m    at Function._resolveFilename (node:internal/modules/cjs/loader:1409:15)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at defaultResolveImpl (node:internal/modules/cjs/loader:1060:19)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1065:22)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at Function._load (node:internal/modules/cjs/loader:1214:37)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at wrapModuleLoad (node:internal/modules/cjs/loader:234:24)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at node:internal/main/run_main_module:33:47\u001b[39m\u001b[31m {\u001b[39m\n\u001b[31m  code: \u001b[32m'MODULE_NOT_FOUND'\u001b[39m\u001b[31m,\u001b[39m\n\u001b[31m  requireStack: []\u001b[39m\n\u001b[31m}·\u001b[39m\n\u001b[31mNode.js v23.6.0\u001b[39m\n\u001b[31m\"\u001b[39m",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Please provide a path for the import operation.\"\u001b[39m\nReceived string:    \u001b[31m\"node:internal/modules/cjs/loader:1412\u001b[39m\n\u001b[31m  throw err;\u001b[39m\n\u001b[31m  ^·\u001b[39m\n\u001b[31mError: Cannot find module '/Users/sam/code/work/pepr/integration/hack/kfc-dev.js'\u001b[39m\n\u001b[31m\u001b[90m    at Function._resolveFilename (node:internal/modules/cjs/loader:1409:15)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at defaultResolveImpl (node:internal/modules/cjs/loader:1060:19)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1065:22)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at Function._load (node:internal/modules/cjs/loader:1214:37)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at wrapModuleLoad (node:internal/modules/cjs/loader:234:24)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at node:internal/main/run_main_module:33:47\u001b[39m\u001b[31m {\u001b[39m\n\u001b[31m  code: \u001b[32m'MODULE_NOT_FOUND'\u001b[39m\u001b[31m,\u001b[39m\n\u001b[31m  requireStack: []\u001b[39m\n\u001b[31m}·\u001b[39m\n\u001b[31mNode.js v23.6.0\u001b[39m\n\u001b[31m\"\u001b[39m\n    at Object.<anonymous> (/Users/sam/code/work/pepr/hack/kfc-dev.test.js:40:39)\n    at Promise.then.completed (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:121:9)\n    at run (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/opt/homebrew/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/opt/homebrew/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/opt/homebrew/lib/node_modules/jest/node_modules/jest-runner/build/testWorker.js:106:12)"
          ],
          "fullName": "KFC Dev Helper E2E Test should fail if flag is missing for build",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should fail if flag is missing for build"
        },
        {
          "ancestorTitles": ["KFC Dev Helper E2E Test"],
          "duration": 36,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Please provide a path for the import operation.\"\u001b[39m\nReceived string:    \u001b[31m\"node:internal/modules/cjs/loader:1412\u001b[39m\n\u001b[31m  throw err;\u001b[39m\n\u001b[31m  ^·\u001b[39m\n\u001b[31mError: Cannot find module '/Users/sam/code/work/pepr/integration/hack/kfc-dev.js'\u001b[39m\n\u001b[31m\u001b[90m    at Function._resolveFilename (node:internal/modules/cjs/loader:1409:15)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at defaultResolveImpl (node:internal/modules/cjs/loader:1060:19)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1065:22)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at Function._load (node:internal/modules/cjs/loader:1214:37)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at wrapModuleLoad (node:internal/modules/cjs/loader:234:24)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at node:internal/main/run_main_module:33:47\u001b[39m\u001b[31m {\u001b[39m\n\u001b[31m  code: \u001b[32m'MODULE_NOT_FOUND'\u001b[39m\u001b[31m,\u001b[39m\n\u001b[31m  requireStack: []\u001b[39m\n\u001b[31m}·\u001b[39m\n\u001b[31mNode.js v23.6.0\u001b[39m\n\u001b[31m\"\u001b[39m",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Please provide a path for the import operation.\"\u001b[39m\nReceived string:    \u001b[31m\"node:internal/modules/cjs/loader:1412\u001b[39m\n\u001b[31m  throw err;\u001b[39m\n\u001b[31m  ^·\u001b[39m\n\u001b[31mError: Cannot find module '/Users/sam/code/work/pepr/integration/hack/kfc-dev.js'\u001b[39m\n\u001b[31m\u001b[90m    at Function._resolveFilename (node:internal/modules/cjs/loader:1409:15)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at defaultResolveImpl (node:internal/modules/cjs/loader:1060:19)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1065:22)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at Function._load (node:internal/modules/cjs/loader:1214:37)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at wrapModuleLoad (node:internal/modules/cjs/loader:234:24)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)\u001b[39m\u001b[31m\u001b[39m\n\u001b[31m\u001b[90m    at node:internal/main/run_main_module:33:47\u001b[39m\u001b[31m {\u001b[39m\n\u001b[31m  code: \u001b[32m'MODULE_NOT_FOUND'\u001b[39m\u001b[31m,\u001b[39m\n\u001b[31m  requireStack: []\u001b[39m\n\u001b[31m}·\u001b[39m\n\u001b[31mNode.js v23.6.0\u001b[39m\n\u001b[31m\"\u001b[39m\n    at Object.<anonymous> (/Users/sam/code/work/pepr/hack/kfc-dev.test.js:51:39)\n    at Promise.then.completed (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:121:9)\n    at run (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/opt/homebrew/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/opt/homebrew/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/opt/homebrew/lib/node_modules/jest/node_modules/jest-runner/build/testWorker.js:106:12)"
          ],
          "fullName": "KFC Dev Helper E2E Test should fail if flag is missing for import",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should fail if flag is missing for import"
        },
        {
          "ancestorTitles": ["KFC Dev Helper E2E Test"],
          "duration": 35,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "",
                "node:internal/modules/cjs/loader:1412\n  throw err;\n  ^\n\nError: Cannot find module '/Users/sam/code/work/pepr/integration/hack/kfc-dev.js'\n\u001b[90m    at Function._resolveFilename (node:internal/modules/cjs/loader:1409:15)\u001b[39m\n\u001b[90m    at defaultResolveImpl (node:internal/modules/cjs/loader:1060:19)\u001b[39m\n\u001b[90m    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1065:22)\u001b[39m\n\u001b[90m    at Function._load (node:internal/modules/cjs/loader:1214:37)\u001b[39m\n\u001b[90m    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\u001b[39m\n\u001b[90m    at wrapModuleLoad (node:internal/modules/cjs/loader:234:24)\u001b[39m\n\u001b[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)\u001b[39m\n\u001b[90m    at node:internal/main/run_main_module:33:47\u001b[39m {\n  code: \u001b[32m'MODULE_NOT_FOUND'\u001b[39m,\n  requireStack: []\n}\n\nNode.js v23.6.0\n"
              ],
              "pid": 5059,
              "stdout": "",
              "stderr": "node:internal/modules/cjs/loader:1412\n  throw err;\n  ^\n\nError: Cannot find module '/Users/sam/code/work/pepr/integration/hack/kfc-dev.js'\n\u001b[90m    at Function._resolveFilename (node:internal/modules/cjs/loader:1409:15)\u001b[39m\n\u001b[90m    at defaultResolveImpl (node:internal/modules/cjs/loader:1060:19)\u001b[39m\n\u001b[90m    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1065:22)\u001b[39m\n\u001b[90m    at Function._load (node:internal/modules/cjs/loader:1214:37)\u001b[39m\n\u001b[90m    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\u001b[39m\n\u001b[90m    at wrapModuleLoad (node:internal/modules/cjs/loader:234:24)\u001b[39m\n\u001b[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)\u001b[39m\n\u001b[90m    at node:internal/main/run_main_module:33:47\u001b[39m {\n  code: \u001b[32m'MODULE_NOT_FOUND'\u001b[39m,\n  requireStack: []\n}\n\nNode.js v23.6.0\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: node hack/kfc-dev.js build -b main\nnode:internal/modules/cjs/loader:1412\n  throw err;\n  ^\n\nError: Cannot find module '/Users/sam/code/work/pepr/integration/hack/kfc-dev.js'\n\u001b[90m    at Function._resolveFilename (node:internal/modules/cjs/loader:1409:15)\u001b[39m\n\u001b[90m    at defaultResolveImpl (node:internal/modules/cjs/loader:1060:19)\u001b[39m\n\u001b[90m    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1065:22)\u001b[39m\n\u001b[90m    at Function._load (node:internal/modules/cjs/loader:1214:37)\u001b[39m\n\u001b[90m    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\u001b[39m\n\u001b[90m    at wrapModuleLoad (node:internal/modules/cjs/loader:234:24)\u001b[39m\n\u001b[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)\u001b[39m\n\u001b[90m    at node:internal/main/run_main_module:33:47\u001b[39m {\n  code: \u001b[32m'MODULE_NOT_FOUND'\u001b[39m,\n  requireStack: []\n}\n\nNode.js v23.6.0\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.<anonymous> (/Users/sam/code/work/pepr/hack/kfc-dev.test.js:56:5)\n    at Promise.then.completed (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:121:9)\n    at run (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/opt/homebrew/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/opt/homebrew/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/opt/homebrew/lib/node_modules/jest/node_modules/jest-runner/build/testWorker.js:106:12)"
          ],
          "fullName": "KFC Dev Helper E2E Test should download a remote branch of KFC to kubernetes-fluent-client folder",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should download a remote branch of KFC to kubernetes-fluent-client folder"
        },
        {
          "ancestorTitles": ["KFC Dev Helper E2E Test"],
          "duration": 36,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "",
                "node:internal/modules/cjs/loader:1412\n  throw err;\n  ^\n\nError: Cannot find module '/Users/sam/code/work/pepr/integration/hack/kfc-dev.js'\n\u001b[90m    at Function._resolveFilename (node:internal/modules/cjs/loader:1409:15)\u001b[39m\n\u001b[90m    at defaultResolveImpl (node:internal/modules/cjs/loader:1060:19)\u001b[39m\n\u001b[90m    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1065:22)\u001b[39m\n\u001b[90m    at Function._load (node:internal/modules/cjs/loader:1214:37)\u001b[39m\n\u001b[90m    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\u001b[39m\n\u001b[90m    at wrapModuleLoad (node:internal/modules/cjs/loader:234:24)\u001b[39m\n\u001b[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)\u001b[39m\n\u001b[90m    at node:internal/main/run_main_module:33:47\u001b[39m {\n  code: \u001b[32m'MODULE_NOT_FOUND'\u001b[39m,\n  requireStack: []\n}\n\nNode.js v23.6.0\n"
              ],
              "pid": 5060,
              "stdout": "",
              "stderr": "node:internal/modules/cjs/loader:1412\n  throw err;\n  ^\n\nError: Cannot find module '/Users/sam/code/work/pepr/integration/hack/kfc-dev.js'\n\u001b[90m    at Function._resolveFilename (node:internal/modules/cjs/loader:1409:15)\u001b[39m\n\u001b[90m    at defaultResolveImpl (node:internal/modules/cjs/loader:1060:19)\u001b[39m\n\u001b[90m    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1065:22)\u001b[39m\n\u001b[90m    at Function._load (node:internal/modules/cjs/loader:1214:37)\u001b[39m\n\u001b[90m    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\u001b[39m\n\u001b[90m    at wrapModuleLoad (node:internal/modules/cjs/loader:234:24)\u001b[39m\n\u001b[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)\u001b[39m\n\u001b[90m    at node:internal/main/run_main_module:33:47\u001b[39m {\n  code: \u001b[32m'MODULE_NOT_FOUND'\u001b[39m,\n  requireStack: []\n}\n\nNode.js v23.6.0\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: node hack/kfc-dev.js build -l ../../kubernetes-fluent-client\nnode:internal/modules/cjs/loader:1412\n  throw err;\n  ^\n\nError: Cannot find module '/Users/sam/code/work/pepr/integration/hack/kfc-dev.js'\n\u001b[90m    at Function._resolveFilename (node:internal/modules/cjs/loader:1409:15)\u001b[39m\n\u001b[90m    at defaultResolveImpl (node:internal/modules/cjs/loader:1060:19)\u001b[39m\n\u001b[90m    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1065:22)\u001b[39m\n\u001b[90m    at Function._load (node:internal/modules/cjs/loader:1214:37)\u001b[39m\n\u001b[90m    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\u001b[39m\n\u001b[90m    at wrapModuleLoad (node:internal/modules/cjs/loader:234:24)\u001b[39m\n\u001b[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)\u001b[39m\n\u001b[90m    at node:internal/main/run_main_module:33:47\u001b[39m {\n  code: \u001b[32m'MODULE_NOT_FOUND'\u001b[39m,\n  requireStack: []\n}\n\nNode.js v23.6.0\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.<anonymous> (/Users/sam/code/work/pepr/hack/kfc-dev.test.js:67:5)\n    at Promise.then.completed (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:121:9)\n    at run (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/opt/homebrew/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/opt/homebrew/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/opt/homebrew/lib/node_modules/jest/node_modules/jest-runner/build/testWorker.js:106:12)"
          ],
          "fullName": "KFC Dev Helper E2E Test should import a local KFC to kubernetes-fluent-client folder",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should import a local KFC to kubernetes-fluent-client folder"
        },
        {
          "ancestorTitles": ["KFC Dev Helper E2E Test"],
          "duration": 34,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "",
                "node:internal/modules/cjs/loader:1412\n  throw err;\n  ^\n\nError: Cannot find module '/Users/sam/code/work/pepr/integration/hack/kfc-dev.js'\n\u001b[90m    at Function._resolveFilename (node:internal/modules/cjs/loader:1409:15)\u001b[39m\n\u001b[90m    at defaultResolveImpl (node:internal/modules/cjs/loader:1060:19)\u001b[39m\n\u001b[90m    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1065:22)\u001b[39m\n\u001b[90m    at Function._load (node:internal/modules/cjs/loader:1214:37)\u001b[39m\n\u001b[90m    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\u001b[39m\n\u001b[90m    at wrapModuleLoad (node:internal/modules/cjs/loader:234:24)\u001b[39m\n\u001b[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)\u001b[39m\n\u001b[90m    at node:internal/main/run_main_module:33:47\u001b[39m {\n  code: \u001b[32m'MODULE_NOT_FOUND'\u001b[39m,\n  requireStack: []\n}\n\nNode.js v23.6.0\n"
              ],
              "pid": 5061,
              "stdout": "",
              "stderr": "node:internal/modules/cjs/loader:1412\n  throw err;\n  ^\n\nError: Cannot find module '/Users/sam/code/work/pepr/integration/hack/kfc-dev.js'\n\u001b[90m    at Function._resolveFilename (node:internal/modules/cjs/loader:1409:15)\u001b[39m\n\u001b[90m    at defaultResolveImpl (node:internal/modules/cjs/loader:1060:19)\u001b[39m\n\u001b[90m    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1065:22)\u001b[39m\n\u001b[90m    at Function._load (node:internal/modules/cjs/loader:1214:37)\u001b[39m\n\u001b[90m    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\u001b[39m\n\u001b[90m    at wrapModuleLoad (node:internal/modules/cjs/loader:234:24)\u001b[39m\n\u001b[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)\u001b[39m\n\u001b[90m    at node:internal/main/run_main_module:33:47\u001b[39m {\n  code: \u001b[32m'MODULE_NOT_FOUND'\u001b[39m,\n  requireStack: []\n}\n\nNode.js v23.6.0\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: node hack/kfc-dev.js import -l ../../kubernetes-fluent-client\nnode:internal/modules/cjs/loader:1412\n  throw err;\n  ^\n\nError: Cannot find module '/Users/sam/code/work/pepr/integration/hack/kfc-dev.js'\n\u001b[90m    at Function._resolveFilename (node:internal/modules/cjs/loader:1409:15)\u001b[39m\n\u001b[90m    at defaultResolveImpl (node:internal/modules/cjs/loader:1060:19)\u001b[39m\n\u001b[90m    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1065:22)\u001b[39m\n\u001b[90m    at Function._load (node:internal/modules/cjs/loader:1214:37)\u001b[39m\n\u001b[90m    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\u001b[39m\n\u001b[90m    at wrapModuleLoad (node:internal/modules/cjs/loader:234:24)\u001b[39m\n\u001b[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)\u001b[39m\n\u001b[90m    at node:internal/main/run_main_module:33:47\u001b[39m {\n  code: \u001b[32m'MODULE_NOT_FOUND'\u001b[39m,\n  requireStack: []\n}\n\nNode.js v23.6.0\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.<anonymous> (/Users/sam/code/work/pepr/hack/kfc-dev.test.js:78:5)\n    at Promise.then.completed (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:121:9)\n    at run (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/opt/homebrew/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/opt/homebrew/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/opt/homebrew/lib/node_modules/jest/node_modules/jest-runner/build/testWorker.js:106:12)"
          ],
          "fullName": "KFC Dev Helper E2E Test should import a path of KFC to appropriate folders",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should import a path of KFC to appropriate folders"
        }
      ],
      "endTime": 1737148308624,
      "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mKFC Dev Helper E2E Test › should display usage information if no command is provided\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected substring: \u001b[32m\"Usage:\"\u001b[39m\n    Received string:    \u001b[31m\"node:internal/modules/cjs/loader:1412\u001b[39m\n    \u001b[31m  throw err;\u001b[39m\n    \u001b[31m  ^·\u001b[39m\n    \u001b[31mError: Cannot find module '/Users/sam/code/work/pepr/integration/hack/kfc-dev.js'\u001b[39m\n    \u001b[31m\u001b[90m    at Function._resolveFilename (node:internal/modules/cjs/loader:1409:15)\u001b[39m\u001b[31m\u001b[39m\n    \u001b[31m\u001b[90m    at defaultResolveImpl (node:internal/modules/cjs/loader:1060:19)\u001b[39m\u001b[31m\u001b[39m\n    \u001b[31m\u001b[90m    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1065:22)\u001b[39m\u001b[31m\u001b[39m\n    \u001b[31m\u001b[90m    at Function._load (node:internal/modules/cjs/loader:1214:37)\u001b[39m\u001b[31m\u001b[39m\n    \u001b[31m\u001b[90m    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\u001b[39m\u001b[31m\u001b[39m\n    \u001b[31m\u001b[90m    at wrapModuleLoad (node:internal/modules/cjs/loader:234:24)\u001b[39m\u001b[31m\u001b[39m\n    \u001b[31m\u001b[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)\u001b[39m\u001b[31m\u001b[39m\n    \u001b[31m\u001b[90m    at node:internal/main/run_main_module:33:47\u001b[39m\u001b[31m {\u001b[39m\n    \u001b[31m  code: \u001b[32m'MODULE_NOT_FOUND'\u001b[39m\u001b[31m,\u001b[39m\n    \u001b[31m  requireStack: []\u001b[39m\n    \u001b[31m}·\u001b[39m\n    \u001b[31mNode.js v23.6.0\u001b[39m\n    \u001b[31m\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 27 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 29 |\u001b[39m       expect(error\u001b[33m.\u001b[39mstderr\u001b[33m.\u001b[39mtoString())\u001b[33m.\u001b[39mtoContain(\u001b[32m\"Usage:\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 30 |\u001b[39m     }\u001b[22m\n\u001b[2m     \u001b[90m 31 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 32 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mhack/kfc-dev.test.js\u001b[39m\u001b[0m\u001b[2m:29:39)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mKFC Dev Helper E2E Test › should fail if flag is missing for build\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected substring: \u001b[32m\"Please provide a path for the import operation.\"\u001b[39m\n    Received string:    \u001b[31m\"node:internal/modules/cjs/loader:1412\u001b[39m\n    \u001b[31m  throw err;\u001b[39m\n    \u001b[31m  ^·\u001b[39m\n    \u001b[31mError: Cannot find module '/Users/sam/code/work/pepr/integration/hack/kfc-dev.js'\u001b[39m\n    \u001b[31m\u001b[90m    at Function._resolveFilename (node:internal/modules/cjs/loader:1409:15)\u001b[39m\u001b[31m\u001b[39m\n    \u001b[31m\u001b[90m    at defaultResolveImpl (node:internal/modules/cjs/loader:1060:19)\u001b[39m\u001b[31m\u001b[39m\n    \u001b[31m\u001b[90m    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1065:22)\u001b[39m\u001b[31m\u001b[39m\n    \u001b[31m\u001b[90m    at Function._load (node:internal/modules/cjs/loader:1214:37)\u001b[39m\u001b[31m\u001b[39m\n    \u001b[31m\u001b[90m    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\u001b[39m\u001b[31m\u001b[39m\n    \u001b[31m\u001b[90m    at wrapModuleLoad (node:internal/modules/cjs/loader:234:24)\u001b[39m\u001b[31m\u001b[39m\n    \u001b[31m\u001b[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)\u001b[39m\u001b[31m\u001b[39m\n    \u001b[31m\u001b[90m    at node:internal/main/run_main_module:33:47\u001b[39m\u001b[31m {\u001b[39m\n    \u001b[31m  code: \u001b[32m'MODULE_NOT_FOUND'\u001b[39m\u001b[31m,\u001b[39m\n    \u001b[31m  requireStack: []\u001b[39m\n    \u001b[31m}·\u001b[39m\n    \u001b[31mNode.js v23.6.0\u001b[39m\n    \u001b[31m\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 38 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 39 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 40 |\u001b[39m       expect(error\u001b[33m.\u001b[39mstderr\u001b[33m.\u001b[39mtoString())\u001b[33m.\u001b[39mtoContain(\u001b[32m\"Please provide a path for the import operation.\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 41 |\u001b[39m     }\u001b[22m\n\u001b[2m     \u001b[90m 42 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 43 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mhack/kfc-dev.test.js\u001b[39m\u001b[0m\u001b[2m:40:39)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mKFC Dev Helper E2E Test › should fail if flag is missing for import\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected substring: \u001b[32m\"Please provide a path for the import operation.\"\u001b[39m\n    Received string:    \u001b[31m\"node:internal/modules/cjs/loader:1412\u001b[39m\n    \u001b[31m  throw err;\u001b[39m\n    \u001b[31m  ^·\u001b[39m\n    \u001b[31mError: Cannot find module '/Users/sam/code/work/pepr/integration/hack/kfc-dev.js'\u001b[39m\n    \u001b[31m\u001b[90m    at Function._resolveFilename (node:internal/modules/cjs/loader:1409:15)\u001b[39m\u001b[31m\u001b[39m\n    \u001b[31m\u001b[90m    at defaultResolveImpl (node:internal/modules/cjs/loader:1060:19)\u001b[39m\u001b[31m\u001b[39m\n    \u001b[31m\u001b[90m    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1065:22)\u001b[39m\u001b[31m\u001b[39m\n    \u001b[31m\u001b[90m    at Function._load (node:internal/modules/cjs/loader:1214:37)\u001b[39m\u001b[31m\u001b[39m\n    \u001b[31m\u001b[90m    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\u001b[39m\u001b[31m\u001b[39m\n    \u001b[31m\u001b[90m    at wrapModuleLoad (node:internal/modules/cjs/loader:234:24)\u001b[39m\u001b[31m\u001b[39m\n    \u001b[31m\u001b[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)\u001b[39m\u001b[31m\u001b[39m\n    \u001b[31m\u001b[90m    at node:internal/main/run_main_module:33:47\u001b[39m\u001b[31m {\u001b[39m\n    \u001b[31m  code: \u001b[32m'MODULE_NOT_FOUND'\u001b[39m\u001b[31m,\u001b[39m\n    \u001b[31m  requireStack: []\u001b[39m\n    \u001b[31m}·\u001b[39m\n    \u001b[31mNode.js v23.6.0\u001b[39m\n    \u001b[31m\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 49 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 50 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 51 |\u001b[39m       expect(error\u001b[33m.\u001b[39mstderr\u001b[33m.\u001b[39mtoString())\u001b[33m.\u001b[39mtoContain(\u001b[32m\"Please provide a path for the import operation.\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 52 |\u001b[39m     }\u001b[22m\n\u001b[2m     \u001b[90m 53 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 54 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mhack/kfc-dev.test.js\u001b[39m\u001b[0m\u001b[2m:51:39)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mKFC Dev Helper E2E Test › should download a remote branch of KFC to kubernetes-fluent-client folder\u001b[39m\u001b[22m\n\n    Command failed: node hack/kfc-dev.js build -b main\n    node:internal/modules/cjs/loader:1412\n      throw err;\n      ^\n\n    Error: Cannot find module '/Users/sam/code/work/pepr/integration/hack/kfc-dev.js'\n    \u001b[90m    at Function._resolveFilename (node:internal/modules/cjs/loader:1409:15)\u001b[39m\n    \u001b[90m    at defaultResolveImpl (node:internal/modules/cjs/loader:1060:19)\u001b[39m\n    \u001b[90m    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1065:22)\u001b[39m\n    \u001b[90m    at Function._load (node:internal/modules/cjs/loader:1214:37)\u001b[39m\n    \u001b[90m    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\u001b[39m\n    \u001b[90m    at wrapModuleLoad (node:internal/modules/cjs/loader:234:24)\u001b[39m\n    \u001b[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)\u001b[39m\n    \u001b[90m    at node:internal/main/run_main_module:33:47\u001b[39m {\n      code: \u001b[32m'MODULE_NOT_FOUND'\u001b[39m,\n      requireStack: []\n    }\n\n    Node.js v23.6.0\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 54 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 55 |\u001b[39m   it(\u001b[32m\"should download a remote branch of KFC to kubernetes-fluent-client folder\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 56 |\u001b[39m     execSync(\u001b[32m\"node hack/kfc-dev.js build -b main\"\u001b[39m\u001b[33m,\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 57 |\u001b[39m       stdio\u001b[33m:\u001b[39m \u001b[32m\"pipe\"\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 58 |\u001b[39m       encoding\u001b[33m:\u001b[39m \u001b[32m\"utf8\"\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 59 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mhack/kfc-dev.test.js\u001b[39m\u001b[0m\u001b[2m:56:5)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mKFC Dev Helper E2E Test › should import a local KFC to kubernetes-fluent-client folder\u001b[39m\u001b[22m\n\n    Command failed: node hack/kfc-dev.js build -l ../../kubernetes-fluent-client\n    node:internal/modules/cjs/loader:1412\n      throw err;\n      ^\n\n    Error: Cannot find module '/Users/sam/code/work/pepr/integration/hack/kfc-dev.js'\n    \u001b[90m    at Function._resolveFilename (node:internal/modules/cjs/loader:1409:15)\u001b[39m\n    \u001b[90m    at defaultResolveImpl (node:internal/modules/cjs/loader:1060:19)\u001b[39m\n    \u001b[90m    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1065:22)\u001b[39m\n    \u001b[90m    at Function._load (node:internal/modules/cjs/loader:1214:37)\u001b[39m\n    \u001b[90m    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\u001b[39m\n    \u001b[90m    at wrapModuleLoad (node:internal/modules/cjs/loader:234:24)\u001b[39m\n    \u001b[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)\u001b[39m\n    \u001b[90m    at node:internal/main/run_main_module:33:47\u001b[39m {\n      code: \u001b[32m'MODULE_NOT_FOUND'\u001b[39m,\n      requireStack: []\n    }\n\n    Node.js v23.6.0\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 65 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 66 |\u001b[39m   it(\u001b[32m\"should import a local KFC to kubernetes-fluent-client folder\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 67 |\u001b[39m     execSync(\u001b[32m\"node hack/kfc-dev.js build -l ../../kubernetes-fluent-client\"\u001b[39m\u001b[33m,\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 68 |\u001b[39m       stdio\u001b[33m:\u001b[39m \u001b[32m\"pipe\"\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 69 |\u001b[39m       encoding\u001b[33m:\u001b[39m \u001b[32m\"utf8\"\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 70 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mhack/kfc-dev.test.js\u001b[39m\u001b[0m\u001b[2m:67:5)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mKFC Dev Helper E2E Test › should import a path of KFC to appropriate folders\u001b[39m\u001b[22m\n\n    Command failed: node hack/kfc-dev.js import -l ../../kubernetes-fluent-client\n    node:internal/modules/cjs/loader:1412\n      throw err;\n      ^\n\n    Error: Cannot find module '/Users/sam/code/work/pepr/integration/hack/kfc-dev.js'\n    \u001b[90m    at Function._resolveFilename (node:internal/modules/cjs/loader:1409:15)\u001b[39m\n    \u001b[90m    at defaultResolveImpl (node:internal/modules/cjs/loader:1060:19)\u001b[39m\n    \u001b[90m    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1065:22)\u001b[39m\n    \u001b[90m    at Function._load (node:internal/modules/cjs/loader:1214:37)\u001b[39m\n    \u001b[90m    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\u001b[39m\n    \u001b[90m    at wrapModuleLoad (node:internal/modules/cjs/loader:234:24)\u001b[39m\n    \u001b[90m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)\u001b[39m\n    \u001b[90m    at node:internal/main/run_main_module:33:47\u001b[39m {\n      code: \u001b[32m'MODULE_NOT_FOUND'\u001b[39m,\n      requireStack: []\n    }\n\n    Node.js v23.6.0\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 76 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 77 |\u001b[39m   it(\u001b[32m\"should import a path of KFC to appropriate folders\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 78 |\u001b[39m     execSync(\u001b[32m\"node hack/kfc-dev.js import -l ../../kubernetes-fluent-client\"\u001b[39m\u001b[33m,\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 79 |\u001b[39m       stdio\u001b[33m:\u001b[39m \u001b[32m\"pipe\"\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 80 |\u001b[39m       encoding\u001b[33m:\u001b[39m \u001b[32m\"utf8\"\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 81 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mhack/kfc-dev.test.js\u001b[39m\u001b[0m\u001b[2m:78:5)\u001b[22m\u001b[2m\u001b[22m\n",
      "name": "/Users/sam/code/work/pepr/hack/kfc-dev.test.js",
      "startTime": 1737148308210,
      "status": "failed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Should test Pepr upgrade"],
          "duration": 11,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeNull\u001b[2m()\u001b[22m\n\nReceived: \u001b[31m[Error: spawnSync /bin/sh ENOENT]\u001b[39m",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeNull\u001b[2m()\u001b[22m\n\nReceived: \u001b[31m[Error: spawnSync /bin/sh ENOENT]\u001b[39m\n    at Object.<anonymous> (/Users/sam/code/work/pepr/journey/pepr-upgrade.test.ts:34:27)\n    at Promise.then.completed (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:121:9)\n    at run (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/opt/homebrew/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/opt/homebrew/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/opt/homebrew/lib/node_modules/jest/node_modules/jest-runner/build/testWorker.js:106:12)"
          ],
          "fullName": "Should test Pepr upgrade should prepare, build, and deploy hello-pepr with pepr@latest",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should prepare, build, and deploy hello-pepr with pepr@latest"
        },
        {
          "ancestorTitles": ["Should test Pepr upgrade"],
          "duration": 1,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeNull\u001b[2m()\u001b[22m\n\nReceived: \u001b[31m[Error: spawnSync /bin/sh ENOENT]\u001b[39m",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeNull\u001b[2m()\u001b[22m\n\nReceived: \u001b[31m[Error: spawnSync /bin/sh ENOENT]\u001b[39m\n    at Object.<anonymous> (/Users/sam/code/work/pepr/journey/pepr-upgrade.test.ts:64:27)\n    at Promise.then.completed (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:121:9)\n    at run (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/opt/homebrew/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/opt/homebrew/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/opt/homebrew/lib/node_modules/jest/node_modules/jest-runner/build/testWorker.js:106:12)"
          ],
          "fullName": "Should test Pepr upgrade should prepare, build, and deploy hello-pepr with pepr@pr-candidate",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should prepare, build, and deploy hello-pepr with pepr@pr-candidate"
        }
      ],
      "endTime": 1737148312757,
      "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mShould test Pepr upgrade › should prepare, build, and deploy hello-pepr with pepr@latest\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeNull\u001b[2m()\u001b[22m\n\n    Received: \u001b[31m[Error: spawnSync /bin/sh ENOENT]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 32 |\u001b[39m         }\u001b[22m\n\u001b[2m     \u001b[90m 33 |\u001b[39m         \u001b[36mcatch\u001b[39m (error) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 34 |\u001b[39m             expect(error)\u001b[33m.\u001b[39mtoBeNull()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 35 |\u001b[39m         }\u001b[22m\n\u001b[2m     \u001b[90m 36 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 37 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mjourney/pepr-upgrade.test.ts\u001b[39m\u001b[0m\u001b[2m:34:27)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mShould test Pepr upgrade › should prepare, build, and deploy hello-pepr with pepr@pr-candidate\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeNull\u001b[2m()\u001b[22m\n\n    Received: \u001b[31m[Error: spawnSync /bin/sh ENOENT]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 62 |\u001b[39m         }\u001b[22m\n\u001b[2m     \u001b[90m 63 |\u001b[39m         \u001b[36mcatch\u001b[39m (error) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 64 |\u001b[39m             expect(error)\u001b[33m.\u001b[39mtoBeNull()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 65 |\u001b[39m         }\u001b[22m\n\u001b[2m     \u001b[90m 66 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 67 |\u001b[39m }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mjourney/pepr-upgrade.test.ts\u001b[39m\u001b[0m\u001b[2m:64:27)\u001b[22m\u001b[2m\u001b[22m\n",
      "name": "/Users/sam/code/work/pepr/journey/pepr-upgrade.test.ts",
      "startTime": 1737148308210,
      "status": "failed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["sigstore-js - zot (OCI) - pub/prv keys"],
          "duration": 11,
          "failureDetails": [
            {
              "code": 126,
              "killed": false,
              "signal": null,
              "cmd": "/Users/sam/code/work/pepr/node_modules/.bin/cosign import-key-pair --key=signing-raw.key --output-key-prefix=signing-cos",
              "stdout": "",
              "stderr": "/bin/sh: /Users/sam/code/work/pepr/node_modules/.bin/cosign: Permission denied\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: /Users/sam/code/work/pepr/node_modules/.bin/cosign import-key-pair --key=signing-raw.key --output-key-prefix=signing-cos\n/bin/sh: /Users/sam/code/work/pepr/node_modules/.bin/cosign: Permission denied\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at ChildProcess.exithandler (node:child_process:414:12)\n    at ChildProcess.emit (node:events:507:28)\n    at maybeClose (node:internal/child_process:1101:16)\n    at Socket.<anonymous> (node:internal/child_process:457:11)\n    at Socket.emit (node:events:507:28)\n    at Pipe.<anonymous> (node:net:351:12)"
          ],
          "fullName": "sigstore-js - zot (OCI) - pub/prv keys verifies successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "verifies successfully"
        },
        {
          "ancestorTitles": ["sigstore-js - registry (Docker) - pub/prv keys"],
          "duration": 0,
          "failureDetails": [
            {
              "code": 126,
              "killed": false,
              "signal": null,
              "cmd": "/Users/sam/code/work/pepr/node_modules/.bin/cosign import-key-pair --key=signing-raw.key --output-key-prefix=signing-cos",
              "stdout": "",
              "stderr": "/bin/sh: /Users/sam/code/work/pepr/node_modules/.bin/cosign: Permission denied\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: /Users/sam/code/work/pepr/node_modules/.bin/cosign import-key-pair --key=signing-raw.key --output-key-prefix=signing-cos\n/bin/sh: /Users/sam/code/work/pepr/node_modules/.bin/cosign: Permission denied\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at ChildProcess.exithandler (node:child_process:414:12)\n    at ChildProcess.emit (node:events:507:28)\n    at maybeClose (node:internal/child_process:1101:16)\n    at Socket.<anonymous> (node:internal/child_process:457:11)\n    at Socket.emit (node:events:507:28)\n    at Pipe.<anonymous> (node:net:351:12)"
          ],
          "fullName": "sigstore-js - registry (Docker) - pub/prv keys verifies successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "verifies successfully"
        }
      ],
      "endTime": 1737148313405,
      "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msigstore-js - zot (OCI) - pub/prv keys › verifies successfully\u001b[39m\u001b[22m\n\n    Command failed: /Users/sam/code/work/pepr/node_modules/.bin/cosign import-key-pair --key=signing-raw.key --output-key-prefix=signing-cos\n    /bin/sh: /Users/sam/code/work/pepr/node_modules/.bin/cosign: Permission denied\n\u001b[2m\u001b[22m\n\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msigstore-js - registry (Docker) - pub/prv keys › verifies successfully\u001b[39m\u001b[22m\n\n    Command failed: /Users/sam/code/work/pepr/node_modules/.bin/cosign import-key-pair --key=signing-raw.key --output-key-prefix=signing-cos\n    /bin/sh: /Users/sam/code/work/pepr/node_modules/.bin/cosign: Permission denied\n\u001b[2m\u001b[22m\n\u001b[2m\u001b[22m\n",
      "name": "/Users/sam/code/work/pepr/src/sdk/cosign.e2e.test.ts",
      "startTime": 1737148308211,
      "status": "failed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["pepr store tests", "when initializing the store"],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "pepr store tests when initializing the store should migrate and setup the watch (with schedule)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should migrate and setup the watch (with schedule)"
        },
        {
          "ancestorTitles": ["pepr store tests", "when initializing the store"],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "pepr store tests when initializing the store should create the store resource for a scheduled capability (without schedule)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should create the store resource for a scheduled capability (without schedule)"
        }
      ],
      "coverage": {},
      "endTime": 1737148365985,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/controller/store.test.ts",
      "startTime": 1737148365985,
      "status": "skipped",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "build",
            "builds a module",
            "using non-conflicting build override options"
          ],
          "duration": 0,
          "failureDetails": [
            {
              "errno": -2,
              "code": "ENOENT",
              "syscall": "rename",
              "path": "/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr.ts",
              "dest": "/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr2.ts"
            }
          ],
          "failureMessages": [
            "Error: ENOENT: no such file or directory, rename '/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr.ts' -> '/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr2.ts'\n    at Object.rename (node:internal/fs/promises:784:10)\n    at Object.<anonymous> (/Users/sam/code/work/pepr/integration/cli/build.nonconflict.test.ts:54:9)"
          ],
          "fullName": "build builds a module using non-conflicting build override options --entry-point, works",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "--entry-point, works"
        },
        {
          "ancestorTitles": [
            "build",
            "builds a module",
            "using non-conflicting build override options"
          ],
          "duration": 0,
          "failureDetails": [
            {
              "errno": -2,
              "code": "ENOENT",
              "syscall": "rename",
              "path": "/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr.ts",
              "dest": "/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr2.ts"
            }
          ],
          "failureMessages": [
            "Error: ENOENT: no such file or directory, rename '/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr.ts' -> '/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr2.ts'\n    at Object.rename (node:internal/fs/promises:784:10)\n    at Object.<anonymous> (/Users/sam/code/work/pepr/integration/cli/build.nonconflict.test.ts:54:9)"
          ],
          "fullName": "build builds a module using non-conflicting build override options --output-dir, works",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "--output-dir, works"
        },
        {
          "ancestorTitles": [
            "build",
            "builds a module",
            "using non-conflicting build override options"
          ],
          "duration": 0,
          "failureDetails": [
            {
              "errno": -2,
              "code": "ENOENT",
              "syscall": "rename",
              "path": "/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr.ts",
              "dest": "/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr2.ts"
            }
          ],
          "failureMessages": [
            "Error: ENOENT: no such file or directory, rename '/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr.ts' -> '/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr2.ts'\n    at Object.rename (node:internal/fs/promises:784:10)\n    at Object.<anonymous> (/Users/sam/code/work/pepr/integration/cli/build.nonconflict.test.ts:54:9)"
          ],
          "fullName": "build builds a module using non-conflicting build override options --custom-image, works",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "--custom-image, works"
        },
        {
          "ancestorTitles": [
            "build",
            "builds a module",
            "using non-conflicting build override options"
          ],
          "duration": 0,
          "failureDetails": [
            {
              "errno": -2,
              "code": "ENOENT",
              "syscall": "rename",
              "path": "/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr.ts",
              "dest": "/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr2.ts"
            }
          ],
          "failureMessages": [
            "Error: ENOENT: no such file or directory, rename '/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr.ts' -> '/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr2.ts'\n    at Object.rename (node:internal/fs/promises:784:10)\n    at Object.<anonymous> (/Users/sam/code/work/pepr/integration/cli/build.nonconflict.test.ts:54:9)"
          ],
          "fullName": "build builds a module using non-conflicting build override options --timeout, works",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "--timeout, works"
        },
        {
          "ancestorTitles": [
            "build",
            "builds a module",
            "using non-conflicting build override options"
          ],
          "duration": 0,
          "failureDetails": [
            {
              "errno": -2,
              "code": "ENOENT",
              "syscall": "rename",
              "path": "/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr.ts",
              "dest": "/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr2.ts"
            }
          ],
          "failureMessages": [
            "Error: ENOENT: no such file or directory, rename '/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr.ts' -> '/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr2.ts'\n    at Object.rename (node:internal/fs/promises:784:10)\n    at Object.<anonymous> (/Users/sam/code/work/pepr/integration/cli/build.nonconflict.test.ts:54:9)"
          ],
          "fullName": "build builds a module using non-conflicting build override options --withPullSecret, works",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "--withPullSecret, works"
        },
        {
          "ancestorTitles": [
            "build",
            "builds a module",
            "using non-conflicting build override options"
          ],
          "duration": 0,
          "failureDetails": [
            {
              "errno": -2,
              "code": "ENOENT",
              "syscall": "rename",
              "path": "/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr.ts",
              "dest": "/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr2.ts"
            }
          ],
          "failureMessages": [
            "Error: ENOENT: no such file or directory, rename '/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr.ts' -> '/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr2.ts'\n    at Object.rename (node:internal/fs/promises:784:10)\n    at Object.<anonymous> (/Users/sam/code/work/pepr/integration/cli/build.nonconflict.test.ts:54:9)"
          ],
          "fullName": "build builds a module using non-conflicting build override options --zarf, works",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "--zarf, works"
        }
      ],
      "endTime": 1737148336531,
      "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mbuild › builds a module › using non-conflicting build override options › --entry-point, works\u001b[39m\u001b[22m\n\n    ENOENT: no such file or directory, rename '/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr.ts' -> '/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr2.ts'\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 52 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 53 |\u001b[39m       beforeAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 54 |\u001b[39m         \u001b[36mawait\u001b[39m fs\u001b[33m.\u001b[39mrename(\u001b[32m`${testModule}/pepr.ts`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m`${testModule}/${entryPoint}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 55 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 56 |\u001b[39m         \u001b[36mconst\u001b[39m argz \u001b[33m=\u001b[39m [\u001b[22m\n\u001b[2m     \u001b[90m 57 |\u001b[39m           \u001b[32m`--entry-point ${entryPoint}`\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mintegration/cli/build.nonconflict.test.ts\u001b[39m\u001b[0m\u001b[2m:54:9)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mbuild › builds a module › using non-conflicting build override options › --output-dir, works\u001b[39m\u001b[22m\n\n    ENOENT: no such file or directory, rename '/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr.ts' -> '/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr2.ts'\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 52 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 53 |\u001b[39m       beforeAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 54 |\u001b[39m         \u001b[36mawait\u001b[39m fs\u001b[33m.\u001b[39mrename(\u001b[32m`${testModule}/pepr.ts`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m`${testModule}/${entryPoint}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 55 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 56 |\u001b[39m         \u001b[36mconst\u001b[39m argz \u001b[33m=\u001b[39m [\u001b[22m\n\u001b[2m     \u001b[90m 57 |\u001b[39m           \u001b[32m`--entry-point ${entryPoint}`\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mintegration/cli/build.nonconflict.test.ts\u001b[39m\u001b[0m\u001b[2m:54:9)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mbuild › builds a module › using non-conflicting build override options › --custom-image, works\u001b[39m\u001b[22m\n\n    ENOENT: no such file or directory, rename '/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr.ts' -> '/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr2.ts'\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 52 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 53 |\u001b[39m       beforeAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 54 |\u001b[39m         \u001b[36mawait\u001b[39m fs\u001b[33m.\u001b[39mrename(\u001b[32m`${testModule}/pepr.ts`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m`${testModule}/${entryPoint}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 55 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 56 |\u001b[39m         \u001b[36mconst\u001b[39m argz \u001b[33m=\u001b[39m [\u001b[22m\n\u001b[2m     \u001b[90m 57 |\u001b[39m           \u001b[32m`--entry-point ${entryPoint}`\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mintegration/cli/build.nonconflict.test.ts\u001b[39m\u001b[0m\u001b[2m:54:9)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mbuild › builds a module › using non-conflicting build override options › --timeout, works\u001b[39m\u001b[22m\n\n    ENOENT: no such file or directory, rename '/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr.ts' -> '/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr2.ts'\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 52 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 53 |\u001b[39m       beforeAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 54 |\u001b[39m         \u001b[36mawait\u001b[39m fs\u001b[33m.\u001b[39mrename(\u001b[32m`${testModule}/pepr.ts`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m`${testModule}/${entryPoint}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 55 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 56 |\u001b[39m         \u001b[36mconst\u001b[39m argz \u001b[33m=\u001b[39m [\u001b[22m\n\u001b[2m     \u001b[90m 57 |\u001b[39m           \u001b[32m`--entry-point ${entryPoint}`\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mintegration/cli/build.nonconflict.test.ts\u001b[39m\u001b[0m\u001b[2m:54:9)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mbuild › builds a module › using non-conflicting build override options › --withPullSecret, works\u001b[39m\u001b[22m\n\n    ENOENT: no such file or directory, rename '/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr.ts' -> '/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr2.ts'\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 52 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 53 |\u001b[39m       beforeAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 54 |\u001b[39m         \u001b[36mawait\u001b[39m fs\u001b[33m.\u001b[39mrename(\u001b[32m`${testModule}/pepr.ts`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m`${testModule}/${entryPoint}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 55 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 56 |\u001b[39m         \u001b[36mconst\u001b[39m argz \u001b[33m=\u001b[39m [\u001b[22m\n\u001b[2m     \u001b[90m 57 |\u001b[39m           \u001b[32m`--entry-point ${entryPoint}`\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mintegration/cli/build.nonconflict.test.ts\u001b[39m\u001b[0m\u001b[2m:54:9)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mbuild › builds a module › using non-conflicting build override options › --zarf, works\u001b[39m\u001b[22m\n\n    ENOENT: no such file or directory, rename '/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr.ts' -> '/Users/sam/code/work/pepr/integration/testroot/cli/build.nonconflict.test.ts/nonconflict/pepr2.ts'\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 52 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 53 |\u001b[39m       beforeAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 54 |\u001b[39m         \u001b[36mawait\u001b[39m fs\u001b[33m.\u001b[39mrename(\u001b[32m`${testModule}/pepr.ts`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m`${testModule}/${entryPoint}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 55 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 56 |\u001b[39m         \u001b[36mconst\u001b[39m argz \u001b[33m=\u001b[39m [\u001b[22m\n\u001b[2m     \u001b[90m 57 |\u001b[39m           \u001b[32m`--entry-point ${entryPoint}`\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mintegration/cli/build.nonconflict.test.ts\u001b[39m\u001b[0m\u001b[2m:54:9)\u001b[22m\u001b[2m\u001b[22m\n",
      "name": "/Users/sam/code/work/pepr/integration/cli/build.nonconflict.test.ts",
      "startTime": 1737148308629,
      "status": "failed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["build", "builds a module", "for use as a library"],
          "duration": 13286,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Error: Cannot find module\"\u001b[39m\nReceived string:    \u001b[31m\"Error formatting module: Error: Failed to load plugin '@typescript-eslint' declared in '.eslintrc.json': Cannot find module './configs/all'Require stack:- /Users/sam/code/work/pepr/integration/testroot/cli/build.noembed.test.ts/noembed/node_modules/@typescript-eslint/eslint-plugin/dist/index.js- /Users/sam/code/work/pepr/integration/testroot/.npm/_npx/11923dda8a4abc9a/node_modules/@eslint/eslintrc/dist/eslintrc.cjsReferenced from: /Users/sam/code/work/pepr/integration/testroot/cli/build.noembed.test.ts/noembed/.eslintrc.json\u001b[90m    at Function._resolveFilename (node:internal/modules/cjs/loader:1409:15)\u001b[39m\u001b[31m\u001b[90m    at defaultResolveImpl (node:internal/modules/cjs/loader:1060:19)\u001b[39m\u001b[31m\u001b[90m    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1065:22)\u001b[39m\u001b[31m\u001b[90m    at Function._load (node:internal/modules/cjs/loader:1214:37)\u001b[39m\u001b[31m\u001b[90m    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\u001b[39m\u001b[31m\u001b[90m    at wrapModuleLoad (node:internal/modules/cjs/loader:234:24)\u001b[39m\u001b[31m\u001b[90m    at Module.require (node:internal/modules/cjs/loader:1495:12)\u001b[39m\u001b[31m\u001b[90m    at require (node:internal/modules/helpers:135:16)\u001b[39m\u001b[31m    at Object.<anonymous> \u001b[90m(/Users/sam/code/work/pepr/integration/testroot/cli/build.noembed.test.ts/noembed/\u001b[39m\u001b[31mnode_modules/\u001b[4m@typescript-eslint\u001b[24m/eslint-plugin/dist/index.js:5:31\u001b[90m)\u001b[39m\u001b[31m\u001b[90m    at Module._compile (node:internal/modules/cjs/loader:1739:14)\u001b[39m\u001b[31m {  code: \u001b[32m'MODULE_NOT_FOUND'\u001b[39m\u001b[31m,  requireStack: [    \u001b[32m'/Users/sam/code/work/pepr/integration/testroot/cli/build.noembed.test.ts/noembed/node_modules/@typescript-eslint/eslint-plugin/dist/index.js'\u001b[39m\u001b[31m,    \u001b[32m'/Users/sam/code/work/pepr/integration/testroot/.npm/_npx/11923dda8a4abc9a/node_modules/@eslint/eslintrc/dist/eslintrc.cjs'\u001b[39m\u001b[31m  ]}Error building module: Error: Command failed: /Users/sam/code/work/pepr/integration/testroot/cli/build.noembed.test.ts/noembed/node_modules/.bin/tsc --project /Users/sam/code/work/pepr/integration/testroot/cli/build.noembed.test.ts/noembed/tsconfig.json --outdir dist\u001b[90m    at genericNodeError (node:internal/errors:983:15)\u001b[39m\u001b[31m\u001b[90m    at wrappedFn (node:internal/errors:537:14)\u001b[39m\u001b[31m\u001b[90m    at checkExecSyncError (node:child_process:882:11)\u001b[39m\u001b[31m\u001b[90m    at execFileSync (node:child_process:918:15)\u001b[39m\u001b[31m    at buildModule (/Users/sam/code/work/pepr/integration/testroot/.npm/_npx/11923dda8a4abc9a/node_modules/\u001b[4mpepr\u001b[24m/dist/cli.js:2375:44)    at async Command.<anonymous> (/Users/sam/code/work/pepr/integration/testroot/.npm/_npx/11923dda8a4abc9a/node_modules/\u001b[4mpepr\u001b[24m/dist/cli.js:2296:31) {  status: \u001b[33m1\u001b[39m\u001b[31m,  signal: \u001b[1mnull\u001b[22m,  output: [    \u001b[1mnull\u001b[22m,    <Buffer 6e 6f 64 65 5f 6d 6f 64 75 6c 65 73 2f 40 6b 75 62 65 72 6e 65 74 65 73 2f 63 6c 69 65 6e 74 2d 6e 6f 64 65 2f 64 69 73 74 2f 65 78 65 63 2e 64 2e 74 ... 116099 more bytes>,    <Buffer >  ],  pid: \u001b[33m5788\u001b[39m\u001b[31m,  stdout: <Buffer 6e 6f 64 65 5f 6d 6f 64 75 6c 65 73 2f 40 6b 75 62 65 72 6e 65 74 65 73 2f 63 6c 69 65 6e 74 2d 6e 6f 64 65 2f 64 69 73 74 2f 65 78 65 63 2e 64 2e 74 ... 116099 more bytes>,  stderr: <Buffer >}\"\u001b[39m",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Error: Cannot find module\"\u001b[39m\nReceived string:    \u001b[31m\"Error formatting module: Error: Failed to load plugin '@typescript-eslint' declared in '.eslintrc.json': Cannot find module './configs/all'Require stack:- /Users/sam/code/work/pepr/integration/testroot/cli/build.noembed.test.ts/noembed/node_modules/@typescript-eslint/eslint-plugin/dist/index.js- /Users/sam/code/work/pepr/integration/testroot/.npm/_npx/11923dda8a4abc9a/node_modules/@eslint/eslintrc/dist/eslintrc.cjsReferenced from: /Users/sam/code/work/pepr/integration/testroot/cli/build.noembed.test.ts/noembed/.eslintrc.json\u001b[90m    at Function._resolveFilename (node:internal/modules/cjs/loader:1409:15)\u001b[39m\u001b[31m\u001b[90m    at defaultResolveImpl (node:internal/modules/cjs/loader:1060:19)\u001b[39m\u001b[31m\u001b[90m    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1065:22)\u001b[39m\u001b[31m\u001b[90m    at Function._load (node:internal/modules/cjs/loader:1214:37)\u001b[39m\u001b[31m\u001b[90m    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\u001b[39m\u001b[31m\u001b[90m    at wrapModuleLoad (node:internal/modules/cjs/loader:234:24)\u001b[39m\u001b[31m\u001b[90m    at Module.require (node:internal/modules/cjs/loader:1495:12)\u001b[39m\u001b[31m\u001b[90m    at require (node:internal/modules/helpers:135:16)\u001b[39m\u001b[31m    at Object.<anonymous> \u001b[90m(/Users/sam/code/work/pepr/integration/testroot/cli/build.noembed.test.ts/noembed/\u001b[39m\u001b[31mnode_modules/\u001b[4m@typescript-eslint\u001b[24m/eslint-plugin/dist/index.js:5:31\u001b[90m)\u001b[39m\u001b[31m\u001b[90m    at Module._compile (node:internal/modules/cjs/loader:1739:14)\u001b[39m\u001b[31m {  code: \u001b[32m'MODULE_NOT_FOUND'\u001b[39m\u001b[31m,  requireStack: [    \u001b[32m'/Users/sam/code/work/pepr/integration/testroot/cli/build.noembed.test.ts/noembed/node_modules/@typescript-eslint/eslint-plugin/dist/index.js'\u001b[39m\u001b[31m,    \u001b[32m'/Users/sam/code/work/pepr/integration/testroot/.npm/_npx/11923dda8a4abc9a/node_modules/@eslint/eslintrc/dist/eslintrc.cjs'\u001b[39m\u001b[31m  ]}Error building module: Error: Command failed: /Users/sam/code/work/pepr/integration/testroot/cli/build.noembed.test.ts/noembed/node_modules/.bin/tsc --project /Users/sam/code/work/pepr/integration/testroot/cli/build.noembed.test.ts/noembed/tsconfig.json --outdir dist\u001b[90m    at genericNodeError (node:internal/errors:983:15)\u001b[39m\u001b[31m\u001b[90m    at wrappedFn (node:internal/errors:537:14)\u001b[39m\u001b[31m\u001b[90m    at checkExecSyncError (node:child_process:882:11)\u001b[39m\u001b[31m\u001b[90m    at execFileSync (node:child_process:918:15)\u001b[39m\u001b[31m    at buildModule (/Users/sam/code/work/pepr/integration/testroot/.npm/_npx/11923dda8a4abc9a/node_modules/\u001b[4mpepr\u001b[24m/dist/cli.js:2375:44)    at async Command.<anonymous> (/Users/sam/code/work/pepr/integration/testroot/.npm/_npx/11923dda8a4abc9a/node_modules/\u001b[4mpepr\u001b[24m/dist/cli.js:2296:31) {  status: \u001b[33m1\u001b[39m\u001b[31m,  signal: \u001b[1mnull\u001b[22m,  output: [    \u001b[1mnull\u001b[22m,    <Buffer 6e 6f 64 65 5f 6d 6f 64 75 6c 65 73 2f 40 6b 75 62 65 72 6e 65 74 65 73 2f 63 6c 69 65 6e 74 2d 6e 6f 64 65 2f 64 69 73 74 2f 65 78 65 63 2e 64 2e 74 ... 116099 more bytes>,    <Buffer >  ],  pid: \u001b[33m5788\u001b[39m\u001b[31m,  stdout: <Buffer 6e 6f 64 65 5f 6d 6f 64 75 6c 65 73 2f 40 6b 75 62 65 72 6e 65 74 65 73 2f 63 6c 69 65 6e 74 2d 6e 6f 64 65 2f 64 69 73 74 2f 65 78 65 63 2e 64 2e 74 ... 116099 more bytes>,  stderr: <Buffer >}\"\u001b[39m\n    at Object.<anonymous> (/Users/sam/code/work/pepr/integration/cli/build.noembed.test.ts:51:48)"
          ],
          "fullName": "build builds a module for use as a library builds",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "failed",
          "title": "builds"
        },
        {
          "ancestorTitles": ["build", "builds a module", "for use as a library"],
          "duration": 1,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/Users/sam/code/work/pepr/integration/cli/build.noembed.test.ts:81:38)\n    at Promise.then.completed (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:121:9)\n    at run (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/opt/homebrew/lib/node_modules/jest/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/opt/homebrew/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/opt/homebrew/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/opt/homebrew/lib/node_modules/jest/node_modules/jest-runner/build/testWorker.js:106:12)"
          ],
          "fullName": "build builds a module for use as a library outputs appropriate configuration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "failed",
          "title": "outputs appropriate configuration"
        }
      ],
      "endTime": 1737148347594,
      "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mbuild › builds a module › for use as a library › builds\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected substring: \u001b[32m\"Error: Cannot find module\"\u001b[39m\n    Received string:    \u001b[31m\"Error formatting module: Error: Failed to load plugin '@typescript-eslint' declared in '.eslintrc.json': Cannot find module './configs/all'Require stack:- /Users/sam/code/work/pepr/integration/testroot/cli/build.noembed.test.ts/noembed/node_modules/@typescript-eslint/eslint-plugin/dist/index.js- /Users/sam/code/work/pepr/integration/testroot/.npm/_npx/11923dda8a4abc9a/node_modules/@eslint/eslintrc/dist/eslintrc.cjsReferenced from: /Users/sam/code/work/pepr/integration/testroot/cli/build.noembed.test.ts/noembed/.eslintrc.json\u001b[90m    at Function._resolveFilename (node:internal/modules/cjs/loader:1409:15)\u001b[39m\u001b[31m\u001b[90m    at defaultResolveImpl (node:internal/modules/cjs/loader:1060:19)\u001b[39m\u001b[31m\u001b[90m    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1065:22)\u001b[39m\u001b[31m\u001b[90m    at Function._load (node:internal/modules/cjs/loader:1214:37)\u001b[39m\u001b[31m\u001b[90m    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\u001b[39m\u001b[31m\u001b[90m    at wrapModuleLoad (node:internal/modules/cjs/loader:234:24)\u001b[39m\u001b[31m\u001b[90m    at Module.require (node:internal/modules/cjs/loader:1495:12)\u001b[39m\u001b[31m\u001b[90m    at require (node:internal/modules/helpers:135:16)\u001b[39m\u001b[31m    at Object.<anonymous> \u001b[90m(/Users/sam/code/work/pepr/integration/testroot/cli/build.noembed.test.ts/noembed/\u001b[39m\u001b[31mnode_modules/\u001b[4m@typescript-eslint\u001b[24m/eslint-plugin/dist/index.js:5:31\u001b[90m)\u001b[39m\u001b[31m\u001b[90m    at Module._compile (node:internal/modules/cjs/loader:1739:14)\u001b[39m\u001b[31m {  code: \u001b[32m'MODULE_NOT_FOUND'\u001b[39m\u001b[31m,  requireStack: [    \u001b[32m'/Users/sam/code/work/pepr/integration/testroot/cli/build.noembed.test.ts/noembed/node_modules/@typescript-eslint/eslint-plugin/dist/index.js'\u001b[39m\u001b[31m,    \u001b[32m'/Users/sam/code/work/pepr/integration/testroot/.npm/_npx/11923dda8a4abc9a/node_modules/@eslint/eslintrc/dist/eslintrc.cjs'\u001b[39m\u001b[31m  ]}Error building module: Error: Command failed: /Users/sam/code/work/pepr/integration/testroot/cli/build.noembed.test.ts/noembed/node_modules/.bin/tsc --project /Users/sam/code/work/pepr/integration/testroot/cli/build.noembed.test.ts/noembed/tsconfig.json --outdir dist\u001b[90m    at genericNodeError (node:internal/errors:983:15)\u001b[39m\u001b[31m\u001b[90m    at wrappedFn (node:internal/errors:537:14)\u001b[39m\u001b[31m\u001b[90m    at checkExecSyncError (node:child_process:882:11)\u001b[39m\u001b[31m\u001b[90m    at execFileSync (node:child_process:918:15)\u001b[39m\u001b[31m    at buildModule (/Users/sam/code/work/pepr/integration/testroot/.npm/_npx/11923dda8a4abc9a/node_modules/\u001b[4mpepr\u001b[24m/dist/cli.js:2375:44)    at async Command.<anonymous> (/Users/sam/code/work/pepr/integration/testroot/.npm/_npx/11923dda8a4abc9a/node_modules/\u001b[4mpepr\u001b[24m/dist/cli.js:2296:31) {  status: \u001b[33m1\u001b[39m\u001b[31m,  signal: \u001b[1mnull\u001b[22m,  output: [    \u001b[1mnull\u001b[22m,    <Buffer 6e 6f 64 65 5f 6d 6f 64 75 6c 65 73 2f 40 6b 75 62 65 72 6e 65 74 65 73 2f 63 6c 69 65 6e 74 2d 6e 6f 64 65 2f 64 69 73 74 2f 65 78 65 63 2e 64 2e 74 ... 116099 more bytes>,    <Buffer >  ],  pid: \u001b[33m5788\u001b[39m\u001b[31m,  stdout: <Buffer 6e 6f 64 65 5f 6d 6f 64 75 6c 65 73 2f 40 6b 75 62 65 72 6e 65 74 65 73 2f 63 6c 69 65 6e 74 2d 6e 6f 64 65 2f 64 69 73 74 2f 65 78 65 63 2e 64 2e 74 ... 116099 more bytes>,  stderr: <Buffer >}\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 49 |\u001b[39m           \u001b[36mconst\u001b[39m build \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m pepr\u001b[33m.\u001b[39mcli(testModule\u001b[33m,\u001b[39m { cmd\u001b[33m:\u001b[39m \u001b[32m`pepr build ${argz}`\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 50 |\u001b[39m           expect(build\u001b[33m.\u001b[39mexitcode)\u001b[33m.\u001b[39mtoBe(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 51 |\u001b[39m           expect(build\u001b[33m.\u001b[39mstderr\u001b[33m.\u001b[39mjoin(\u001b[32m\"\"\u001b[39m)\u001b[33m.\u001b[39mtrim())\u001b[33m.\u001b[39mtoContain(\u001b[32m\"Error: Cannot find module\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 52 |\u001b[39m           expect(build\u001b[33m.\u001b[39mstdout\u001b[33m.\u001b[39mjoin(\u001b[32m\"\"\u001b[39m)\u001b[33m.\u001b[39mtrim())\u001b[33m.\u001b[39mtoContain(\u001b[32m\"\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 53 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 54 |\u001b[39m           packageJson \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m resource\u001b[33m.\u001b[39mfromFile(\u001b[32m`${testModule}/package.json`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mintegration/cli/build.noembed.test.ts\u001b[39m\u001b[0m\u001b[2m:51:48)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mbuild › builds a module › for use as a library › outputs appropriate configuration\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 79 |\u001b[39m           ]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 80 |\u001b[39m           \u001b[36mfor\u001b[39m (\u001b[36mconst\u001b[39m path \u001b[36mof\u001b[39m found) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 81 |\u001b[39m             expect(existsSync(path))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 82 |\u001b[39m           }\u001b[22m\n\u001b[2m     \u001b[90m 83 |\u001b[39m         }\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 84 |\u001b[39m         time\u001b[33m.\u001b[39mtoMs(\u001b[32m\"1m\"\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mintegration/cli/build.noembed.test.ts\u001b[39m\u001b[0m\u001b[2m:81:38)\u001b[22m\u001b[2m\u001b[22m\n",
      "name": "/Users/sam/code/work/pepr/integration/cli/build.noembed.test.ts",
      "startTime": 1737148313424,
      "status": "failed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["build", "builds a module", "using default build options"],
          "duration": 7390,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": 1,
                "expected": 0,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m0\u001b[39m\nReceived: \u001b[31m1\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m0\u001b[39m\nReceived: \u001b[31m1\u001b[39m\n    at Object.<anonymous> (/Users/sam/code/work/pepr/integration/cli/build.defaults.test.ts:44:34)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "fullName": "build builds a module using default build options builds",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "builds"
        }
      ],
      "endTime": 1737148350316,
      "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mbuild › builds a module › using default build options › builds\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m0\u001b[39m\n    Received: \u001b[31m1\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 42 |\u001b[39m         \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 43 |\u001b[39m           \u001b[36mconst\u001b[39m build \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m pepr\u001b[33m.\u001b[39mcli(testModule\u001b[33m,\u001b[39m { cmd\u001b[33m:\u001b[39m \u001b[32m`pepr build`\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 44 |\u001b[39m           expect(build\u001b[33m.\u001b[39mexitcode)\u001b[33m.\u001b[39mtoBe(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 45 |\u001b[39m           expect(build\u001b[33m.\u001b[39mstderr\u001b[33m.\u001b[39mjoin(\u001b[32m\"\"\u001b[39m)\u001b[33m.\u001b[39mtrim())\u001b[33m.\u001b[39mtoBe(\u001b[32m\"\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 46 |\u001b[39m           expect(build\u001b[33m.\u001b[39mstdout\u001b[33m.\u001b[39mjoin(\u001b[32m\"\"\u001b[39m)\u001b[33m.\u001b[39mtrim())\u001b[33m.\u001b[39mtoContain(\u001b[32m\"K8s resource for the module saved\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 47 |\u001b[39m         }\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mintegration/cli/build.defaults.test.ts\u001b[39m\u001b[0m\u001b[2m:44:34)\u001b[22m\u001b[2m\u001b[22m\n",
      "name": "/Users/sam/code/work/pepr/integration/cli/build.defaults.test.ts",
      "startTime": 1737148313941,
      "status": "failed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["build", "builds a module", "using a custom registry"],
          "duration": 19543,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "build builds a module using a custom registry builds",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "builds"
        },
        {
          "ancestorTitles": ["build", "builds a module", "using a custom registry"],
          "duration": 27,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "build builds a module using a custom registry outputs appropriate configuration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "outputs appropriate configuration"
        }
      ],
      "endTime": 1737148357362,
      "message": "",
      "name": "/Users/sam/code/work/pepr/integration/cli/build.registryinfo.test.ts",
      "startTime": 1737148312764,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["build"],
          "duration": 7755,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "build gives command line help",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "gives command line help"
        }
      ],
      "endTime": 1737148358227,
      "message": "",
      "name": "/Users/sam/code/work/pepr/integration/cli/build.help.test.ts",
      "startTime": 1737148350323,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["init"],
          "duration": 2645,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "init gives command line help",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "gives command line help"
        },
        {
          "ancestorTitles": ["init"],
          "duration": 7910,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "init creates new module using input args",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "creates new module using input args"
        }
      ],
      "endTime": 1737148358380,
      "message": "",
      "name": "/Users/sam/code/work/pepr/integration/cli/init.test.ts",
      "startTime": 1737148347603,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["when processing input", "walkthough() returns expected results"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "when processing input walkthough() returns expected results when the set flags are: [ 'description', 'errorBehavior' ]",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "when the set flags are: [ 'description', 'errorBehavior' ]"
        },
        {
          "ancestorTitles": ["when processing input", "walkthough() returns expected results"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "when processing input walkthough() returns expected results when the set flags are: [ 'description' ]",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "when the set flags are: [ 'description' ]"
        },
        {
          "ancestorTitles": ["when processing input", "walkthough() returns expected results"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "when processing input walkthough() returns expected results when the set flags are: [ 'errorBehavior' ]",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "when the set flags are: [ 'errorBehavior' ]"
        },
        {
          "ancestorTitles": ["when processing input", "walkthough() returns expected results"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "when processing input walkthough() returns expected results when the set flags are: [ 'name', 'description', 'errorBehavior' ]",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "when the set flags are: [ 'name', 'description', 'errorBehavior' ]"
        },
        {
          "ancestorTitles": ["when processing input", "walkthough() returns expected results"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "when processing input walkthough() returns expected results when the set flags are: [ 'name', 'description' ]",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "when the set flags are: [ 'name', 'description' ]"
        },
        {
          "ancestorTitles": ["when processing input", "walkthough() returns expected results"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "when processing input walkthough() returns expected results when the set flags are: [ 'name', 'errorBehavior' ]",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "when the set flags are: [ 'name', 'errorBehavior' ]"
        },
        {
          "ancestorTitles": ["when processing input", "walkthough() returns expected results"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "when processing input walkthough() returns expected results when the set flags are: [ 'name' ]",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "when the set flags are: [ 'name' ]"
        },
        {
          "ancestorTitles": ["when processing input", "walkthough() returns expected results"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "when processing input walkthough() returns expected results when the set flags are: undefined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "when the set flags are: undefined"
        },
        {
          "ancestorTitles": ["when processing input", "walkthough() returns expected results"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "when processing input walkthough() returns expected results should prompt for input when given invalid input",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should prompt for input when given invalid input"
        },
        {
          "ancestorTitles": ["when processing input", "walkthough() returns expected results"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "when processing input walkthough() returns expected results should prompt for errorBehavior when given invalid input",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should prompt for errorBehavior when given invalid input"
        },
        {
          "ancestorTitles": ["when processing input", "confirm() handles input"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "when processing input confirm() handles input when prompt input is 'n'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "when prompt input is 'n'"
        },
        {
          "ancestorTitles": ["when processing input", "confirm() handles input"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "when processing input confirm() handles input when prompt input is 'no'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "when prompt input is 'no'"
        },
        {
          "ancestorTitles": ["when processing input", "confirm() handles input"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "when processing input confirm() handles input when prompt input is 'y'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "when prompt input is 'y'"
        },
        {
          "ancestorTitles": ["when processing input", "confirm() handles input"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "when processing input confirm() handles input when prompt input is 'yes'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "when prompt input is 'yes'"
        },
        {
          "ancestorTitles": ["when processing input", "confirm() handles input"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "when processing input confirm() handles input when flag '--confirm' is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "when flag '--confirm' is true"
        },
        {
          "ancestorTitles": ["when processing input", "confirm() handles input"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "when processing input confirm() handles input when flag '--confirm' is false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "when flag '--confirm' is false"
        }
      ],
      "endTime": 1737148359262,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/cli/init/walkthrough.test.ts",
      "startTime": 1737148358385,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["tls"],
          "duration": 1173,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "tls genTLS should generate a valid TLSOut object",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "genTLS should generate a valid TLSOut object"
        }
      ],
      "endTime": 1737148359445,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/tls.test.ts",
      "startTime": 1737148358231,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["validateCapabilityNames Property-Based Tests"],
          "duration": 77,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "validateCapabilityNames Property-Based Tests should only accept names that are valid after sanitation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 100,
          "retryReasons": [],
          "status": "passed",
          "title": "should only accept names that are valid after sanitation"
        },
        {
          "ancestorTitles": ["validateCapabilityNames"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "validateCapabilityNames should return true if all capability names are valid",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true if all capability names are valid"
        },
        {
          "ancestorTitles": ["validateCapabilityNames"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "validateCapabilityNames should throw an error if a capability name is invalid",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an error if a capability name is invalid"
        },
        {
          "ancestorTitles": ["validateCapabilityNames"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "validateCapabilityNames should ignore when capabilities are not loaded",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should ignore when capabilities are not loaded"
        },
        {
          "ancestorTitles": ["createRBACMap"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "createRBACMap should return the correct RBACMap for given capabilities",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return the correct RBACMap for given capabilities"
        },
        {
          "ancestorTitles": ["hasAnyOverlap"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "hasAnyOverlap returns true for overlapping arrays",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns true for overlapping arrays"
        },
        {
          "ancestorTitles": ["hasAnyOverlap"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "hasAnyOverlap returns false for non-overlapping arrays",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns false for non-overlapping arrays"
        },
        {
          "ancestorTitles": ["hasAnyOverlap"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "hasAnyOverlap returns false for empty arrays",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns false for empty arrays"
        },
        {
          "ancestorTitles": ["hasAnyOverlap"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "hasAnyOverlap returns false for two empty arrays",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns false for two empty arrays"
        },
        {
          "ancestorTitles": ["hasEveryOverlap"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "hasEveryOverlap returns true if all elements in array1 are in array2",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns true if all elements in array1 are in array2"
        },
        {
          "ancestorTitles": ["hasEveryOverlap"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "hasEveryOverlap returns false if any element in array1 is not in array2",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns false if any element in array1 is not in array2"
        },
        {
          "ancestorTitles": ["hasEveryOverlap"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "hasEveryOverlap returns true if array1 is empty",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns true if array1 is empty"
        },
        {
          "ancestorTitles": ["hasEveryOverlap"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "hasEveryOverlap returns false if array2 is empty",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns false if array2 is empty"
        },
        {
          "ancestorTitles": ["hasEveryOverlap"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "hasEveryOverlap returns true if both arrays are empty",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns true if both arrays are empty"
        },
        {
          "ancestorTitles": ["ignoredNamespaceConflict"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ignoredNamespaceConflict returns true if there is an overlap",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns true if there is an overlap"
        },
        {
          "ancestorTitles": ["ignoredNamespaceConflict"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ignoredNamespaceConflict returns false if there is no overlap",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns false if there is no overlap"
        },
        {
          "ancestorTitles": ["ignoredNamespaceConflict"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ignoredNamespaceConflict returns false if either array is empty",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns false if either array is empty"
        },
        {
          "ancestorTitles": ["ignoredNamespaceConflict"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ignoredNamespaceConflict returns false if both arrays are empty",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns false if both arrays are empty"
        },
        {
          "ancestorTitles": ["bindingAndCapabilityNSConflict"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "bindingAndCapabilityNSConflict returns false if capabilityNamespaces is empty",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns false if capabilityNamespaces is empty"
        },
        {
          "ancestorTitles": ["bindingAndCapabilityNSConflict"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "bindingAndCapabilityNSConflict returns true if capability namespaces are not empty and there is no overlap with binding namespaces",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns true if capability namespaces are not empty and there is no overlap with binding namespaces"
        },
        {
          "ancestorTitles": ["bindingAndCapabilityNSConflict"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "bindingAndCapabilityNSConflict returns true if capability namespaces are not empty and there is an overlap",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns true if capability namespaces are not empty and there is an overlap"
        },
        {
          "ancestorTitles": ["bindingAndCapabilityNSConflict"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "bindingAndCapabilityNSConflict returns false if both arrays are empty",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns false if both arrays are empty"
        },
        {
          "ancestorTitles": ["generateWatchNamespaceError"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "generateWatchNamespaceError returns error for ignored namespace conflict",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns error for ignored namespace conflict"
        },
        {
          "ancestorTitles": ["generateWatchNamespaceError"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "generateWatchNamespaceError returns error for binding and capability namespace conflict",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns error for binding and capability namespace conflict"
        },
        {
          "ancestorTitles": ["generateWatchNamespaceError"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "generateWatchNamespaceError returns combined error for both conflicts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns combined error for both conflicts"
        },
        {
          "ancestorTitles": ["generateWatchNamespaceError"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "generateWatchNamespaceError returns empty string when there are no conflicts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns empty string when there are no conflicts"
        },
        {
          "ancestorTitles": ["namespaceComplianceValidator"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "namespaceComplianceValidator should throw error for invalid regex namespaces",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw error for invalid regex namespaces"
        },
        {
          "ancestorTitles": ["namespaceComplianceValidator"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "namespaceComplianceValidator should not throw an error for valid regex namespaces",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not throw an error for valid regex namespaces"
        },
        {
          "ancestorTitles": ["namespaceComplianceValidator"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "namespaceComplianceValidator should throw error for invalid regex ignored namespaces",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw error for invalid regex ignored namespaces"
        },
        {
          "ancestorTitles": ["namespaceComplianceValidator"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "namespaceComplianceValidator should not throw an error for valid regex ignored namespaces",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not throw an error for valid regex ignored namespaces"
        },
        {
          "ancestorTitles": ["namespaceComplianceValidator"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "namespaceComplianceValidator should not throw an error for valid namespaces",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not throw an error for valid namespaces"
        },
        {
          "ancestorTitles": ["namespaceComplianceValidator"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "namespaceComplianceValidator should throw an error for binding namespace using a non capability namespace",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an error for binding namespace using a non capability namespace"
        },
        {
          "ancestorTitles": ["namespaceComplianceValidator"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "namespaceComplianceValidator should throw an error for binding namespace using an ignored namespace: Part 1",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an error for binding namespace using an ignored namespace: Part 1"
        },
        {
          "ancestorTitles": ["namespaceComplianceValidator"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "namespaceComplianceValidator should throw an error for binding namespace using an ignored namespace: Part 2",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an error for binding namespace using an ignored namespace: Part 2"
        },
        {
          "ancestorTitles": ["parseTimeout"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "parseTimeout should return a number when a valid string number between 1 and 30 is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a number when a valid string number between 1 and 30 is provided"
        },
        {
          "ancestorTitles": ["parseTimeout"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "parseTimeout should throw an InvalidArgumentError for non-numeric strings",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an InvalidArgumentError for non-numeric strings"
        },
        {
          "ancestorTitles": ["parseTimeout"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "parseTimeout should throw an InvalidArgumentError for numbers outside the 1-30 range",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an InvalidArgumentError for numbers outside the 1-30 range"
        },
        {
          "ancestorTitles": ["parseTimeout"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "parseTimeout should throw an InvalidArgumentError for numeric strings that represent floating point numbers",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an InvalidArgumentError for numeric strings that represent floating point numbers"
        },
        {
          "ancestorTitles": ["secretOverLimit"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "secretOverLimit should return true for a string larger than 1MiB",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true for a string larger than 1MiB"
        },
        {
          "ancestorTitles": ["secretOverLimit"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "secretOverLimit should return false for a string smaller than 1MiB",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false for a string smaller than 1MiB"
        },
        {
          "ancestorTitles": ["dedent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "dedent removes leading spaces based on the smallest indentation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "removes leading spaces based on the smallest indentation"
        },
        {
          "ancestorTitles": ["dedent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "dedent does not remove internal spacing of lines",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not remove internal spacing of lines"
        },
        {
          "ancestorTitles": ["dedent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "dedent handles strings without leading whitespace consistently",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles strings without leading whitespace consistently"
        },
        {
          "ancestorTitles": ["dedent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "dedent handles empty strings without crashing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles empty strings without crashing"
        },
        {
          "ancestorTitles": ["replaceString"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "replaceString replaces single instance of a string",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "replaces single instance of a string"
        },
        {
          "ancestorTitles": ["replaceString"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "replaceString replaces multiple instances of a string",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "replaces multiple instances of a string"
        },
        {
          "ancestorTitles": ["replaceString"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "replaceString does nothing if string to replace is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does nothing if string to replace is not found"
        },
        {
          "ancestorTitles": ["replaceString"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "replaceString escapes special regex characters in string to be replaced",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "escapes special regex characters in string to be replaced"
        },
        {
          "ancestorTitles": ["replaceString"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "replaceString replaces string with empty string if stringB is empty",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "replaces string with empty string if stringB is empty"
        },
        {
          "ancestorTitles": ["validateHash"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "validateHash should throw ValidationError for invalid hash values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw ValidationError for invalid hash values"
        },
        {
          "ancestorTitles": ["validateHash"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "validateHash should not throw ValidationError for valid SHA-256 hash",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not throw ValidationError for valid SHA-256 hash"
        },
        {
          "ancestorTitles": ["matchesRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "matchesRegex should return true for a valid pattern that matches the string",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true for a valid pattern that matches the string"
        },
        {
          "ancestorTitles": ["matchesRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "matchesRegex should return false for a valid pattern that does not match the string",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false for a valid pattern that does not match the string"
        },
        {
          "ancestorTitles": ["matchesRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "matchesRegex should return false for an invalid regex pattern",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false for an invalid regex pattern"
        },
        {
          "ancestorTitles": ["matchesRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "matchesRegex should return true for an empty string matching an empty regex",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true for an empty string matching an empty regex"
        },
        {
          "ancestorTitles": ["matchesRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "matchesRegex should return false for an empty string and a non-empty regex",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false for an empty string and a non-empty regex"
        },
        {
          "ancestorTitles": ["matchesRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "matchesRegex should return true for a complex valid regex that matches",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true for a complex valid regex that matches"
        },
        {
          "ancestorTitles": ["matchesRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "matchesRegex should return false for a complex valid regex that does not match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false for a complex valid regex that does not match"
        }
      ],
      "endTime": 1737148359783,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/helpers.test.ts",
      "startTime": 1737148359265,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Queue"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Queue is uniquely identifiable",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "is uniquely identifiable"
        },
        {
          "ancestorTitles": ["Queue"],
          "duration": 408,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Queue exposes runtime stats",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 9,
          "retryReasons": [],
          "status": "passed",
          "title": "exposes runtime stats"
        },
        {
          "ancestorTitles": ["Queue"],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Queue resolves when an enqueued event dequeues without error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "resolves when an enqueued event dequeues without error"
        },
        {
          "ancestorTitles": ["Queue"],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Queue rejects when an enqueued event dequeues with error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "rejects when an enqueued event dequeues with error"
        },
        {
          "ancestorTitles": ["Queue"],
          "duration": 35,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Queue processes events in FIFO order",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "processes events in FIFO order"
        }
      ],
      "endTime": 1737148360005,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/core/queue.test.ts",
      "startTime": 1737148359448,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "constructor initializes counters correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "constructor initializes counters correctly"
        },
        {
          "ancestorTitles": [],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "error method increments error counter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "error method increments error counter"
        },
        {
          "ancestorTitles": [],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "alert method increments alerts counter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "alert method increments alerts counter"
        },
        {
          "ancestorTitles": [],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "observeStart returns current timestamp",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "observeStart returns current timestamp"
        },
        {
          "ancestorTitles": [],
          "duration": 204,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "observeEnd updates summary",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "observeEnd updates summary"
        },
        {
          "ancestorTitles": [],
          "duration": 103,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "coverage tests, with duplicate counters, default prefix (pepr) and still works properly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "coverage tests, with duplicate counters, default prefix (pepr) and still works properly"
        },
        {
          "ancestorTitles": [],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "incCacheMiss increments cache miss gauge",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "incCacheMiss increments cache miss gauge"
        },
        {
          "ancestorTitles": [],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "incRetryCount increments retry count gauge",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "incRetryCount increments retry count gauge"
        },
        {
          "ancestorTitles": [],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "initCacheMissWindow initializes cache miss gauge to zero",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "initCacheMissWindow initializes cache miss gauge to zero"
        },
        {
          "ancestorTitles": [],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "should initialize cache miss window and maintain size limit",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should initialize cache miss window and maintain size limit"
        }
      ],
      "endTime": 1737148360509,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/telemetry/metrics.test.ts",
      "startTime": 1737148360008,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["WatchProcessor"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "WatchProcessor should setup watches for all bindings with isWatch=true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should setup watches for all bindings with isWatch=true"
        },
        {
          "ancestorTitles": ["WatchProcessor"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "WatchProcessor should not setup watches if capabilities array is empty",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not setup watches if capabilities array is empty"
        },
        {
          "ancestorTitles": ["WatchProcessor"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "WatchProcessor should not setup watches if no bindings are present",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not setup watches if no bindings are present"
        },
        {
          "ancestorTitles": ["WatchProcessor"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "WatchProcessor should exit if the watch fails to start",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should exit if the watch fails to start"
        },
        {
          "ancestorTitles": ["WatchProcessor"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "WatchProcessor should watch for the give_up event",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "should watch for the give_up event"
        },
        {
          "ancestorTitles": ["WatchProcessor"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "WatchProcessor should setup watches with correct phases for different events",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 15,
          "retryReasons": [],
          "status": "passed",
          "title": "should setup watches with correct phases for different events"
        },
        {
          "ancestorTitles": ["WatchProcessor"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "WatchProcessor should call the metricsCollector methods on respective events",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should call the metricsCollector methods on respective events"
        },
        {
          "ancestorTitles": ["WatchProcessor"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "WatchProcessor should call parseInt with process.env.PEPR_RELIST_INTERVAL_SECONDS",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should call parseInt with process.env.PEPR_RELIST_INTERVAL_SECONDS"
        },
        {
          "ancestorTitles": ["logEvent function"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "logEvent function should handle data events",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle data events"
        },
        {
          "ancestorTitles": ["logEvent function"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "logEvent function should handle CONNECT events",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle CONNECT events"
        },
        {
          "ancestorTitles": ["logEvent function"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "logEvent function should handle LIST_ERROR events",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle LIST_ERROR events"
        },
        {
          "ancestorTitles": ["logEvent function"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "logEvent function should handle LIST events",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle LIST events"
        },
        {
          "ancestorTitles": ["logEvent function"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "logEvent function should handle DATA_ERROR events",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle DATA_ERROR events"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='kind' over '{\"kind\":\"Pod\",\"metadata\":{\"namespace\":\"my-ns\",\"name\":\"my-name\"}}' becomes 'Pod'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='kind' over '{\"kind\":\"Pod\",\"metadata\":{\"namespace\":\"my-ns\",\"name\":\"my-name\"}}' becomes 'Pod'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='kind' over '{\"kind\":\"Pod\",\"metadata\":{\"namespace\":\"my-ns\"}}' becomes 'Pod'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='kind' over '{\"kind\":\"Pod\",\"metadata\":{\"namespace\":\"my-ns\"}}' becomes 'Pod'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='kind' over '{\"kind\":\"Pod\",\"metadata\":{\"name\":\"my-name\"}}' becomes 'Pod'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='kind' over '{\"kind\":\"Pod\",\"metadata\":{\"name\":\"my-name\"}}' becomes 'Pod'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='kind' over '{\"metadata\":{\"namespace\":\"my-ns\",\"name\":\"my-name\"}}' becomes 'UnknownKind'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='kind' over '{\"metadata\":{\"namespace\":\"my-ns\",\"name\":\"my-name\"}}' becomes 'UnknownKind'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='kind' over '{\"kind\":\"Pod\"}' becomes 'Pod'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='kind' over '{\"kind\":\"Pod\"}' becomes 'Pod'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='kind' over '{\"metadata\":{\"namespace\":\"my-ns\"}}' becomes 'UnknownKind'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='kind' over '{\"metadata\":{\"namespace\":\"my-ns\"}}' becomes 'UnknownKind'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='kind' over '{\"metadata\":{\"name\":\"my-name\"}}' becomes 'UnknownKind'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='kind' over '{\"metadata\":{\"name\":\"my-name\"}}' becomes 'UnknownKind'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='kind' over '{}' becomes 'UnknownKind'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='kind' over '{}' becomes 'UnknownKind'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='kindNs' over '{\"kind\":\"Pod\",\"metadata\":{\"namespace\":\"my-ns\",\"name\":\"my-name\"}}' becomes 'Pod/my-ns'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='kindNs' over '{\"kind\":\"Pod\",\"metadata\":{\"namespace\":\"my-ns\",\"name\":\"my-name\"}}' becomes 'Pod/my-ns'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='kindNs' over '{\"kind\":\"Pod\",\"metadata\":{\"namespace\":\"my-ns\"}}' becomes 'Pod/my-ns'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='kindNs' over '{\"kind\":\"Pod\",\"metadata\":{\"namespace\":\"my-ns\"}}' becomes 'Pod/my-ns'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='kindNs' over '{\"kind\":\"Pod\",\"metadata\":{\"name\":\"my-name\"}}' becomes 'Pod/cluster-scoped'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='kindNs' over '{\"kind\":\"Pod\",\"metadata\":{\"name\":\"my-name\"}}' becomes 'Pod/cluster-scoped'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='kindNs' over '{\"metadata\":{\"namespace\":\"my-ns\",\"name\":\"my-name\"}}' becomes 'UnknownKind/my-ns'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='kindNs' over '{\"metadata\":{\"namespace\":\"my-ns\",\"name\":\"my-name\"}}' becomes 'UnknownKind/my-ns'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='kindNs' over '{\"kind\":\"Pod\"}' becomes 'Pod/cluster-scoped'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='kindNs' over '{\"kind\":\"Pod\"}' becomes 'Pod/cluster-scoped'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='kindNs' over '{\"metadata\":{\"namespace\":\"my-ns\"}}' becomes 'UnknownKind/my-ns'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='kindNs' over '{\"metadata\":{\"namespace\":\"my-ns\"}}' becomes 'UnknownKind/my-ns'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='kindNs' over '{\"metadata\":{\"name\":\"my-name\"}}' becomes 'UnknownKind/cluster-scoped'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='kindNs' over '{\"metadata\":{\"name\":\"my-name\"}}' becomes 'UnknownKind/cluster-scoped'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='kindNs' over '{}' becomes 'UnknownKind/cluster-scoped'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='kindNs' over '{}' becomes 'UnknownKind/cluster-scoped'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='kindNsName' over '{\"kind\":\"Pod\",\"metadata\":{\"namespace\":\"my-ns\",\"name\":\"my-name\"}}' becomes 'Pod/my-ns/my-name'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='kindNsName' over '{\"kind\":\"Pod\",\"metadata\":{\"namespace\":\"my-ns\",\"name\":\"my-name\"}}' becomes 'Pod/my-ns/my-name'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='kindNsName' over '{\"kind\":\"Pod\",\"metadata\":{\"namespace\":\"my-ns\"}}' becomes 'Pod/my-ns/Unnamed'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='kindNsName' over '{\"kind\":\"Pod\",\"metadata\":{\"namespace\":\"my-ns\"}}' becomes 'Pod/my-ns/Unnamed'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='kindNsName' over '{\"kind\":\"Pod\",\"metadata\":{\"name\":\"my-name\"}}' becomes 'Pod/cluster-scoped/my-name'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='kindNsName' over '{\"kind\":\"Pod\",\"metadata\":{\"name\":\"my-name\"}}' becomes 'Pod/cluster-scoped/my-name'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='kindNsName' over '{\"metadata\":{\"namespace\":\"my-ns\",\"name\":\"my-name\"}}' becomes 'UnknownKind/my-ns/my-name'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='kindNsName' over '{\"metadata\":{\"namespace\":\"my-ns\",\"name\":\"my-name\"}}' becomes 'UnknownKind/my-ns/my-name'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='kindNsName' over '{\"kind\":\"Pod\"}' becomes 'Pod/cluster-scoped/Unnamed'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='kindNsName' over '{\"kind\":\"Pod\"}' becomes 'Pod/cluster-scoped/Unnamed'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='kindNsName' over '{\"metadata\":{\"namespace\":\"my-ns\"}}' becomes 'UnknownKind/my-ns/Unnamed'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='kindNsName' over '{\"metadata\":{\"namespace\":\"my-ns\"}}' becomes 'UnknownKind/my-ns/Unnamed'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='kindNsName' over '{\"metadata\":{\"name\":\"my-name\"}}' becomes 'UnknownKind/cluster-scoped/my-name'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='kindNsName' over '{\"metadata\":{\"name\":\"my-name\"}}' becomes 'UnknownKind/cluster-scoped/my-name'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='kindNsName' over '{}' becomes 'UnknownKind/cluster-scoped/Unnamed'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='kindNsName' over '{}' becomes 'UnknownKind/cluster-scoped/Unnamed'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='global' over '{\"kind\":\"Pod\",\"metadata\":{\"namespace\":\"my-ns\",\"name\":\"my-name\"}}' becomes 'global'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='global' over '{\"kind\":\"Pod\",\"metadata\":{\"namespace\":\"my-ns\",\"name\":\"my-name\"}}' becomes 'global'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='global' over '{\"kind\":\"Pod\",\"metadata\":{\"namespace\":\"my-ns\"}}' becomes 'global'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='global' over '{\"kind\":\"Pod\",\"metadata\":{\"namespace\":\"my-ns\"}}' becomes 'global'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='global' over '{\"kind\":\"Pod\",\"metadata\":{\"name\":\"my-name\"}}' becomes 'global'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='global' over '{\"kind\":\"Pod\",\"metadata\":{\"name\":\"my-name\"}}' becomes 'global'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='global' over '{\"metadata\":{\"namespace\":\"my-ns\",\"name\":\"my-name\"}}' becomes 'global'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='global' over '{\"metadata\":{\"namespace\":\"my-ns\",\"name\":\"my-name\"}}' becomes 'global'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='global' over '{\"kind\":\"Pod\"}' becomes 'global'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='global' over '{\"kind\":\"Pod\"}' becomes 'global'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='global' over '{\"metadata\":{\"namespace\":\"my-ns\"}}' becomes 'global'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='global' over '{\"metadata\":{\"namespace\":\"my-ns\"}}' becomes 'global'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='global' over '{\"metadata\":{\"name\":\"my-name\"}}' becomes 'global'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='global' over '{\"metadata\":{\"name\":\"my-name\"}}' becomes 'global'"
        },
        {
          "ancestorTitles": ["queueKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "queueKey PEPR_RECONCILE_STRATEGY='global' over '{}' becomes 'global'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "PEPR_RECONCILE_STRATEGY='global' over '{}' becomes 'global'"
        },
        {
          "ancestorTitles": ["getOrCreateQueue"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "getOrCreateQueue creates a Queue instance on first call",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "creates a Queue instance on first call"
        },
        {
          "ancestorTitles": ["getOrCreateQueue"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "getOrCreateQueue returns same Queue instance on subsequent calls",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "returns same Queue instance on subsequent calls"
        }
      ],
      "endTime": 1737148360531,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/processors/watch-processor.test.ts",
      "startTime": 1737148359789,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["RBAC generation"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RBAC generation should generate correct ClusterRole rules in scoped mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate correct ClusterRole rules in scoped mode"
        },
        {
          "ancestorTitles": ["RBAC generation"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RBAC generation should generate a ClusterRole with wildcard rules when not in scoped mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate a ClusterRole with wildcard rules when not in scoped mode"
        },
        {
          "ancestorTitles": ["RBAC generation"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RBAC generation should return an empty rules array when capabilities are empty in scoped mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return an empty rules array when capabilities are empty in scoped mode"
        },
        {
          "ancestorTitles": ["RBAC generation"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RBAC generation should include finalize verbs if isFinalize is true in scoped mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should include finalize verbs if isFinalize is true in scoped mode"
        },
        {
          "ancestorTitles": ["RBAC generation"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RBAC generation should deduplicate verbs and resources in rules",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should deduplicate verbs and resources in rules"
        },
        {
          "ancestorTitles": ["RBAC generation with mocked package.json"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RBAC generation with mocked package.json should generate a ClusterRole with wildcard rules when not in scoped mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate a ClusterRole with wildcard rules when not in scoped mode"
        },
        {
          "ancestorTitles": ["clusterRoleBinding"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "clusterRoleBinding should create a ClusterRoleBinding with the specified name",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a ClusterRoleBinding with the specified name"
        },
        {
          "ancestorTitles": ["serviceAccount"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "serviceAccount should create a ServiceAccount with the specified name",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a ServiceAccount with the specified name"
        },
        {
          "ancestorTitles": ["storeRole"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "storeRole should create a Role for managing peprstores with the specified name",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a Role for managing peprstores with the specified name"
        },
        {
          "ancestorTitles": ["storeRoleBinding"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "storeRoleBinding should create a RoleBinding for the specified Role",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a RoleBinding for the specified Role"
        },
        {
          "ancestorTitles": ["clusterRole"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "clusterRole should handle keys with less than 3 segments and set group to an empty string",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle keys with less than 3 segments and set group to an empty string"
        },
        {
          "ancestorTitles": ["clusterRole"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "clusterRole should handle keys with 3 or more segments and set group correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle keys with 3 or more segments and set group correctly"
        },
        {
          "ancestorTitles": ["clusterRole"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "clusterRole should handle non-array custom RBAC by defaulting to an empty array",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle non-array custom RBAC by defaulting to an empty array"
        },
        {
          "ancestorTitles": ["clusterRole"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "clusterRole should default to an empty verbs array if rule.verbs is undefined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should default to an empty verbs array if rule.verbs is undefined"
        }
      ],
      "endTime": 1737148360661,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/assets/rbac.test.ts",
      "startTime": 1737148360543,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["build", "builds a module", "using a specified pepr version"],
          "duration": 2667,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "build builds a module using a specified pepr version builds",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "builds"
        }
      ],
      "endTime": 1737148360726,
      "message": "",
      "name": "/Users/sam/code/work/pepr/integration/cli/build.version.test.ts",
      "startTime": 1737148336542,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["determineRbacMode"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "determineRbacMode should allow CLI options to overwrite module config",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should allow CLI options to overwrite module config"
        },
        {
          "ancestorTitles": ["determineRbacMode"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "determineRbacMode should return \"admin\" when cfg.pepr.rbacMode is provided and not \"scoped\"",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return \"admin\" when cfg.pepr.rbacMode is provided and not \"scoped\""
        },
        {
          "ancestorTitles": ["determineRbacMode"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "determineRbacMode should return \"scoped\" when cfg.pepr.rbacMode is \"scoped\"",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return \"scoped\" when cfg.pepr.rbacMode is \"scoped\""
        },
        {
          "ancestorTitles": ["determineRbacMode"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "determineRbacMode should default to admin when neither option is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should default to admin when neither option is provided"
        },
        {
          "ancestorTitles": ["handleCustomOutputDir"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "handleCustomOutputDir should return the provided output directory if it exists and is created successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return the provided output directory if it exists and is created successfully"
        },
        {
          "ancestorTitles": ["handleCustomOutputDir"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "handleCustomOutputDir should return the default output directory if no custom directory is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return the default output directory if no custom directory is provided"
        },
        {
          "ancestorTitles": ["checkIronBankImage"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "checkIronBankImage should return the Iron Bank image if the registry is Iron Bank",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return the Iron Bank image if the registry is Iron Bank"
        },
        {
          "ancestorTitles": ["checkIronBankImage"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "checkIronBankImage should return the image if the registry is not Iron Bank",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return the image if the registry is not Iron Bank"
        },
        {
          "ancestorTitles": ["validImagePullSecret"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "validImagePullSecret should not throw an error if the imagePullSecret is valid",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should not throw an error if the imagePullSecret is valid"
        },
        {
          "ancestorTitles": ["validImagePullSecret"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "validImagePullSecret should not throw an error if the imagePullSecret is empty",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should not throw an error if the imagePullSecret is empty"
        },
        {
          "ancestorTitles": ["validImagePullSecret"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "validImagePullSecret should throw an error if the imagePullSecret is invalid",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an error if the imagePullSecret is invalid"
        },
        {
          "ancestorTitles": ["handleCustomImage"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "handleCustomImage should return the customImage if no registry is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return the customImage if no registry is provided"
        },
        {
          "ancestorTitles": ["handleCustomImage"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "handleCustomImage should return an empty string if neither customImage nor registry is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return an empty string if neither customImage nor registry is provided"
        },
        {
          "ancestorTitles": ["handleCustomImage"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "handleCustomImage should call process.exit with 1 and log an error if both customImage and registry are provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should call process.exit with 1 and log an error if both customImage and registry are provided"
        },
        {
          "ancestorTitles": ["handleCustomImageBuild"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "handleCustomImageBuild should call createDockerfile and execute docker commands if includedFiles is not empty",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should call createDockerfile and execute docker commands if includedFiles is not empty"
        },
        {
          "ancestorTitles": ["handleCustomImageBuild"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "handleCustomImageBuild should not call createDockerfile or execute docker commands if includedFiles is empty",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should not call createDockerfile or execute docker commands if includedFiles is empty"
        },
        {
          "ancestorTitles": ["handleEmbedding"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "handleEmbedding should log success message if embed is false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should log success message if embed is false"
        },
        {
          "ancestorTitles": ["handleEmbedding"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "handleEmbedding should not log success message if embed is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not log success message if embed is true"
        },
        {
          "ancestorTitles": ["handleValidCapabilityNames"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "handleValidCapabilityNames should call validateCapabilityNames with capabilities",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should call validateCapabilityNames with capabilities"
        },
        {
          "ancestorTitles": ["handleValidCapabilityNames"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "handleValidCapabilityNames should call validateCapabilityNames with capabilities",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should call validateCapabilityNames with capabilities"
        }
      ],
      "endTime": 1737148360767,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/cli/build.test.ts",
      "startTime": 1737148360514,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["shouldSkipRequest", "Fuzzing shouldSkipRequest"],
          "duration": 22,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "shouldSkipRequest Fuzzing shouldSkipRequest should handle random inputs without crashing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 100,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle random inputs without crashing"
        },
        {
          "ancestorTitles": ["shouldSkipRequest", "Property-Based Testing shouldSkipRequest"],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "shouldSkipRequest Property-Based Testing shouldSkipRequest should only skip requests that do not match the binding criteria",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 100,
          "retryReasons": [],
          "status": "passed",
          "title": "should only skip requests that do not match the binding criteria"
        },
        {
          "ancestorTitles": ["shouldSkipRequest"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "shouldSkipRequest create: should reject when regex name does not match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "create: should reject when regex name does not match"
        },
        {
          "ancestorTitles": ["shouldSkipRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "shouldSkipRequest create: should not reject when regex name does match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "create: should not reject when regex name does match"
        },
        {
          "ancestorTitles": ["shouldSkipRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "shouldSkipRequest delete: should reject when regex name does not match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "delete: should reject when regex name does not match"
        },
        {
          "ancestorTitles": ["shouldSkipRequest"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "shouldSkipRequest delete: should not reject when regex name does match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "delete: should not reject when regex name does match"
        },
        {
          "ancestorTitles": ["shouldSkipRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "shouldSkipRequest create: should not reject when regex namespace does match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "create: should not reject when regex namespace does match"
        },
        {
          "ancestorTitles": ["shouldSkipRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "shouldSkipRequest create: should reject when regex namespace does not match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "create: should reject when regex namespace does not match"
        },
        {
          "ancestorTitles": ["shouldSkipRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "shouldSkipRequest delete: should reject when regex namespace does not match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "delete: should reject when regex namespace does not match"
        },
        {
          "ancestorTitles": ["shouldSkipRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "shouldSkipRequest delete: should not reject when regex namespace does match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "delete: should not reject when regex namespace does match"
        },
        {
          "ancestorTitles": ["shouldSkipRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "shouldSkipRequest delete: should reject when name does not match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "delete: should reject when name does not match"
        },
        {
          "ancestorTitles": ["shouldSkipRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "shouldSkipRequest should reject when kind does not match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject when kind does not match"
        },
        {
          "ancestorTitles": ["shouldSkipRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "shouldSkipRequest should reject when group does not match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject when group does not match"
        },
        {
          "ancestorTitles": ["shouldSkipRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "shouldSkipRequest should reject when version does not match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject when version does not match"
        },
        {
          "ancestorTitles": ["shouldSkipRequest"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "shouldSkipRequest should allow when group, version, and kind match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should allow when group, version, and kind match"
        },
        {
          "ancestorTitles": ["shouldSkipRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "shouldSkipRequest should allow when kind match and others are empty",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should allow when kind match and others are empty"
        },
        {
          "ancestorTitles": ["shouldSkipRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "shouldSkipRequest should reject when the capability namespace does not match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject when the capability namespace does not match"
        },
        {
          "ancestorTitles": ["shouldSkipRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "shouldSkipRequest should reject when namespace does not match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject when namespace does not match"
        },
        {
          "ancestorTitles": ["shouldSkipRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "shouldSkipRequest should allow when namespace is match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should allow when namespace is match"
        },
        {
          "ancestorTitles": ["shouldSkipRequest"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "shouldSkipRequest should reject when label does not match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject when label does not match"
        },
        {
          "ancestorTitles": ["shouldSkipRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "shouldSkipRequest should allow when label is match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should allow when label is match"
        },
        {
          "ancestorTitles": ["shouldSkipRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "shouldSkipRequest should reject when annotation does not match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject when annotation does not match"
        },
        {
          "ancestorTitles": ["shouldSkipRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "shouldSkipRequest should allow when annotation is match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should allow when annotation is match"
        },
        {
          "ancestorTitles": ["shouldSkipRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "shouldSkipRequest should use `oldObject` when the operation is `DELETE`",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should use `oldObject` when the operation is `DELETE`"
        },
        {
          "ancestorTitles": ["shouldSkipRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "shouldSkipRequest should allow when deletionTimestamp is present on pod",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should allow when deletionTimestamp is present on pod"
        },
        {
          "ancestorTitles": ["shouldSkipRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "shouldSkipRequest should reject when deletionTimestamp is not present on pod",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject when deletionTimestamp is not present on pod"
        },
        {
          "ancestorTitles": ["filterNoMatchReason"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "filterNoMatchReason given {}, it returns regex namespace filter error for Pods whose namespace does not match the regex",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {}, it returns regex namespace filter error for Pods whose namespace does not match the regex"
        },
        {
          "ancestorTitles": ["filterNoMatchReason"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "filterNoMatchReason given {\"metadata\":{\"namespace\":\"pepr-uds\"}}, it returns regex namespace filter error for Pods whose namespace does not match the regex",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"metadata\":{\"namespace\":\"pepr-uds\"}}, it returns regex namespace filter error for Pods whose namespace does not match the regex"
        },
        {
          "ancestorTitles": ["filterNoMatchReason"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "filterNoMatchReason given {\"metadata\":{\"namespace\":\"pepr-core\"}}, it returns regex namespace filter error for Pods whose namespace does not match the regex",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"metadata\":{\"namespace\":\"pepr-core\"}}, it returns regex namespace filter error for Pods whose namespace does not match the regex"
        },
        {
          "ancestorTitles": ["filterNoMatchReason"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "filterNoMatchReason given {\"metadata\":{\"namespace\":\"uds-ns\"}}, it returns regex namespace filter error for Pods whose namespace does not match the regex",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"metadata\":{\"namespace\":\"uds-ns\"}}, it returns regex namespace filter error for Pods whose namespace does not match the regex"
        },
        {
          "ancestorTitles": ["filterNoMatchReason"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "filterNoMatchReason given {\"metadata\":{\"namespace\":\"uds\"}}, it returns regex namespace filter error for Pods whose namespace does not match the regex",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"metadata\":{\"namespace\":\"uds\"}}, it returns regex namespace filter error for Pods whose namespace does not match the regex"
        },
        {
          "ancestorTitles": [
            "filterNoMatchReason",
            "when pod namespace matches the namespace regex"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "filterNoMatchReason when pod namespace matches the namespace regex should not return an error message (namespace: 'pepr-system')",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not return an error message (namespace: 'pepr-system')"
        },
        {
          "ancestorTitles": [
            "filterNoMatchReason",
            "when pod namespace matches the namespace regex"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "filterNoMatchReason when pod namespace matches the namespace regex should not return an error message (namespace: 'pepr-uds-system')",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not return an error message (namespace: 'pepr-uds-system')"
        },
        {
          "ancestorTitles": [
            "filterNoMatchReason",
            "when pod namespace matches the namespace regex"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "filterNoMatchReason when pod namespace matches the namespace regex should not return an error message (namespace: 'uds-system')",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not return an error message (namespace: 'uds-system')"
        },
        {
          "ancestorTitles": [
            "filterNoMatchReason",
            "when pod namespace matches the namespace regex"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "filterNoMatchReason when pod namespace matches the namespace regex should not return an error message (namespace: 'some-thing-that-is-a-system')",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not return an error message (namespace: 'some-thing-that-is-a-system')"
        },
        {
          "ancestorTitles": [
            "filterNoMatchReason",
            "when pod namespace matches the namespace regex"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "filterNoMatchReason when pod namespace matches the namespace regex should not return an error message (namespace: 'your-system')",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not return an error message (namespace: 'your-system')"
        },
        {
          "ancestorTitles": ["filterNoMatchReason"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "filterNoMatchReason returns regex name filter error for Pods whos name does not match the regex",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "returns regex name filter error for Pods whos name does not match the regex"
        },
        {
          "ancestorTitles": ["filterNoMatchReason"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "filterNoMatchReason returns no regex name filter error for Pods whos name does match the regex",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "returns no regex name filter error for Pods whos name does match the regex"
        },
        {
          "ancestorTitles": ["filterNoMatchReason", "when capability namespaces are present"],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "filterNoMatchReason when capability namespaces are present should return missingCarriableNamespace filter error for cluster-scoped objects",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return missingCarriableNamespace filter error for cluster-scoped objects"
        },
        {
          "ancestorTitles": ["filterNoMatchReason"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "filterNoMatchReason returns mismatchedNamespace filter error for clusterScoped objects with namespace filters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns mismatchedNamespace filter error for clusterScoped objects with namespace filters"
        },
        {
          "ancestorTitles": ["filterNoMatchReason"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "filterNoMatchReason returns namespace filter error for namespace objects with namespace filters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns namespace filter error for namespace objects with namespace filters"
        },
        {
          "ancestorTitles": ["filterNoMatchReason"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "filterNoMatchReason return an Ignoring Watch Callback string if the binding name and object name are different",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "return an Ignoring Watch Callback string if the binding name and object name are different"
        },
        {
          "ancestorTitles": [
            "filterNoMatchReason",
            "when the binding name and KubernetesObject name are the same"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "filterNoMatchReason when the binding name and KubernetesObject name are the same should not return an Ignoring Watch Callback message",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not return an Ignoring Watch Callback message"
        },
        {
          "ancestorTitles": ["filterNoMatchReason"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "filterNoMatchReason return deletionTimestamp error when there is no deletionTimestamp in the object",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "return deletionTimestamp error when there is no deletionTimestamp in the object"
        },
        {
          "ancestorTitles": ["filterNoMatchReason"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "filterNoMatchReason return no deletionTimestamp error when there is a deletionTimestamp in the object",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "return no deletionTimestamp error when there is a deletionTimestamp in the object"
        },
        {
          "ancestorTitles": ["filterNoMatchReason"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "filterNoMatchReason returns label overlap error when there is no overlap between binding and object labels",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns label overlap error when there is no overlap between binding and object labels"
        },
        {
          "ancestorTitles": ["filterNoMatchReason"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "filterNoMatchReason returns annotation overlap error when there is no overlap between binding and object annotations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns annotation overlap error when there is no overlap between binding and object annotations"
        },
        {
          "ancestorTitles": ["filterNoMatchReason"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "filterNoMatchReason returns capability namespace error when object is not in capability namespaces",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns capability namespace error when object is not in capability namespaces"
        },
        {
          "ancestorTitles": ["filterNoMatchReason"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "filterNoMatchReason returns binding namespace error when filter namespace is not part of capability namespaces",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns binding namespace error when filter namespace is not part of capability namespaces"
        },
        {
          "ancestorTitles": ["filterNoMatchReason"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "filterNoMatchReason returns binding and object namespace error when they do not overlap",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns binding and object namespace error when they do not overlap"
        },
        {
          "ancestorTitles": [
            "filterNoMatchReason",
            "when a KubernetesObject is in an ingnored namespace"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "filterNoMatchReason when a KubernetesObject is in an ingnored namespace should return a watch violation message",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a watch violation message"
        },
        {
          "ancestorTitles": ["filterNoMatchReason"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "filterNoMatchReason returns empty string when all checks pass",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns empty string when all checks pass"
        },
        {
          "ancestorTitles": ["adjudicateMisboundDeleteWithDeletionTimestamp"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMisboundDeleteWithDeletionTimestamp should return misboundDeleteWithDeletionTimestamp reason when using a deletionTimestamp filter on a DELETE operation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return misboundDeleteWithDeletionTimestamp reason when using a deletionTimestamp filter on a DELETE operation"
        },
        {
          "ancestorTitles": ["adjudicateMisboundDeleteWithDeletionTimestamp"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMisboundDeleteWithDeletionTimestamp should return null when not using a deletionTimestamp filter on a DELETE operation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null when not using a deletionTimestamp filter on a DELETE operation"
        },
        {
          "ancestorTitles": ["adjudicateMismatchedDeletionTimestamp"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMismatchedDeletionTimestamp should return mismatchedDeletionTimestamp reason when the binding has a deletionTimestamp and the object does not",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return mismatchedDeletionTimestamp reason when the binding has a deletionTimestamp and the object does not"
        },
        {
          "ancestorTitles": ["adjudicateMismatchedDeletionTimestamp"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMismatchedDeletionTimestamp should return null when the binding and object both define deletionTimestamp",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null when the binding and object both define deletionTimestamp"
        },
        {
          "ancestorTitles": ["adjudicateMismatchedEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMismatchedEvent should return mismatchedEvent reason when the binding event does not match the request event",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return mismatchedEvent reason when the binding event does not match the request event"
        },
        {
          "ancestorTitles": ["adjudicateMismatchedEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMismatchedEvent should not return mismatchedEvent reason when the binding event and request event match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not return mismatchedEvent reason when the binding event and request event match"
        },
        {
          "ancestorTitles": ["adjudicateMismatchedName"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMismatchedName should return mismatchedName reason when the binding name does not match the object name",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return mismatchedName reason when the binding name does not match the object name"
        },
        {
          "ancestorTitles": ["adjudicateMismatchedName"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMismatchedName should not return mismatchedName reason when the binding name and object name match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not return mismatchedName reason when the binding name and object name match"
        },
        {
          "ancestorTitles": ["adjudicateMismatchedGroup"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMismatchedGroup should return mismatchedGroup reason when the binding group does not match the request group",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return mismatchedGroup reason when the binding group does not match the request group"
        },
        {
          "ancestorTitles": ["adjudicateMismatchedGroup"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMismatchedGroup should not return mismatchedGroup reason when the binding group and request group match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not return mismatchedGroup reason when the binding group and request group match"
        },
        {
          "ancestorTitles": ["adjudicateMismatchedVersion"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMismatchedVersion should return mismatchedVersion reason when the binding version does not match the request version",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return mismatchedVersion reason when the binding version does not match the request version"
        },
        {
          "ancestorTitles": ["adjudicateMismatchedVersion"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMismatchedVersion should not return mismatchedVersion reason when the binding version and request version match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not return mismatchedVersion reason when the binding version and request version match"
        },
        {
          "ancestorTitles": ["adjudicateMismatchedKind"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMismatchedKind should return mismatchedKind reason when the binding kind does not match the request kind",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return mismatchedKind reason when the binding kind does not match the request kind"
        },
        {
          "ancestorTitles": ["adjudicateMismatchedKind"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMismatchedKind should not return mismatchedKind reason when the binding kind and request kind match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not return mismatchedKind reason when the binding kind and request kind match"
        },
        {
          "ancestorTitles": ["adjudicateUnbindableNamespaces"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateUnbindableNamespaces should return unbindableNamespaces reason when the object carries a namespace that is not allowed by the capability",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return unbindableNamespaces reason when the object carries a namespace that is not allowed by the capability"
        },
        {
          "ancestorTitles": ["adjudicateUnbindableNamespaces"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateUnbindableNamespaces should not return unbindableNamespaces reason when the object carries a namespace that is allowed by the capability",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not return unbindableNamespaces reason when the object carries a namespace that is allowed by the capability"
        },
        {
          "ancestorTitles": ["adjudicateUncarryableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateUncarryableNamespace should return uncarryableNamespace reason when the object is a namespace that is not allowed by the capability",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return uncarryableNamespace reason when the object is a namespace that is not allowed by the capability"
        },
        {
          "ancestorTitles": ["adjudicateUncarryableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateUncarryableNamespace should return uncarryableNamespace reason when the object carries a namespace that is not allowed by the capability",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return uncarryableNamespace reason when the object carries a namespace that is not allowed by the capability"
        },
        {
          "ancestorTitles": ["adjudicateUncarryableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateUncarryableNamespace should not return uncarryableNamespace reason when the object carries a namespace that is allowed by the capability",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not return uncarryableNamespace reason when the object carries a namespace that is allowed by the capability"
        },
        {
          "ancestorTitles": ["adjudicateMismatchedNamespace"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMismatchedNamespace should return mismatchedNamespace reason when the binding namespace does not match the object namespace",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return mismatchedNamespace reason when the binding namespace does not match the object namespace"
        },
        {
          "ancestorTitles": ["adjudicateMismatchedNamespace"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMismatchedNamespace should not return mismatchedNamespace reason when the binding namespace and object namespace match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not return mismatchedNamespace reason when the binding namespace and object namespace match"
        },
        {
          "ancestorTitles": ["adjudicateMismatchedLabels"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMismatchedLabels should return mismatchedLabels reason when the binding labels do not match the object labels",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return mismatchedLabels reason when the binding labels do not match the object labels"
        },
        {
          "ancestorTitles": ["adjudicateMismatchedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMismatchedLabels should not return mismatchedLabels reason when the binding labels and object labels match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not return mismatchedLabels reason when the binding labels and object labels match"
        },
        {
          "ancestorTitles": ["adjudicateMismatchedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMismatchedAnnotations should return mismatchedAnnotations reason when the binding annotations do not match the object annotations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return mismatchedAnnotations reason when the binding annotations do not match the object annotations"
        },
        {
          "ancestorTitles": ["adjudicateMismatchedAnnotations"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMismatchedAnnotations should not return mismatchedAnnotations reason when the binding annotations and object annotations match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not return mismatchedAnnotations reason when the binding annotations and object annotations match"
        },
        {
          "ancestorTitles": ["adjudicateMismatchedNameRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMismatchedNameRegex should return mismatchedNameRegex reason when the binding regexName does not match the object name",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return mismatchedNameRegex reason when the binding regexName does not match the object name"
        },
        {
          "ancestorTitles": ["adjudicateMismatchedNameRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMismatchedNameRegex should not return mismatchedNameRegex reason when the binding regexName and object name match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not return mismatchedNameRegex reason when the binding regexName and object name match"
        },
        {
          "ancestorTitles": ["adjudicateMismatchedNameRegex"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMismatchedNameRegex should return mismatchedNameRegex reason when the binding regexName does not match the object name",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return mismatchedNameRegex reason when the binding regexName does not match the object name"
        },
        {
          "ancestorTitles": ["adjudicateMismatchedNameRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMismatchedNameRegex should not return mismatchedNameRegex reason when the binding regexName and object name match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not return mismatchedNameRegex reason when the binding regexName and object name match"
        },
        {
          "ancestorTitles": ["adjudicateCarriesIgnoredNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateCarriesIgnoredNamespace should return carriesIgnoredNamespace reason when the object is a namespace that is in the ignoredNamespaces",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return carriesIgnoredNamespace reason when the object is a namespace that is in the ignoredNamespaces"
        },
        {
          "ancestorTitles": ["adjudicateCarriesIgnoredNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateCarriesIgnoredNamespace should return carriesIgnoredNamespace reason when the object carries a namespace that is in the ignoredNamespaces",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return carriesIgnoredNamespace reason when the object carries a namespace that is in the ignoredNamespaces"
        },
        {
          "ancestorTitles": ["adjudicateCarriesIgnoredNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateCarriesIgnoredNamespace should not return carriesIgnoredNamespace reason when the object carries a namespace that is not in the ignoredNamespaces",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not return carriesIgnoredNamespace reason when the object carries a namespace that is not in the ignoredNamespaces"
        },
        {
          "ancestorTitles": ["adjudicateMissingCarriableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMissingCarriableNamespace should return missingCarriableNamespace reason when the object does not carry a namespace and the capability does not allow it",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return missingCarriableNamespace reason when the object does not carry a namespace and the capability does not allow it"
        },
        {
          "ancestorTitles": ["adjudicateMissingCarriableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMissingCarriableNamespace should not return missingCarriableNamespace reason when the object carries a namespace that is allowed by the capability",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not return missingCarriableNamespace reason when the object carries a namespace that is allowed by the capability"
        },
        {
          "ancestorTitles": ["adjudicateMismatchedNamespaceRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMismatchedNamespaceRegex should return mismatchedNamespaceRegex reason when the binding regexNamespaces do not match the object namespace",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return mismatchedNamespaceRegex reason when the binding regexNamespaces do not match the object namespace"
        },
        {
          "ancestorTitles": ["adjudicateMismatchedNamespaceRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMismatchedNamespaceRegex should not return mismatchedNamespaceRegex reason when the binding regexNamespaces and object namespace match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not return mismatchedNamespaceRegex reason when the binding regexNamespaces and object namespace match"
        },
        {
          "ancestorTitles": ["adjudicateMisboundNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMisboundNamespace should return nothing when binding is correct",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return nothing when binding is correct"
        },
        {
          "ancestorTitles": ["adjudicateMisboundNamespace"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "adjudicateMisboundNamespace should return reason when binding is incorrect",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return reason when binding is incorrect"
        }
      ],
      "endTime": 1737148360892,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/filter/filter.test.ts",
      "startTime": 1737148360667,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Workdir", "path"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Workdir path leaf \"a\" and root \"/tmp\" gives \"/tmp/a\"",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "leaf \"a\" and root \"/tmp\" gives \"/tmp/a\""
        },
        {
          "ancestorTitles": ["Workdir", "path"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Workdir path leaf \"b\" and root \"/tmp/c\" gives \"/tmp/c/b\"",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "leaf \"b\" and root \"/tmp/c\" gives \"/tmp/c/b\""
        },
        {
          "ancestorTitles": ["Workdir", "path"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Workdir path leaf \"d\" and root \"undefined\" gives \"/var/folders/s8/hkw6gfvj6hz3yqm5wb3d1qyh0000gn/T/d\"",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "leaf \"d\" and root \"undefined\" gives \"/var/folders/s8/hkw6gfvj6hz3yqm5wb3d1qyh0000gn/T/d\""
        },
        {
          "ancestorTitles": ["Workdir", "path"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Workdir path leaf \"e/f\" and root \"undefined\" gives \"/var/folders/s8/hkw6gfvj6hz3yqm5wb3d1qyh0000gn/T/e/f\"",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "leaf \"e/f\" and root \"undefined\" gives \"/var/folders/s8/hkw6gfvj6hz3yqm5wb3d1qyh0000gn/T/e/f\""
        },
        {
          "ancestorTitles": ["Workdir", "create"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Workdir create creating a non-existant workdir succeeds",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "creating a non-existant workdir succeeds"
        },
        {
          "ancestorTitles": ["Workdir", "create"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Workdir create creating a pre-existing workdir also succeeds (idempotency, yay!)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "creating a pre-existing workdir also succeeds (idempotency, yay!)"
        },
        {
          "ancestorTitles": ["Workdir", "exists"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Workdir exists returns false when workdir doesn't exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns false when workdir doesn't exist"
        },
        {
          "ancestorTitles": ["Workdir", "exists"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Workdir exists returns true when workdir does exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns true when workdir does exist"
        },
        {
          "ancestorTitles": ["Workdir", "delete"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Workdir delete deleting a pre-existing workdir succeeds",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "deleting a pre-existing workdir succeeds"
        },
        {
          "ancestorTitles": ["Workdir", "delete"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Workdir delete deleting a non-existant workdir also succeeds (idempotency, yay!)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "deleting a non-existant workdir also succeeds (idempotency, yay!)"
        },
        {
          "ancestorTitles": ["Workdir", "isEmpty"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Workdir isEmpty returns true when workdir is empty",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns true when workdir is empty"
        },
        {
          "ancestorTitles": ["Workdir", "isEmpty"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Workdir isEmpty returns false when workdir has content",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns false when workdir has content"
        },
        {
          "ancestorTitles": ["Workdir", "recreate"],
          "duration": 106,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Workdir recreate recreating a pre-existing workdir succeeds",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "recreating a pre-existing workdir succeeds"
        },
        {
          "ancestorTitles": ["Workdir", "recreate"],
          "duration": 102,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Workdir recreate recreating a non-existant workdir also succeeds (idempotency, yay!)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "recreating a non-existant workdir also succeeds (idempotency, yay!)"
        }
      ],
      "endTime": 1737148360982,
      "message": "",
      "name": "/Users/sam/code/work/pepr/integration/helpers/workdir.test.ts",
      "startTime": 1737148360734,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["fromFile"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "fromFile can load one resource from .json file",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "can load one resource from .json file"
        },
        {
          "ancestorTitles": ["fromFile"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "fromFile can load one resource from .yaml file",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "can load one resource from .yaml file"
        },
        {
          "ancestorTitles": ["fromFile"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "fromFile can load many resources from .json file",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "can load many resources from .json file"
        },
        {
          "ancestorTitles": ["fromFile"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "fromFile can load many resources from .yaml file",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "can load many resources from .yaml file"
        },
        {
          "ancestorTitles": ["select"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "select returns typed resources, selected from list by name",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns typed resources, selected from list by name"
        }
      ],
      "endTime": 1737148361136,
      "message": "",
      "name": "/Users/sam/code/work/pepr/integration/helpers/resource.test.ts",
      "startTime": 1737148360846,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "should instantiate Controller and start it with the default port",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should instantiate Controller and start it with the default port"
        },
        {
          "ancestorTitles": [],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "should instantiate Controller and start it with the specified port",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should instantiate Controller and start it with the specified port"
        },
        {
          "ancestorTitles": [],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "should not start if deferStart is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not start if deferStart is true"
        },
        {
          "ancestorTitles": [],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "should reject invalid pepr onError conditions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject invalid pepr onError conditions"
        },
        {
          "ancestorTitles": [],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "should allow valid pepr onError conditions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should allow valid pepr onError conditions"
        },
        {
          "ancestorTitles": [],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "should not create a controller if PEPR_MODE is set to build",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not create a controller if PEPR_MODE is set to build"
        },
        {
          "ancestorTitles": [],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "should send the capabilities to the parent process if PEPR_MODE is set to build",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should send the capabilities to the parent process if PEPR_MODE is set to build"
        },
        {
          "ancestorTitles": ["Capability"],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Capability should handle OnSchedule",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle OnSchedule"
        }
      ],
      "endTime": 1737148361263,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/core/module.test.ts",
      "startTime": 1737148360914,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Capability"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Capability should initialize with given configuration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should initialize with given configuration"
        },
        {
          "ancestorTitles": ["Capability"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Capability should register store and schedule store",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should register store and schedule store"
        },
        {
          "ancestorTitles": ["Capability", "when a store is registered multiple times"],
          "duration": 25,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Capability when a store is registered multiple times should throw an error if store is registered twice",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an error if store is registered twice"
        },
        {
          "ancestorTitles": ["Capability", "when a store is registered multiple times"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Capability when a store is registered multiple times should throw an error if schedule store is registered twice",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an error if schedule store is registered twice"
        },
        {
          "ancestorTitles": ["Capability"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Capability should correctly chain When, InNamespace, WithLabel, and Mutate methods",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "should correctly chain When, InNamespace, WithLabel, and Mutate methods"
        },
        {
          "ancestorTitles": ["Capability", "when creating log messages"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Capability when creating log messages should use child logger for mutate callback",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use child logger for mutate callback"
        },
        {
          "ancestorTitles": ["Capability", "when creating log messages"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Capability when creating log messages should handle complex alias and logging correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle complex alias and logging correctly"
        },
        {
          "ancestorTitles": ["Capability", "when creating log messages"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Capability when creating log messages should use child logger for validate callback",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use child logger for validate callback"
        },
        {
          "ancestorTitles": ["Capability", "when creating log messages"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Capability when creating log messages should use child logger for reconcile callback",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use child logger for reconcile callback"
        },
        {
          "ancestorTitles": ["Capability", "when creating log messages"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Capability when creating log messages should use child logger for finalize callback",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use child logger for finalize callback"
        },
        {
          "ancestorTitles": ["Capability", "when creating log messages"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Capability when creating log messages should use aliasLogger if no logger is provided in watch callback",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should use aliasLogger if no logger is provided in watch callback"
        },
        {
          "ancestorTitles": ["Capability"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Capability should reset the alias before each mutation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "should reset the alias before each mutation"
        },
        {
          "ancestorTitles": ["Capability"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Capability should log 'no alias provided' if alias is not set in validate callback",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should log 'no alias provided' if alias is not set in validate callback"
        },
        {
          "ancestorTitles": ["Capability"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Capability should register a Watch action and execute it with the logger",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should register a Watch action and execute it with the logger"
        },
        {
          "ancestorTitles": ["Capability"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Capability should pass the correct parameters to the Watch action",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should pass the correct parameters to the Watch action"
        },
        {
          "ancestorTitles": ["Capability"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Capability should use user-provided alias for finalizer with reconcile",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use user-provided alias for finalizer with reconcile"
        },
        {
          "ancestorTitles": ["Capability"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Capability should use user-provided alias for finalizer with watch",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use user-provided alias for finalizer with watch"
        },
        {
          "ancestorTitles": ["Capability", "when adding filters"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Capability when adding filters should add deletionTimestamp filter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should add deletionTimestamp filter"
        },
        {
          "ancestorTitles": ["Capability", "when adding filters"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Capability when adding filters should add name filter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should add name filter"
        },
        {
          "ancestorTitles": ["Capability", "when adding filters"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Capability when adding filters should add annotation filter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should add annotation filter"
        },
        {
          "ancestorTitles": ["Capability", "when binding to events"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Capability when binding to events should bind an update event",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should bind an update event"
        },
        {
          "ancestorTitles": ["Capability", "when binding to events"],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Capability when binding to events should bind a delete event",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should bind a delete event"
        },
        {
          "ancestorTitles": ["Capability"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Capability should throw an error if neither matchedKind nor kind is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an error if neither matchedKind nor kind is provided"
        },
        {
          "ancestorTitles": ["Capability"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Capability should create a new schedule and watch the schedule store when PEPR_WATCH_MODE is 'true'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a new schedule and watch the schedule store when PEPR_WATCH_MODE is 'true'"
        },
        {
          "ancestorTitles": ["Capability"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Capability should not create a new schedule or watch the schedule store when PEPR_WATCH_MODE is not set",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should not create a new schedule or watch the schedule store when PEPR_WATCH_MODE is not set"
        },
        {
          "ancestorTitles": ["Capability"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Capability should add annotation with an empty value when no value is provided in WithAnnotation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should add annotation with an empty value when no value is provided in WithAnnotation"
        }
      ],
      "endTime": 1737148361317,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/core/capability.test.ts",
      "startTime": 1737148360988,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["mismatchedName"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedName given binding {\"filters\":{\"name\":\"name\"}} and object {}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"name\":\"name\"}} and object {}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedName"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedName given binding {\"filters\":{\"name\":\"name\"}} and object {\"metadata\":{\"name\":\"name\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"name\":\"name\"}} and object {\"metadata\":{\"name\":\"name\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedDeletionTimestamp"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedDeletionTimestamp given binding {} and object {}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {} and object {}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedDeletionTimestamp"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedDeletionTimestamp given binding {} and object {\"metadata\":{\"deletionTimestamp\":\"2025-01-17T21:12:41.311Z\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {} and object {\"metadata\":{\"deletionTimestamp\":\"2025-01-17T21:12:41.311Z\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedDeletionTimestamp"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedDeletionTimestamp given binding {\"filters\":{\"deletionTimestamp\":true}} and object {}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"deletionTimestamp\":true}} and object {}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedDeletionTimestamp"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedDeletionTimestamp given binding {\"filters\":{\"deletionTimestamp\":true}} and object {\"metadata\":{\"deletionTimestamp\":\"2025-01-17T21:12:41.311Z\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"deletionTimestamp\":true}} and object {\"metadata\":{\"deletionTimestamp\":\"2025-01-17T21:12:41.311Z\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNameRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNameRegex given binding {} and object {}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {} and object {}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNameRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNameRegex given binding {} and object {\"metadata\":{\"name\":\"name\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {} and object {\"metadata\":{\"name\":\"name\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNameRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNameRegex given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedNameRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNameRegex given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {\"metadata\":{\"name\":\"name\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {\"metadata\":{\"name\":\"name\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNameRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNameRegex given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {\"metadata\":{\"name\":\"neme\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {\"metadata\":{\"name\":\"neme\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNameRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNameRegex given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {\"metadata\":{\"name\":\"nime\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {\"metadata\":{\"name\":\"nime\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNameRegex"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNameRegex given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {\"metadata\":{\"name\":\"nome\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {\"metadata\":{\"name\":\"nome\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNameRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNameRegex given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {\"metadata\":{\"name\":\"nume\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {\"metadata\":{\"name\":\"nume\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNameRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNameRegex given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {\"metadata\":{\"name\":\"n3me\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {\"metadata\":{\"name\":\"n3me\"}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespace given binding {} and object {}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {} and object {}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespace given binding {} and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {} and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespace given binding {\"filters\":{\"namespaces\":[\"namespace\"]}} and object {}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"namespaces\":[\"namespace\"]}} and object {}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespace given binding {\"filters\":{\"namespaces\":[\"namespace\"]}} and object {\"metadata\":{\"namespace\":\"nopesause\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"namespaces\":[\"namespace\"]}} and object {\"metadata\":{\"namespace\":\"nopesause\"}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespace given binding {\"filters\":{\"namespaces\":[\"namespace\"]}} and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"namespaces\":[\"namespace\"]}} and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNamespaceRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespaceRegex given binding {\"filters\":{\"regexNamespaces\":[\"^n.mespace$\"]}} and object {}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexNamespaces\":[\"^n.mespace$\"]}} and object {}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedNamespaceRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespaceRegex given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]mespace$\"]}} and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]mespace$\"]}} and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNamespaceRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespaceRegex given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]mespace$\"]}} and object {\"metadata\":{\"namespace\":\"nemespace\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]mespace$\"]}} and object {\"metadata\":{\"namespace\":\"nemespace\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNamespaceRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespaceRegex given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]mespace$\"]}} and object {\"metadata\":{\"namespace\":\"nimespace\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]mespace$\"]}} and object {\"metadata\":{\"namespace\":\"nimespace\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNamespaceRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespaceRegex given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]mespace$\"]}} and object {\"metadata\":{\"namespace\":\"nomespace\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]mespace$\"]}} and object {\"metadata\":{\"namespace\":\"nomespace\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNamespaceRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespaceRegex given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]mespace$\"]}} and object {\"metadata\":{\"namespace\":\"numespace\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]mespace$\"]}} and object {\"metadata\":{\"namespace\":\"numespace\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNamespaceRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespaceRegex given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]mespace$\"]}} and object {\"metadata\":{\"namespace\":\"n3mespace\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]mespace$\"]}} and object {\"metadata\":{\"namespace\":\"n3mespace\"}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedNamespaceRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespaceRegex given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]me$\",\"^sp[aeiou]ce$\"]}} and object {\"metadata\":{\"namespace\":\"name\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]me$\",\"^sp[aeiou]ce$\"]}} and object {\"metadata\":{\"namespace\":\"name\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNamespaceRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespaceRegex given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]me$\",\"^sp[aeiou]ce$\"]}} and object {\"metadata\":{\"namespace\":\"space\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]me$\",\"^sp[aeiou]ce$\"]}} and object {\"metadata\":{\"namespace\":\"space\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNamespaceRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespaceRegex given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]me$\",\"^sp[aeiou]ce$\"]}} and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]me$\",\"^sp[aeiou]ce$\"]}} and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {} and object {}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {} and object {}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {} and object {\"metadata\":{\"annotations\":{\"anno\":\"tate\"}}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {} and object {\"metadata\":{\"annotations\":{\"anno\":\"tate\"}}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {\"filters\":{\"annotations\":{\"anno\":\"\"}}} and object {}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"annotations\":{\"anno\":\"\"}}} and object {}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {\"filters\":{\"annotations\":{\"anno\":\"\"}}} and object {\"metadata\":{\"annotations\":{\"anno\":\"\"}}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"annotations\":{\"anno\":\"\"}}} and object {\"metadata\":{\"annotations\":{\"anno\":\"\"}}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {\"filters\":{\"annotations\":{\"anno\":\"\"}}} and object {\"metadata\":{\"annotations\":{\"anno\":\"tate\"}}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"annotations\":{\"anno\":\"\"}}} and object {\"metadata\":{\"annotations\":{\"anno\":\"tate\"}}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {\"filters\":{\"annotations\":{\"anno\":\"tate\"}}} and object {}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"annotations\":{\"anno\":\"tate\"}}} and object {}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {\"filters\":{\"annotations\":{\"anno\":\"tate\"}}} and object {\"metadata\":{\"annotations\":{\"anno\":\"\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"annotations\":{\"anno\":\"tate\"}}} and object {\"metadata\":{\"annotations\":{\"anno\":\"\"}}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {\"filters\":{\"annotations\":{\"anno\":\"tate\"}}} and object {\"metadata\":{\"annotations\":{\"anno\":\"tate\"}}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"annotations\":{\"anno\":\"tate\"}}} and object {\"metadata\":{\"annotations\":{\"anno\":\"tate\"}}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {\"filters\":{\"annotations\":{\"anno\":\"tate\"}}} and object {\"metadata\":{\"annotations\":{\"anno\":\"tato\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"annotations\":{\"anno\":\"tate\"}}} and object {\"metadata\":{\"annotations\":{\"anno\":\"tato\"}}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {\"filters\":{\"annotations\":{\"an\":\"no\",\"ta\":\"te\"}}} and object {\"metadata\":{\"annotations\":{\"an\":\"\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"annotations\":{\"an\":\"no\",\"ta\":\"te\"}}} and object {\"metadata\":{\"annotations\":{\"an\":\"\"}}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {\"filters\":{\"annotations\":{\"an\":\"no\",\"ta\":\"te\"}}} and object {\"metadata\":{\"annotations\":{\"an\":\"no\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"annotations\":{\"an\":\"no\",\"ta\":\"te\"}}} and object {\"metadata\":{\"annotations\":{\"an\":\"no\"}}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {\"filters\":{\"annotations\":{\"an\":\"no\",\"ta\":\"te\"}}} and object {\"metadata\":{\"annotations\":{\"an\":\"no\",\"ta\":\"\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"annotations\":{\"an\":\"no\",\"ta\":\"te\"}}} and object {\"metadata\":{\"annotations\":{\"an\":\"no\",\"ta\":\"\"}}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {\"filters\":{\"annotations\":{\"an\":\"no\",\"ta\":\"te\"}}} and object {\"metadata\":{\"annotations\":{\"an\":\"no\",\"ta\":\"to\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"annotations\":{\"an\":\"no\",\"ta\":\"te\"}}} and object {\"metadata\":{\"annotations\":{\"an\":\"no\",\"ta\":\"to\"}}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {\"filters\":{\"annotations\":{\"an\":\"no\",\"ta\":\"te\"}}} and object {\"metadata\":{\"annotations\":{\"an\":\"no\",\"ta\":\"te\"}}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"annotations\":{\"an\":\"no\",\"ta\":\"te\"}}} and object {\"metadata\":{\"annotations\":{\"an\":\"no\",\"ta\":\"te\"}}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedLabels given binding {} and object {}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {} and object {}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedLabels given binding {} and object {\"metadata\":{\"labels\":{\"la\":\"ble\"}}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {} and object {\"metadata\":{\"labels\":{\"la\":\"ble\"}}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedLabels given binding {\"filters\":{\"labels\":{\"la\":\"\"}}} and object {}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"labels\":{\"la\":\"\"}}} and object {}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedLabels given binding {\"filters\":{\"labels\":{\"la\":\"\"}}} and object {\"metadata\":{\"labels\":{\"la\":\"\"}}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"labels\":{\"la\":\"\"}}} and object {\"metadata\":{\"labels\":{\"la\":\"\"}}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedLabels given binding {\"filters\":{\"labels\":{\"la\":\"\"}}} and object {\"metadata\":{\"labels\":{\"la\":\"ble\"}}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"labels\":{\"la\":\"\"}}} and object {\"metadata\":{\"labels\":{\"la\":\"ble\"}}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedLabels given binding {\"filters\":{\"labels\":{\"la\":\"ble\"}}} and object {}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"labels\":{\"la\":\"ble\"}}} and object {}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedLabels given binding {\"filters\":{\"labels\":{\"la\":\"ble\"}}} and object {\"metadata\":{\"labels\":{\"la\":\"\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"labels\":{\"la\":\"ble\"}}} and object {\"metadata\":{\"labels\":{\"la\":\"\"}}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedLabels given binding {\"filters\":{\"labels\":{\"la\":\"ble\"}}} and object {\"metadata\":{\"labels\":{\"la\":\"ble\"}}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"labels\":{\"la\":\"ble\"}}} and object {\"metadata\":{\"labels\":{\"la\":\"ble\"}}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedLabels given binding {\"filters\":{\"labels\":{\"l\":\"a\",\"b\":\"le\"}}} and object {\"metadata\":{\"labels\":{\"l\":\"\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"labels\":{\"l\":\"a\",\"b\":\"le\"}}} and object {\"metadata\":{\"labels\":{\"l\":\"\"}}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedLabels given binding {\"filters\":{\"labels\":{\"l\":\"a\",\"b\":\"le\"}}} and object {\"metadata\":{\"labels\":{\"l\":\"a\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"labels\":{\"l\":\"a\",\"b\":\"le\"}}} and object {\"metadata\":{\"labels\":{\"l\":\"a\"}}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedLabels given binding {\"filters\":{\"labels\":{\"l\":\"a\",\"b\":\"le\"}}} and object {\"metadata\":{\"labels\":{\"l\":\"a\",\"b\":\"\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"labels\":{\"l\":\"a\",\"b\":\"le\"}}} and object {\"metadata\":{\"labels\":{\"l\":\"a\",\"b\":\"\"}}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedLabels given binding {\"filters\":{\"labels\":{\"l\":\"a\",\"b\":\"le\"}}} and object {\"metadata\":{\"labels\":{\"l\":\"a\",\"b\":\"le\"}}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"labels\":{\"l\":\"a\",\"b\":\"le\"}}} and object {\"metadata\":{\"labels\":{\"l\":\"a\",\"b\":\"le\"}}}, returns false"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {} and right {}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {} and right {}, returns false"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {} and right {\"anno\":\"tate\"}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {} and right {\"anno\":\"tate\"}, returns false"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {\"anno\":\"\"} and right {}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {\"anno\":\"\"} and right {}, returns true"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {\"anno\":\"\"} and right {\"anno\":\"\"}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {\"anno\":\"\"} and right {\"anno\":\"\"}, returns false"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {\"anno\":\"\"} and right {\"anno\":\"tate\"}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {\"anno\":\"\"} and right {\"anno\":\"tate\"}, returns false"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {\"anno\":\"tate\"} and right {}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {\"anno\":\"tate\"} and right {}, returns true"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {\"anno\":\"tate\"} and right {\"anno\":\"\"}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {\"anno\":\"tate\"} and right {\"anno\":\"\"}, returns true"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {\"anno\":\"tate\"} and right {\"anno\":\"tate\"}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {\"anno\":\"tate\"} and right {\"anno\":\"tate\"}, returns false"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {\"anno\":\"tate\"} and right {\"anno\":\"tato\"}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {\"anno\":\"tate\"} and right {\"anno\":\"tato\"}, returns true"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {\"an\":\"no\",\"ta\":\"te\"} and right {\"an\":\"\"}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {\"an\":\"no\",\"ta\":\"te\"} and right {\"an\":\"\"}, returns true"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {\"an\":\"no\",\"ta\":\"te\"} and right {\"an\":\"no\"}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {\"an\":\"no\",\"ta\":\"te\"} and right {\"an\":\"no\"}, returns true"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {\"an\":\"no\",\"ta\":\"te\"} and right {\"an\":\"no\",\"ta\":\"\"}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {\"an\":\"no\",\"ta\":\"te\"} and right {\"an\":\"no\",\"ta\":\"\"}, returns true"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {\"an\":\"no\",\"ta\":\"te\"} and right {\"an\":\"no\",\"ta\":\"te\"}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {\"an\":\"no\",\"ta\":\"te\"} and right {\"an\":\"no\",\"ta\":\"te\"}, returns false"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {\"an\":\"no\",\"ta\":\"te\"} and right {\"an\":\"no\",\"ta\":\"to\"}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {\"an\":\"no\",\"ta\":\"te\"} and right {\"an\":\"no\",\"ta\":\"to\"}, returns true"
        }
      ],
      "endTime": 1737148361322,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/filter/adjudicators/bindingKubernetesObjectAdjudicators.test.ts",
      "startTime": 1737148361141,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["addFinalizer", "on create"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "addFinalizer on create adds pepr finalizer when no other finalizers are present",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "adds pepr finalizer when no other finalizers are present"
        },
        {
          "ancestorTitles": ["addFinalizer", "on create"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "addFinalizer on create adds pepr finalizer when other finalizers are present",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "adds pepr finalizer when other finalizers are present"
        },
        {
          "ancestorTitles": ["addFinalizer", "on create"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "addFinalizer on create does not add another pepr finalizer when one is already present",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "does not add another pepr finalizer when one is already present"
        },
        {
          "ancestorTitles": ["addFinalizer", "on update"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "addFinalizer on update adds pepr finalizer when no other finalizers are present",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "adds pepr finalizer when no other finalizers are present"
        },
        {
          "ancestorTitles": ["addFinalizer", "on update"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "addFinalizer on update adds pepr finalizer when other finalizers are present",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "adds pepr finalizer when other finalizers are present"
        },
        {
          "ancestorTitles": ["addFinalizer", "on update"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "addFinalizer on update does not add another pepr finalizer when one is already present",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "does not add another pepr finalizer when one is already present"
        },
        {
          "ancestorTitles": ["addFinalizer", "on update"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "addFinalizer on update does not add pepr finalizer if a deletetionTimestamp is present",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "does not add pepr finalizer if a deletetionTimestamp is present"
        },
        {
          "ancestorTitles": ["addFinalizer", "on delete"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "addFinalizer on delete does not add pepr finalizer",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "does not add pepr finalizer"
        },
        {
          "ancestorTitles": ["removeFinalizer", "when RegisterKind fails"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "removeFinalizer when RegisterKind fails does NOT send a JSON Patch to remove pepr finalizers",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does NOT send a JSON Patch to remove pepr finalizers"
        },
        {
          "ancestorTitles": ["removeFinalizer", "when RegisterKind succeeds"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "removeFinalizer when RegisterKind succeeds sends a JSON Patch to remove pepr finalizers",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "sends a JSON Patch to remove pepr finalizers"
        }
      ],
      "endTime": 1737148361460,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/finalizer.test.ts",
      "startTime": 1737148361292,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["mismatchedName"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedName given binding {\"filters\":{\"name\":\"name\"}} and object {}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"name\":\"name\"}} and object {}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedName"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedName given binding {\"filters\":{\"name\":\"name\"}} and object {\"metadata\":{\"name\":\"name\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"name\":\"name\"}} and object {\"metadata\":{\"name\":\"name\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNameRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNameRegex given binding {} and object {}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {} and object {}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNameRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNameRegex given binding {} and object {\"metadata\":{\"name\":\"name\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {} and object {\"metadata\":{\"name\":\"name\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNameRegex"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNameRegex given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedNameRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNameRegex given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {\"metadata\":{\"name\":\"name\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {\"metadata\":{\"name\":\"name\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNameRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNameRegex given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {\"metadata\":{\"name\":\"neme\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {\"metadata\":{\"name\":\"neme\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNameRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNameRegex given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {\"metadata\":{\"name\":\"nime\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {\"metadata\":{\"name\":\"nime\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNameRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNameRegex given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {\"metadata\":{\"name\":\"nome\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {\"metadata\":{\"name\":\"nome\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNameRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNameRegex given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {\"metadata\":{\"name\":\"nume\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {\"metadata\":{\"name\":\"nume\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNameRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNameRegex given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {\"metadata\":{\"name\":\"n3me\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexName\":\"^n[aeiou]me$\"}} and object {\"metadata\":{\"name\":\"n3me\"}}, returns true"
        },
        {
          "ancestorTitles": ["bindsToKind"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "bindsToKind given binding {}, and kind '', returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {}, and kind '', returns false"
        },
        {
          "ancestorTitles": ["bindsToKind"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "bindsToKind given binding {\"kind\":{}}, and kind '', returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"kind\":{}}, and kind '', returns false"
        },
        {
          "ancestorTitles": ["bindsToKind"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "bindsToKind given binding {\"kind\":{\"kind\":null}}, and kind '', returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"kind\":{\"kind\":null}}, and kind '', returns false"
        },
        {
          "ancestorTitles": ["bindsToKind"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "bindsToKind given binding {\"kind\":{\"kind\":\"\"}}, and kind '', returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"kind\":{\"kind\":\"\"}}, and kind '', returns false"
        },
        {
          "ancestorTitles": ["bindsToKind"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "bindsToKind given binding {}, and kind 'Kind', returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {}, and kind 'Kind', returns false"
        },
        {
          "ancestorTitles": ["bindsToKind"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "bindsToKind given binding {\"kind\":{}}, and kind 'Kind', returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"kind\":{}}, and kind 'Kind', returns false"
        },
        {
          "ancestorTitles": ["bindsToKind"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "bindsToKind given binding {\"kind\":{\"kind\":null}}, and kind 'Kind', returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"kind\":{\"kind\":null}}, and kind 'Kind', returns false"
        },
        {
          "ancestorTitles": ["bindsToKind"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "bindsToKind given binding {\"kind\":{\"kind\":\"\"}}, and kind 'Kind', returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"kind\":{\"kind\":\"\"}}, and kind 'Kind', returns false"
        },
        {
          "ancestorTitles": ["bindsToKind"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "bindsToKind given binding {\"kind\":{\"kind\":\"Kind\"}}, and kind 'Kind', returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"kind\":{\"kind\":\"Kind\"}}, and kind 'Kind', returns true"
        },
        {
          "ancestorTitles": ["mismatchedNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespace given binding {} and object {}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {} and object {}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespace given binding {} and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {} and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespace given binding {\"filters\":{\"namespaces\":[\"namespace\"]}} and object {}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"namespaces\":[\"namespace\"]}} and object {}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespace given binding {\"filters\":{\"namespaces\":[\"namespace\"]}} and object {\"metadata\":{\"namespace\":\"nopesause\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"namespaces\":[\"namespace\"]}} and object {\"metadata\":{\"namespace\":\"nopesause\"}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespace given binding {\"filters\":{\"namespaces\":[\"namespace\"]}} and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"namespaces\":[\"namespace\"]}} and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNamespaceRegex"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespaceRegex given binding {\"filters\":{\"regexNamespaces\":[\"^n.mespace$\"]}} and object {}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexNamespaces\":[\"^n.mespace$\"]}} and object {}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedNamespaceRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespaceRegex given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]mespace$\"]}} and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]mespace$\"]}} and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNamespaceRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespaceRegex given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]mespace$\"]}} and object {\"metadata\":{\"namespace\":\"nemespace\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]mespace$\"]}} and object {\"metadata\":{\"namespace\":\"nemespace\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNamespaceRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespaceRegex given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]mespace$\"]}} and object {\"metadata\":{\"namespace\":\"nimespace\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]mespace$\"]}} and object {\"metadata\":{\"namespace\":\"nimespace\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNamespaceRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespaceRegex given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]mespace$\"]}} and object {\"metadata\":{\"namespace\":\"nomespace\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]mespace$\"]}} and object {\"metadata\":{\"namespace\":\"nomespace\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNamespaceRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespaceRegex given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]mespace$\"]}} and object {\"metadata\":{\"namespace\":\"numespace\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]mespace$\"]}} and object {\"metadata\":{\"namespace\":\"numespace\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNamespaceRegex"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespaceRegex given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]mespace$\"]}} and object {\"metadata\":{\"namespace\":\"n3mespace\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]mespace$\"]}} and object {\"metadata\":{\"namespace\":\"n3mespace\"}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedNamespaceRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespaceRegex given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]me$\",\"^sp[aeiou]ce$\"]}} and object {\"metadata\":{\"namespace\":\"name\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]me$\",\"^sp[aeiou]ce$\"]}} and object {\"metadata\":{\"namespace\":\"name\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNamespaceRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespaceRegex given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]me$\",\"^sp[aeiou]ce$\"]}} and object {\"metadata\":{\"namespace\":\"space\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]me$\",\"^sp[aeiou]ce$\"]}} and object {\"metadata\":{\"namespace\":\"space\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedNamespaceRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedNamespaceRegex given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]me$\",\"^sp[aeiou]ce$\"]}} and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"regexNamespaces\":[\"^n[aeiou]me$\",\"^sp[aeiou]ce$\"]}} and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns true"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {} and right {}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {} and right {}, returns false"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {} and right {\"anno\":\"tate\"}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {} and right {\"anno\":\"tate\"}, returns false"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {\"anno\":\"\"} and right {}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {\"anno\":\"\"} and right {}, returns true"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {\"anno\":\"\"} and right {\"anno\":\"\"}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {\"anno\":\"\"} and right {\"anno\":\"\"}, returns false"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {\"anno\":\"\"} and right {\"anno\":\"tate\"}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {\"anno\":\"\"} and right {\"anno\":\"tate\"}, returns false"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {\"anno\":\"tate\"} and right {}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {\"anno\":\"tate\"} and right {}, returns true"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {\"anno\":\"tate\"} and right {\"anno\":\"\"}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {\"anno\":\"tate\"} and right {\"anno\":\"\"}, returns true"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {\"anno\":\"tate\"} and right {\"anno\":\"tate\"}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {\"anno\":\"tate\"} and right {\"anno\":\"tate\"}, returns false"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {\"anno\":\"tate\"} and right {\"anno\":\"tato\"}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {\"anno\":\"tate\"} and right {\"anno\":\"tato\"}, returns true"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {\"an\":\"no\",\"ta\":\"te\"} and right {\"an\":\"\"}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {\"an\":\"no\",\"ta\":\"te\"} and right {\"an\":\"\"}, returns true"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {\"an\":\"no\",\"ta\":\"te\"} and right {\"an\":\"no\"}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {\"an\":\"no\",\"ta\":\"te\"} and right {\"an\":\"no\"}, returns true"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {\"an\":\"no\",\"ta\":\"te\"} and right {\"an\":\"no\",\"ta\":\"\"}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {\"an\":\"no\",\"ta\":\"te\"} and right {\"an\":\"no\",\"ta\":\"\"}, returns true"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {\"an\":\"no\",\"ta\":\"te\"} and right {\"an\":\"no\",\"ta\":\"te\"}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {\"an\":\"no\",\"ta\":\"te\"} and right {\"an\":\"no\",\"ta\":\"te\"}, returns false"
        },
        {
          "ancestorTitles": ["metasMismatch"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "metasMismatch given left {\"an\":\"no\",\"ta\":\"te\"} and right {\"an\":\"no\",\"ta\":\"to\"}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given left {\"an\":\"no\",\"ta\":\"te\"} and right {\"an\":\"no\",\"ta\":\"to\"}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {} and object {}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {} and object {}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {} and object {\"metadata\":{\"annotations\":{\"anno\":\"tate\"}}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {} and object {\"metadata\":{\"annotations\":{\"anno\":\"tate\"}}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {\"filters\":{\"annotations\":{\"anno\":\"\"}}} and object {}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"annotations\":{\"anno\":\"\"}}} and object {}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {\"filters\":{\"annotations\":{\"anno\":\"\"}}} and object {\"metadata\":{\"annotations\":{\"anno\":\"\"}}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"annotations\":{\"anno\":\"\"}}} and object {\"metadata\":{\"annotations\":{\"anno\":\"\"}}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {\"filters\":{\"annotations\":{\"anno\":\"\"}}} and object {\"metadata\":{\"annotations\":{\"anno\":\"tate\"}}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"annotations\":{\"anno\":\"\"}}} and object {\"metadata\":{\"annotations\":{\"anno\":\"tate\"}}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {\"filters\":{\"annotations\":{\"anno\":\"tate\"}}} and object {}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"annotations\":{\"anno\":\"tate\"}}} and object {}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {\"filters\":{\"annotations\":{\"anno\":\"tate\"}}} and object {\"metadata\":{\"annotations\":{\"anno\":\"\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"annotations\":{\"anno\":\"tate\"}}} and object {\"metadata\":{\"annotations\":{\"anno\":\"\"}}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {\"filters\":{\"annotations\":{\"anno\":\"tate\"}}} and object {\"metadata\":{\"annotations\":{\"anno\":\"tate\"}}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"annotations\":{\"anno\":\"tate\"}}} and object {\"metadata\":{\"annotations\":{\"anno\":\"tate\"}}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {\"filters\":{\"annotations\":{\"anno\":\"tate\"}}} and object {\"metadata\":{\"annotations\":{\"anno\":\"tato\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"annotations\":{\"anno\":\"tate\"}}} and object {\"metadata\":{\"annotations\":{\"anno\":\"tato\"}}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {\"filters\":{\"annotations\":{\"an\":\"no\",\"ta\":\"te\"}}} and object {\"metadata\":{\"annotations\":{\"an\":\"\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"annotations\":{\"an\":\"no\",\"ta\":\"te\"}}} and object {\"metadata\":{\"annotations\":{\"an\":\"\"}}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {\"filters\":{\"annotations\":{\"an\":\"no\",\"ta\":\"te\"}}} and object {\"metadata\":{\"annotations\":{\"an\":\"no\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"annotations\":{\"an\":\"no\",\"ta\":\"te\"}}} and object {\"metadata\":{\"annotations\":{\"an\":\"no\"}}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {\"filters\":{\"annotations\":{\"an\":\"no\",\"ta\":\"te\"}}} and object {\"metadata\":{\"annotations\":{\"an\":\"no\",\"ta\":\"\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"annotations\":{\"an\":\"no\",\"ta\":\"te\"}}} and object {\"metadata\":{\"annotations\":{\"an\":\"no\",\"ta\":\"\"}}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {\"filters\":{\"annotations\":{\"an\":\"no\",\"ta\":\"te\"}}} and object {\"metadata\":{\"annotations\":{\"an\":\"no\",\"ta\":\"to\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"annotations\":{\"an\":\"no\",\"ta\":\"te\"}}} and object {\"metadata\":{\"annotations\":{\"an\":\"no\",\"ta\":\"to\"}}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedAnnotations given binding {\"filters\":{\"annotations\":{\"an\":\"no\",\"ta\":\"te\"}}} and object {\"metadata\":{\"annotations\":{\"an\":\"no\",\"ta\":\"te\"}}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"annotations\":{\"an\":\"no\",\"ta\":\"te\"}}} and object {\"metadata\":{\"annotations\":{\"an\":\"no\",\"ta\":\"te\"}}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedLabels given binding {} and object {}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {} and object {}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedLabels given binding {} and object {\"metadata\":{\"labels\":{\"la\":\"ble\"}}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {} and object {\"metadata\":{\"labels\":{\"la\":\"ble\"}}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedLabels given binding {\"filters\":{\"labels\":{\"la\":\"\"}}} and object {}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"labels\":{\"la\":\"\"}}} and object {}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedLabels given binding {\"filters\":{\"labels\":{\"la\":\"\"}}} and object {\"metadata\":{\"labels\":{\"la\":\"\"}}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"labels\":{\"la\":\"\"}}} and object {\"metadata\":{\"labels\":{\"la\":\"\"}}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedLabels given binding {\"filters\":{\"labels\":{\"la\":\"\"}}} and object {\"metadata\":{\"labels\":{\"la\":\"ble\"}}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"labels\":{\"la\":\"\"}}} and object {\"metadata\":{\"labels\":{\"la\":\"ble\"}}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedLabels"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedLabels given binding {\"filters\":{\"labels\":{\"la\":\"ble\"}}} and object {}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"labels\":{\"la\":\"ble\"}}} and object {}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedLabels given binding {\"filters\":{\"labels\":{\"la\":\"ble\"}}} and object {\"metadata\":{\"labels\":{\"la\":\"\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"labels\":{\"la\":\"ble\"}}} and object {\"metadata\":{\"labels\":{\"la\":\"\"}}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedLabels given binding {\"filters\":{\"labels\":{\"la\":\"ble\"}}} and object {\"metadata\":{\"labels\":{\"la\":\"ble\"}}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"labels\":{\"la\":\"ble\"}}} and object {\"metadata\":{\"labels\":{\"la\":\"ble\"}}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedLabels given binding {\"filters\":{\"labels\":{\"l\":\"a\",\"b\":\"le\"}}} and object {\"metadata\":{\"labels\":{\"l\":\"\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"labels\":{\"l\":\"a\",\"b\":\"le\"}}} and object {\"metadata\":{\"labels\":{\"l\":\"\"}}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedLabels given binding {\"filters\":{\"labels\":{\"l\":\"a\",\"b\":\"le\"}}} and object {\"metadata\":{\"labels\":{\"l\":\"a\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"labels\":{\"l\":\"a\",\"b\":\"le\"}}} and object {\"metadata\":{\"labels\":{\"l\":\"a\"}}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedLabels given binding {\"filters\":{\"labels\":{\"l\":\"a\",\"b\":\"le\"}}} and object {\"metadata\":{\"labels\":{\"l\":\"a\",\"b\":\"\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"labels\":{\"l\":\"a\",\"b\":\"le\"}}} and object {\"metadata\":{\"labels\":{\"l\":\"a\",\"b\":\"\"}}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedLabels"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedLabels given binding {\"filters\":{\"labels\":{\"l\":\"a\",\"b\":\"le\"}}} and object {\"metadata\":{\"labels\":{\"l\":\"a\",\"b\":\"le\"}}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"filters\":{\"labels\":{\"l\":\"a\",\"b\":\"le\"}}} and object {\"metadata\":{\"labels\":{\"l\":\"a\",\"b\":\"le\"}}}, returns false"
        },
        {
          "ancestorTitles": ["missingCarriableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "missingCarriableNamespace given capabilityNamespaces [] and object {}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [] and object {}, returns false"
        },
        {
          "ancestorTitles": ["missingCarriableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "missingCarriableNamespace given capabilityNamespaces [] and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [] and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns false"
        },
        {
          "ancestorTitles": ["missingCarriableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "missingCarriableNamespace given capabilityNamespaces [\"namespace\"] and object {}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"namespace\"] and object {}, returns true"
        },
        {
          "ancestorTitles": ["missingCarriableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "missingCarriableNamespace given capabilityNamespaces [\"namespace\"] and object {\"metadata\":{}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"namespace\"] and object {\"metadata\":{}}, returns true"
        },
        {
          "ancestorTitles": ["missingCarriableNamespace"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "missingCarriableNamespace given capabilityNamespaces [\"namespace\"] and object {\"metadata\":{\"namespace\":null}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"namespace\"] and object {\"metadata\":{\"namespace\":null}}, returns true"
        },
        {
          "ancestorTitles": ["missingCarriableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "missingCarriableNamespace given capabilityNamespaces [\"namespace\"] and object {\"metadata\":{\"namespace\":\"\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"namespace\"] and object {\"metadata\":{\"namespace\":\"\"}}, returns true"
        },
        {
          "ancestorTitles": ["missingCarriableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "missingCarriableNamespace given capabilityNamespaces [\"namespace\"] and object {\"metadata\":{\"namespace\":\"incorrect\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"namespace\"] and object {\"metadata\":{\"namespace\":\"incorrect\"}}, returns false"
        },
        {
          "ancestorTitles": ["missingCarriableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "missingCarriableNamespace given capabilityNamespaces [\"namespace\"] and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"namespace\"] and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns false"
        },
        {
          "ancestorTitles": ["missingCarriableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "missingCarriableNamespace given capabilityNamespaces [\"name\",\"space\"] and object {}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"name\",\"space\"] and object {}, returns true"
        },
        {
          "ancestorTitles": ["missingCarriableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "missingCarriableNamespace given capabilityNamespaces [\"name\",\"space\"] and object {\"metadata\":{}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"name\",\"space\"] and object {\"metadata\":{}}, returns true"
        },
        {
          "ancestorTitles": ["missingCarriableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "missingCarriableNamespace given capabilityNamespaces [\"name\",\"space\"] and object {\"metadata\":{\"namespace\":null}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"name\",\"space\"] and object {\"metadata\":{\"namespace\":null}}, returns true"
        },
        {
          "ancestorTitles": ["missingCarriableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "missingCarriableNamespace given capabilityNamespaces [\"name\",\"space\"] and object {\"metadata\":{\"namespace\":\"\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"name\",\"space\"] and object {\"metadata\":{\"namespace\":\"\"}}, returns true"
        },
        {
          "ancestorTitles": ["missingCarriableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "missingCarriableNamespace given capabilityNamespaces [\"name\",\"space\"] and object {\"metadata\":{\"namespace\":\"incorrect\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"name\",\"space\"] and object {\"metadata\":{\"namespace\":\"incorrect\"}}, returns false"
        },
        {
          "ancestorTitles": ["missingCarriableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "missingCarriableNamespace given capabilityNamespaces [\"name\",\"space\"] and object {\"metadata\":{\"namespace\":\"name\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"name\",\"space\"] and object {\"metadata\":{\"namespace\":\"name\"}}, returns false"
        },
        {
          "ancestorTitles": ["missingCarriableNamespace"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "missingCarriableNamespace given capabilityNamespaces [\"name\",\"space\"] and object {\"metadata\":{\"namespace\":\"space\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"name\",\"space\"] and object {\"metadata\":{\"namespace\":\"space\"}}, returns false"
        },
        {
          "ancestorTitles": ["missingCarriableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "missingCarriableNamespace given capabilityNamespaces [\"ingress-controller\"] and object {\"kind\":\"Namespace\",\"metadata\":{\"name\":\"ingress-controller\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"ingress-controller\"] and object {\"kind\":\"Namespace\",\"metadata\":{\"name\":\"ingress-controller\"}}, returns false"
        },
        {
          "ancestorTitles": ["missingCarriableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "missingCarriableNamespace given capabilityNamespaces [\"ingress-controller\"] and object {\"kind\":\"Namespace\",\"metadata\":{\"name\":\"egress-controller\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"ingress-controller\"] and object {\"kind\":\"Namespace\",\"metadata\":{\"name\":\"egress-controller\"}}, returns true"
        },
        {
          "ancestorTitles": ["uncarryableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "uncarryableNamespace given capabilityNamespaces [] and object {}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [] and object {}, returns false"
        },
        {
          "ancestorTitles": ["uncarryableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "uncarryableNamespace given capabilityNamespaces [] and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [] and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns false"
        },
        {
          "ancestorTitles": ["uncarryableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "uncarryableNamespace given capabilityNamespaces [\"namespace\"] and object {\"kind\":\"Namespace\",\"metadata\":{\"name\":\"namespace\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"namespace\"] and object {\"kind\":\"Namespace\",\"metadata\":{\"name\":\"namespace\"}}, returns false"
        },
        {
          "ancestorTitles": ["uncarryableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "uncarryableNamespace given capabilityNamespaces [\"namespace\"] and object {\"kind\":\"Namespace\",\"metadata\":{\"name\":\"monitoring\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"namespace\"] and object {\"kind\":\"Namespace\",\"metadata\":{\"name\":\"monitoring\"}}, returns true"
        },
        {
          "ancestorTitles": ["uncarryableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "uncarryableNamespace given capabilityNamespaces [\"namespace\"] and object {}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"namespace\"] and object {}, returns false"
        },
        {
          "ancestorTitles": ["uncarryableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "uncarryableNamespace given capabilityNamespaces [\"namespace\"] and object {\"metadata\":{}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"namespace\"] and object {\"metadata\":{}}, returns false"
        },
        {
          "ancestorTitles": ["uncarryableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "uncarryableNamespace given capabilityNamespaces [\"namespace\"] and object {\"metadata\":{\"namespace\":null}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"namespace\"] and object {\"metadata\":{\"namespace\":null}}, returns false"
        },
        {
          "ancestorTitles": ["uncarryableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "uncarryableNamespace given capabilityNamespaces [\"namespace\"] and object {\"metadata\":{\"namespace\":\"\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"namespace\"] and object {\"metadata\":{\"namespace\":\"\"}}, returns false"
        },
        {
          "ancestorTitles": ["uncarryableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "uncarryableNamespace given capabilityNamespaces [\"namespace\"] and object {\"metadata\":{\"namespace\":\"incorrect\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"namespace\"] and object {\"metadata\":{\"namespace\":\"incorrect\"}}, returns true"
        },
        {
          "ancestorTitles": ["uncarryableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "uncarryableNamespace given capabilityNamespaces [\"namespace\"] and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"namespace\"] and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns false"
        },
        {
          "ancestorTitles": ["uncarryableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "uncarryableNamespace given capabilityNamespaces [\"name\",\"space\"] and object {}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"name\",\"space\"] and object {}, returns false"
        },
        {
          "ancestorTitles": ["uncarryableNamespace"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "uncarryableNamespace given capabilityNamespaces [\"name\",\"space\"] and object {\"metadata\":{}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"name\",\"space\"] and object {\"metadata\":{}}, returns false"
        },
        {
          "ancestorTitles": ["uncarryableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "uncarryableNamespace given capabilityNamespaces [\"name\",\"space\"] and object {\"metadata\":{\"namespace\":null}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"name\",\"space\"] and object {\"metadata\":{\"namespace\":null}}, returns false"
        },
        {
          "ancestorTitles": ["uncarryableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "uncarryableNamespace given capabilityNamespaces [\"name\",\"space\"] and object {\"metadata\":{\"namespace\":\"\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"name\",\"space\"] and object {\"metadata\":{\"namespace\":\"\"}}, returns false"
        },
        {
          "ancestorTitles": ["uncarryableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "uncarryableNamespace given capabilityNamespaces [\"name\",\"space\"] and object {\"metadata\":{\"namespace\":\"incorrect\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"name\",\"space\"] and object {\"metadata\":{\"namespace\":\"incorrect\"}}, returns true"
        },
        {
          "ancestorTitles": ["uncarryableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "uncarryableNamespace given capabilityNamespaces [\"name\",\"space\"] and object {\"metadata\":{\"namespace\":\"name\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"name\",\"space\"] and object {\"metadata\":{\"namespace\":\"name\"}}, returns false"
        },
        {
          "ancestorTitles": ["uncarryableNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "uncarryableNamespace given capabilityNamespaces [\"name\",\"space\"] and object {\"metadata\":{\"namespace\":\"space\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"name\",\"space\"] and object {\"metadata\":{\"namespace\":\"space\"}}, returns false"
        },
        {
          "ancestorTitles": ["carriesIgnoredNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriesIgnoredNamespace given capabilityNamespaces [] and object {}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [] and object {}, returns false"
        },
        {
          "ancestorTitles": ["carriesIgnoredNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriesIgnoredNamespace given capabilityNamespaces [] and object {\"metadata\":{\"namespace\":\"whatever\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [] and object {\"metadata\":{\"namespace\":\"whatever\"}}, returns false"
        },
        {
          "ancestorTitles": ["carriesIgnoredNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriesIgnoredNamespace given capabilityNamespaces [\"ignored\"] and object {\"kind\":\"Namespace\",\"metadata\":{\"name\":\"ignored\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"ignored\"] and object {\"kind\":\"Namespace\",\"metadata\":{\"name\":\"ignored\"}}, returns true"
        },
        {
          "ancestorTitles": ["carriesIgnoredNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriesIgnoredNamespace given capabilityNamespaces [\"ignored\"] and object {\"kind\":\"Namespace\",\"metadata\":{\"name\":\"monitoring\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"ignored\"] and object {\"kind\":\"Namespace\",\"metadata\":{\"name\":\"monitoring\"}}, returns false"
        },
        {
          "ancestorTitles": ["carriesIgnoredNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriesIgnoredNamespace given capabilityNamespaces [\"ignored\"] and object {}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"ignored\"] and object {}, returns false"
        },
        {
          "ancestorTitles": ["carriesIgnoredNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriesIgnoredNamespace given capabilityNamespaces [\"ignored\"] and object {\"metadata\":{}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"ignored\"] and object {\"metadata\":{}}, returns false"
        },
        {
          "ancestorTitles": ["carriesIgnoredNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriesIgnoredNamespace given capabilityNamespaces [\"ignored\"] and object {\"metadata\":{\"namespace\":null}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"ignored\"] and object {\"metadata\":{\"namespace\":null}}, returns false"
        },
        {
          "ancestorTitles": ["carriesIgnoredNamespace"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriesIgnoredNamespace given capabilityNamespaces [\"ignored\"] and object {\"metadata\":{\"namespace\":\"\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"ignored\"] and object {\"metadata\":{\"namespace\":\"\"}}, returns false"
        },
        {
          "ancestorTitles": ["carriesIgnoredNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriesIgnoredNamespace given capabilityNamespaces [\"ignored\"] and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"ignored\"] and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns false"
        },
        {
          "ancestorTitles": ["carriesIgnoredNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriesIgnoredNamespace given capabilityNamespaces [\"ignored\"] and object {\"metadata\":{\"namespace\":\"ignored\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"ignored\"] and object {\"metadata\":{\"namespace\":\"ignored\"}}, returns true"
        },
        {
          "ancestorTitles": ["carriesIgnoredNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriesIgnoredNamespace given capabilityNamespaces [\"ign\",\"ored\"] and object {}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"ign\",\"ored\"] and object {}, returns false"
        },
        {
          "ancestorTitles": ["carriesIgnoredNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriesIgnoredNamespace given capabilityNamespaces [\"ign\",\"ored\"] and object {\"metadata\":{}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"ign\",\"ored\"] and object {\"metadata\":{}}, returns false"
        },
        {
          "ancestorTitles": ["carriesIgnoredNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriesIgnoredNamespace given capabilityNamespaces [\"ign\",\"ored\"] and object {\"metadata\":{\"namespace\":null}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"ign\",\"ored\"] and object {\"metadata\":{\"namespace\":null}}, returns false"
        },
        {
          "ancestorTitles": ["carriesIgnoredNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriesIgnoredNamespace given capabilityNamespaces [\"ign\",\"ored\"] and object {\"metadata\":{\"namespace\":\"\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"ign\",\"ored\"] and object {\"metadata\":{\"namespace\":\"\"}}, returns false"
        },
        {
          "ancestorTitles": ["carriesIgnoredNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriesIgnoredNamespace given capabilityNamespaces [\"ign\",\"ored\"] and object {\"metadata\":{\"namespace\":\"ign\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"ign\",\"ored\"] and object {\"metadata\":{\"namespace\":\"ign\"}}, returns true"
        },
        {
          "ancestorTitles": ["carriesIgnoredNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriesIgnoredNamespace given capabilityNamespaces [\"ign\",\"ored\"] and object {\"metadata\":{\"namespace\":\"ored\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"ign\",\"ored\"] and object {\"metadata\":{\"namespace\":\"ored\"}}, returns true"
        },
        {
          "ancestorTitles": ["carriesIgnoredNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriesIgnoredNamespace given capabilityNamespaces [\"ign\",\"ored\"] and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"ign\",\"ored\"] and object {\"metadata\":{\"namespace\":\"namespace\"}}, returns false"
        },
        {
          "ancestorTitles": ["unbindableNamespaces"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "unbindableNamespaces given capabilityNamespaces [] and binding {}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [] and binding {}, returns false"
        },
        {
          "ancestorTitles": ["unbindableNamespaces"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "unbindableNamespaces given capabilityNamespaces [] and binding {\"metadata\":{\"namespace\":\"namespace\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [] and binding {\"metadata\":{\"namespace\":\"namespace\"}}, returns false"
        },
        {
          "ancestorTitles": ["unbindableNamespaces"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "unbindableNamespaces given capabilityNamespaces [\"namespace\"] and binding {}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"namespace\"] and binding {}, returns false"
        },
        {
          "ancestorTitles": ["unbindableNamespaces"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "unbindableNamespaces given capabilityNamespaces [\"namespace\"] and binding {\"filters\":{}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"namespace\"] and binding {\"filters\":{}}, returns false"
        },
        {
          "ancestorTitles": ["unbindableNamespaces"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "unbindableNamespaces given capabilityNamespaces [\"namespace\"] and binding {\"filters\":{\"namespaces\":null}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"namespace\"] and binding {\"filters\":{\"namespaces\":null}}, returns false"
        },
        {
          "ancestorTitles": ["unbindableNamespaces"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "unbindableNamespaces given capabilityNamespaces [\"namespace\"] and binding {\"filters\":{\"namespaces\":[]}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"namespace\"] and binding {\"filters\":{\"namespaces\":[]}}, returns false"
        },
        {
          "ancestorTitles": ["unbindableNamespaces"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "unbindableNamespaces given capabilityNamespaces [\"namespace\"] and binding {\"filters\":{\"namespaces\":[\"incorrect\"]}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"namespace\"] and binding {\"filters\":{\"namespaces\":[\"incorrect\"]}}, returns true"
        },
        {
          "ancestorTitles": ["unbindableNamespaces"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "unbindableNamespaces given capabilityNamespaces [\"namespace\"] and binding {\"filters\":{\"namespaces\":[\"namespace\"]}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"namespace\"] and binding {\"filters\":{\"namespaces\":[\"namespace\"]}}, returns false"
        },
        {
          "ancestorTitles": ["unbindableNamespaces"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "unbindableNamespaces given capabilityNamespaces [\"name\",\"space\"] and binding {}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"name\",\"space\"] and binding {}, returns false"
        },
        {
          "ancestorTitles": ["unbindableNamespaces"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "unbindableNamespaces given capabilityNamespaces [\"name\",\"space\"] and binding {\"filters\":{}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"name\",\"space\"] and binding {\"filters\":{}}, returns false"
        },
        {
          "ancestorTitles": ["unbindableNamespaces"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "unbindableNamespaces given capabilityNamespaces [\"name\",\"space\"] and binding {\"filters\":{\"namespaces\":null}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"name\",\"space\"] and binding {\"filters\":{\"namespaces\":null}}, returns false"
        },
        {
          "ancestorTitles": ["unbindableNamespaces"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "unbindableNamespaces given capabilityNamespaces [\"name\",\"space\"] and binding {\"filters\":{\"namespaces\":[]}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"name\",\"space\"] and binding {\"filters\":{\"namespaces\":[]}}, returns false"
        },
        {
          "ancestorTitles": ["unbindableNamespaces"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "unbindableNamespaces given capabilityNamespaces [\"name\",\"space\"] and binding {\"filters\":{\"namespaces\":[\"namespace\"]}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"name\",\"space\"] and binding {\"filters\":{\"namespaces\":[\"namespace\"]}}, returns true"
        },
        {
          "ancestorTitles": ["unbindableNamespaces"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "unbindableNamespaces given capabilityNamespaces [\"name\",\"space\"] and binding {\"filters\":{\"namespaces\":[\"name\"]}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"name\",\"space\"] and binding {\"filters\":{\"namespaces\":[\"name\"]}}, returns false"
        },
        {
          "ancestorTitles": ["unbindableNamespaces"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "unbindableNamespaces given capabilityNamespaces [\"name\",\"space\"] and binding {\"filters\":{\"namespaces\":[\"space\"]}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"name\",\"space\"] and binding {\"filters\":{\"namespaces\":[\"space\"]}}, returns false"
        },
        {
          "ancestorTitles": ["unbindableNamespaces"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "unbindableNamespaces given capabilityNamespaces [\"name\",\"space\"] and binding {\"filters\":{\"namespaces\":[\"incorrect\",\"space\"]}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given capabilityNamespaces [\"name\",\"space\"] and binding {\"filters\":{\"namespaces\":[\"incorrect\",\"space\"]}}, returns true"
        },
        {
          "ancestorTitles": ["operationMatchesEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "operationMatchesEvent given operation CREATE and event CREATE, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given operation CREATE and event CREATE, returns true"
        },
        {
          "ancestorTitles": ["operationMatchesEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "operationMatchesEvent given operation CREATE and event UPDATE, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given operation CREATE and event UPDATE, returns false"
        },
        {
          "ancestorTitles": ["operationMatchesEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "operationMatchesEvent given operation CREATE and event DELETE, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given operation CREATE and event DELETE, returns false"
        },
        {
          "ancestorTitles": ["operationMatchesEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "operationMatchesEvent given operation CREATE and event CREATEORUPDATE, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given operation CREATE and event CREATEORUPDATE, returns true"
        },
        {
          "ancestorTitles": ["operationMatchesEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "operationMatchesEvent given operation CREATE and event *, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given operation CREATE and event *, returns true"
        },
        {
          "ancestorTitles": ["operationMatchesEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "operationMatchesEvent given operation UPDATE and event CREATE, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given operation UPDATE and event CREATE, returns false"
        },
        {
          "ancestorTitles": ["operationMatchesEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "operationMatchesEvent given operation UPDATE and event UPDATE, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given operation UPDATE and event UPDATE, returns true"
        },
        {
          "ancestorTitles": ["operationMatchesEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "operationMatchesEvent given operation UPDATE and event DELETE, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given operation UPDATE and event DELETE, returns false"
        },
        {
          "ancestorTitles": ["operationMatchesEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "operationMatchesEvent given operation UPDATE and event CREATEORUPDATE, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given operation UPDATE and event CREATEORUPDATE, returns true"
        },
        {
          "ancestorTitles": ["operationMatchesEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "operationMatchesEvent given operation UPDATE and event *, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given operation UPDATE and event *, returns true"
        },
        {
          "ancestorTitles": ["operationMatchesEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "operationMatchesEvent given operation DELETE and event CREATE, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given operation DELETE and event CREATE, returns false"
        },
        {
          "ancestorTitles": ["operationMatchesEvent"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "operationMatchesEvent given operation DELETE and event UPDATE, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given operation DELETE and event UPDATE, returns false"
        },
        {
          "ancestorTitles": ["operationMatchesEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "operationMatchesEvent given operation DELETE and event DELETE, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given operation DELETE and event DELETE, returns true"
        },
        {
          "ancestorTitles": ["operationMatchesEvent"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "operationMatchesEvent given operation DELETE and event CREATEORUPDATE, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given operation DELETE and event CREATEORUPDATE, returns false"
        },
        {
          "ancestorTitles": ["operationMatchesEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "operationMatchesEvent given operation DELETE and event *, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given operation DELETE and event *, returns true"
        },
        {
          "ancestorTitles": ["operationMatchesEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "operationMatchesEvent given operation CONNECT and event CREATE, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given operation CONNECT and event CREATE, returns false"
        },
        {
          "ancestorTitles": ["operationMatchesEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "operationMatchesEvent given operation CONNECT and event UPDATE, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given operation CONNECT and event UPDATE, returns false"
        },
        {
          "ancestorTitles": ["operationMatchesEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "operationMatchesEvent given operation CONNECT and event DELETE, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given operation CONNECT and event DELETE, returns false"
        },
        {
          "ancestorTitles": ["operationMatchesEvent"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "operationMatchesEvent given operation CONNECT and event CREATEORUPDATE, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given operation CONNECT and event CREATEORUPDATE, returns false"
        },
        {
          "ancestorTitles": ["operationMatchesEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "operationMatchesEvent given operation CONNECT and event *, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given operation CONNECT and event *, returns true"
        },
        {
          "ancestorTitles": ["mismatchedEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedEvent given binding {\"event\":\"CREATE\"} and admission request {\"operation\":\"CREATE\"}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"event\":\"CREATE\"} and admission request {\"operation\":\"CREATE\"}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedEvent given binding {\"event\":\"UPDATE\"} and admission request {\"operation\":\"CREATE\"}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"event\":\"UPDATE\"} and admission request {\"operation\":\"CREATE\"}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedEvent given binding {\"event\":\"DELETE\"} and admission request {\"operation\":\"CREATE\"}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"event\":\"DELETE\"} and admission request {\"operation\":\"CREATE\"}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedEvent given binding {\"event\":\"CREATEORUPDATE\"} and admission request {\"operation\":\"CREATE\"}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"event\":\"CREATEORUPDATE\"} and admission request {\"operation\":\"CREATE\"}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedEvent given binding {\"event\":\"*\"} and admission request {\"operation\":\"CREATE\"}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"event\":\"*\"} and admission request {\"operation\":\"CREATE\"}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedEvent given binding {\"event\":\"CREATE\"} and admission request {\"operation\":\"UPDATE\"}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"event\":\"CREATE\"} and admission request {\"operation\":\"UPDATE\"}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedEvent given binding {\"event\":\"UPDATE\"} and admission request {\"operation\":\"UPDATE\"}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"event\":\"UPDATE\"} and admission request {\"operation\":\"UPDATE\"}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedEvent given binding {\"event\":\"DELETE\"} and admission request {\"operation\":\"UPDATE\"}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"event\":\"DELETE\"} and admission request {\"operation\":\"UPDATE\"}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedEvent given binding {\"event\":\"CREATEORUPDATE\"} and admission request {\"operation\":\"UPDATE\"}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"event\":\"CREATEORUPDATE\"} and admission request {\"operation\":\"UPDATE\"}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedEvent given binding {\"event\":\"*\"} and admission request {\"operation\":\"UPDATE\"}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"event\":\"*\"} and admission request {\"operation\":\"UPDATE\"}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedEvent given binding {\"event\":\"CREATE\"} and admission request {\"operation\":\"DELETE\"}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"event\":\"CREATE\"} and admission request {\"operation\":\"DELETE\"}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedEvent given binding {\"event\":\"UPDATE\"} and admission request {\"operation\":\"DELETE\"}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"event\":\"UPDATE\"} and admission request {\"operation\":\"DELETE\"}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedEvent given binding {\"event\":\"DELETE\"} and admission request {\"operation\":\"DELETE\"}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"event\":\"DELETE\"} and admission request {\"operation\":\"DELETE\"}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedEvent given binding {\"event\":\"CREATEORUPDATE\"} and admission request {\"operation\":\"DELETE\"}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"event\":\"CREATEORUPDATE\"} and admission request {\"operation\":\"DELETE\"}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedEvent given binding {\"event\":\"*\"} and admission request {\"operation\":\"DELETE\"}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"event\":\"*\"} and admission request {\"operation\":\"DELETE\"}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedEvent given binding {\"event\":\"CREATE\"} and admission request {\"operation\":\"CONNECT\"}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"event\":\"CREATE\"} and admission request {\"operation\":\"CONNECT\"}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedEvent given binding {\"event\":\"UPDATE\"} and admission request {\"operation\":\"CONNECT\"}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"event\":\"UPDATE\"} and admission request {\"operation\":\"CONNECT\"}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedEvent given binding {\"event\":\"DELETE\"} and admission request {\"operation\":\"CONNECT\"}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"event\":\"DELETE\"} and admission request {\"operation\":\"CONNECT\"}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedEvent given binding {\"event\":\"CREATEORUPDATE\"} and admission request {\"operation\":\"CONNECT\"}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"event\":\"CREATEORUPDATE\"} and admission request {\"operation\":\"CONNECT\"}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedEvent given binding {\"event\":\"*\"} and admission request {\"operation\":\"CONNECT\"}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"event\":\"*\"} and admission request {\"operation\":\"CONNECT\"}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedGroup"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedGroup given binding {} and admission request {}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {} and admission request {}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedGroup"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedGroup given binding {} and admission request {\"kind\":{\"group\":\"group\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {} and admission request {\"kind\":{\"group\":\"group\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedGroup"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedGroup given binding {\"kind\":{\"group\":\"group\"}} and admission request {}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"kind\":{\"group\":\"group\"}} and admission request {}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedGroup"],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedGroup given binding {\"kind\":{\"group\":\"group\"}} and admission request {\"kind\":{\"group\":\"wrong\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"kind\":{\"group\":\"group\"}} and admission request {\"kind\":{\"group\":\"wrong\"}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedGroup"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedGroup given binding {\"kind\":{\"group\":\"group\"}} and admission request {\"kind\":{\"group\":\"group\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"kind\":{\"group\":\"group\"}} and admission request {\"kind\":{\"group\":\"group\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedVersion"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedVersion given binding {} and admission request {}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {} and admission request {}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedVersion"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedVersion given binding {} and admission request {\"kind\":{\"version\":\"version\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {} and admission request {\"kind\":{\"version\":\"version\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedVersion"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedVersion given binding {\"kind\":{\"version\":\"version\"}} and admission request {}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"kind\":{\"version\":\"version\"}} and admission request {}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedVersion"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedVersion given binding {\"kind\":{\"version\":\"version\"}} and admission request {\"kind\":{\"version\":\"wrong\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"kind\":{\"version\":\"version\"}} and admission request {\"kind\":{\"version\":\"wrong\"}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedVersion"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedVersion given binding {\"kind\":{\"version\":\"version\"}} and admission request {\"kind\":{\"version\":\"version\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"kind\":{\"version\":\"version\"}} and admission request {\"kind\":{\"version\":\"version\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedKind"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedKind given binding {} and admission request {}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {} and admission request {}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedKind"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedKind given binding {} and admission request {\"kind\":{\"kind\":\"kind\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {} and admission request {\"kind\":{\"kind\":\"kind\"}}, returns false"
        },
        {
          "ancestorTitles": ["mismatchedKind"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedKind given binding {\"kind\":{\"kind\":\"kind\"}} and admission request {}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"kind\":{\"kind\":\"kind\"}} and admission request {}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedKind"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedKind given binding {\"kind\":{\"kind\":\"kind\"}} and admission request {\"kind\":{\"kind\":\"wrong\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"kind\":{\"kind\":\"kind\"}} and admission request {\"kind\":{\"kind\":\"wrong\"}}, returns true"
        },
        {
          "ancestorTitles": ["mismatchedKind"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "mismatchedKind given binding {\"kind\":{\"kind\":\"kind\"}} and admission request {\"kind\":{\"kind\":\"kind\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"kind\":{\"kind\":\"kind\"}} and admission request {\"kind\":{\"kind\":\"kind\"}}, returns false"
        }
      ],
      "endTime": 1737148361567,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/filter/adjudicators/adjudicators.test.ts",
      "startTime": 1737148361335,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["containers"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "containers should return a list of containers in the pod when in a validate block",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a list of containers in the pod when in a validate block"
        },
        {
          "ancestorTitles": ["containers"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "containers should return a list of containers in the pod when in a mutate block",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a list of containers in the pod when in a mutate block"
        },
        {
          "ancestorTitles": ["writeEvent"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "writeEvent should write a K8s event for the CRD",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should write a K8s event for the CRD"
        },
        {
          "ancestorTitles": ["getOwnerRefFrom"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "getOwnerRefFrom should return owner reference for the CRD for combinations of V1OwnerReference fields - Optionals: blockOwnerDeletion (true), controller (false)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return owner reference for the CRD for combinations of V1OwnerReference fields - Optionals: blockOwnerDeletion (true), controller (false)"
        },
        {
          "ancestorTitles": ["getOwnerRefFrom"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "getOwnerRefFrom should return owner reference for the CRD for combinations of V1OwnerReference fields - Optionals: blockOwnerDeletion (false), controller (undefined)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return owner reference for the CRD for combinations of V1OwnerReference fields - Optionals: blockOwnerDeletion (false), controller (undefined)"
        },
        {
          "ancestorTitles": ["getOwnerRefFrom"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "getOwnerRefFrom should return owner reference for the CRD for combinations of V1OwnerReference fields - Optionals: blockOwnerDeletion (undefined), controller (true)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return owner reference for the CRD for combinations of V1OwnerReference fields - Optionals: blockOwnerDeletion (undefined), controller (true)"
        },
        {
          "ancestorTitles": ["getOwnerRefFrom"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "getOwnerRefFrom should return owner reference for the CRD for combinations of V1OwnerReference fields - Optionals: blockOwnerDeletion (undefined), controller (undefined)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return owner reference for the CRD for combinations of V1OwnerReference fields - Optionals: blockOwnerDeletion (undefined), controller (undefined)"
        },
        {
          "ancestorTitles": ["getOwnerRefFrom"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "getOwnerRefFrom should support all defined fields in the V1OwnerReference type",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should support all defined fields in the V1OwnerReference type"
        },
        {
          "ancestorTitles": ["sanitizeResourceName Fuzzing Tests"],
          "duration": 26,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sanitizeResourceName Fuzzing Tests should handle any random string input",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 200,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle any random string input"
        },
        {
          "ancestorTitles": ["sanitizeResourceName Property-Based Tests"],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sanitizeResourceName Property-Based Tests should always return lowercase, alphanumeric names without leading/trailing hyphens",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 282,
          "retryReasons": [],
          "status": "passed",
          "title": "should always return lowercase, alphanumeric names without leading/trailing hyphens"
        },
        {
          "ancestorTitles": ["sanitizeResourceName"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sanitizeResourceName should return same resource name if no sanitization needed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return same resource name if no sanitization needed"
        },
        {
          "ancestorTitles": ["sanitizeResourceName"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sanitizeResourceName should replace capital letters with lowercase letters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should replace capital letters with lowercase letters"
        },
        {
          "ancestorTitles": ["sanitizeResourceName"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sanitizeResourceName should replace sequences of non-alphanumeric characters with a single -",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should replace sequences of non-alphanumeric characters with a single -"
        },
        {
          "ancestorTitles": ["sanitizeResourceName"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sanitizeResourceName should truncate name to 250 characters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should truncate name to 250 characters"
        },
        {
          "ancestorTitles": ["sanitizeResourceName"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sanitizeResourceName should remove leading and trailing non-letter characters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove leading and trailing non-letter characters"
        }
      ],
      "endTime": 1737148361595,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/sdk/sdk.test.ts",
      "startTime": 1737148361337,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["pepr", "projectRoot"],
          "duration": 249,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "pepr projectRoot returns pepr project root directory",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns pepr project root directory"
        },
        {
          "ancestorTitles": ["pepr", "tgzifyModule"],
          "duration": 175,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "pepr tgzifyModule converts module source to install pepr from .tgz",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "converts module source to install pepr from .tgz"
        },
        {
          "ancestorTitles": ["pepr", "cli"],
          "duration": 3170,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "pepr cli can invoke pepr command via .tgz",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "can invoke pepr command via .tgz"
        }
      ],
      "endTime": 1737148361609,
      "message": "",
      "name": "/Users/sam/code/work/pepr/integration/helpers/pepr.test.ts",
      "startTime": 1737148357369,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["sendCache"],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sendCache should reject unsupported operations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject unsupported operations"
        },
        {
          "ancestorTitles": ["sendCache", "when updates are sent to the PeprStore"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sendCache when updates are sent to the PeprStore should clear the cache",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should clear the cache"
        },
        {
          "ancestorTitles": ["sendCache", "when updates are sent to the PeprStore"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sendCache when updates are sent to the PeprStore should clear cache for Unprocessable Entity Errors (HTTP/422)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should clear cache for Unprocessable Entity Errors (HTTP/422)"
        },
        {
          "ancestorTitles": ["sendCache", "when updates are sent to the PeprStore"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sendCache when updates are sent to the PeprStore should repopulate cache for all other HTTP Errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should repopulate cache for all other HTTP Errors"
        },
        {
          "ancestorTitles": ["sendCache", "when creating 'add' operations"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sendCache when creating 'add' operations should write to the cache",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should write to the cache"
        },
        {
          "ancestorTitles": ["sendCache", "when creating 'add' operations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sendCache when creating 'add' operations should write undefined values as empty-string",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should write undefined values as empty-string"
        },
        {
          "ancestorTitles": ["sendCache", "when creating 'remove' operations"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sendCache when creating 'remove' operations should write to the cache",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should write to the cache"
        },
        {
          "ancestorTitles": ["sendCache", "when creating 'remove' operations"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sendCache when creating 'remove' operations should require a key to be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should require a key to be defined"
        },
        {
          "ancestorTitles": ["updateCacheId"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "updateCacheId should update the metadata label of the cacheID in the payload array of patches",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should update the metadata label of the cacheID in the payload array of patches"
        }
      ],
      "endTime": 1737148361619,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/controller/storeCache.test.ts",
      "startTime": 1737148361472,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["ValidateError Fuzz Testing"],
          "duration": 59,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ValidateError Fuzz Testing should only accept predefined error values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 100,
          "retryReasons": [],
          "status": "passed",
          "title": "should only accept predefined error values"
        },
        {
          "ancestorTitles": ["ValidateError Fake Data Testing"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ValidateError Fake Data Testing should correctly handle typical fake error data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should correctly handle typical fake error data"
        },
        {
          "ancestorTitles": ["ValidateError Property-Based Testing"],
          "duration": 45,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ValidateError Property-Based Testing should only validate errors that are part of the ErrorList",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 200,
          "retryReasons": [],
          "status": "passed",
          "title": "should only validate errors that are part of the ErrorList"
        },
        {
          "ancestorTitles": [],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Errors object should have correct properties",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "Errors object should have correct properties"
        },
        {
          "ancestorTitles": [],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ValidateError should not throw an error for valid errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "ValidateError should not throw an error for valid errors"
        },
        {
          "ancestorTitles": [],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ValidateError should throw an error for invalid errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "ValidateError should throw an error for invalid errors"
        }
      ],
      "endTime": 1737148361768,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/errors.test.ts",
      "startTime": 1737148361625,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["declaredUid"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "declaredUid given {\"uid\":\"uid\"}, returns 'uid'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"uid\":\"uid\"}, returns 'uid'"
        },
        {
          "ancestorTitles": ["declaredKind"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "declaredKind given {\"kind\":{\"kind\":\"\"}}, returns ''",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"kind\":{\"kind\":\"\"}}, returns ''"
        },
        {
          "ancestorTitles": ["declaredKind"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "declaredKind given {\"kind\":{\"kind\":\"kind\"}}, returns 'kind'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"kind\":{\"kind\":\"kind\"}}, returns 'kind'"
        },
        {
          "ancestorTitles": ["declaredVersion"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "declaredVersion given {\"kind\":{}}, returns ''",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"kind\":{}}, returns ''"
        },
        {
          "ancestorTitles": ["declaredVersion"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "declaredVersion given {\"kind\":{\"version\":\"\"}}, returns ''",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"kind\":{\"version\":\"\"}}, returns ''"
        },
        {
          "ancestorTitles": ["declaredVersion"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "declaredVersion given {\"kind\":{\"version\":\"version\"}}, returns 'version'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"kind\":{\"version\":\"version\"}}, returns 'version'"
        },
        {
          "ancestorTitles": ["declaredGroup"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "declaredGroup given {\"kind\":{\"group\":\"\"}}, returns ''",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"kind\":{\"group\":\"\"}}, returns ''"
        },
        {
          "ancestorTitles": ["declaredGroup"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "declaredGroup given {\"kind\":{\"group\":\"group\"}}, returns 'group'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"kind\":{\"group\":\"group\"}}, returns 'group'"
        },
        {
          "ancestorTitles": ["declaredOperation"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "declaredOperation given {\"operation\":\"CONNECT\"}, returns 'CONNECT'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"operation\":\"CONNECT\"}, returns 'CONNECT'"
        },
        {
          "ancestorTitles": ["declaredOperation"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "declaredOperation given {\"operation\":\"CREATE\"}, returns 'CREATE'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"operation\":\"CREATE\"}, returns 'CREATE'"
        },
        {
          "ancestorTitles": ["declaredOperation"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "declaredOperation given {\"operation\":\"UPDATE\"}, returns 'UPDATE'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"operation\":\"UPDATE\"}, returns 'UPDATE'"
        },
        {
          "ancestorTitles": ["declaredOperation"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "declaredOperation given {\"operation\":\"DELETE\"}, returns 'DELETE'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"operation\":\"DELETE\"}, returns 'DELETE'"
        }
      ],
      "endTime": 1737148361729,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/filter/adjudicators/requestAdjudicators.test.ts",
      "startTime": 1737148361573,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["definesDeletionTimestamp"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definesDeletionTimestamp given {\"filters\":{\"deletionTimestamp\":false}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"deletionTimestamp\":false}}, returns false"
        },
        {
          "ancestorTitles": ["definesDeletionTimestamp"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definesDeletionTimestamp given {\"filters\":{\"deletionTimestamp\":true}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"deletionTimestamp\":true}}, returns true"
        },
        {
          "ancestorTitles": ["ignoresDeletionTimestamp"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ignoresDeletionTimestamp given {\"filters\":{\"deletionTimestamp\":false}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"deletionTimestamp\":false}}, returns true"
        },
        {
          "ancestorTitles": ["ignoresDeletionTimestamp"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ignoresDeletionTimestamp given {\"filters\":{\"deletionTimestamp\":true}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"deletionTimestamp\":true}}, returns false"
        },
        {
          "ancestorTitles": ["definedName"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedName given {\"filters\":{\"name\":\"name\"}}, returns 'name'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"name\":\"name\"}}, returns 'name'"
        },
        {
          "ancestorTitles": ["definesName"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definesName given {\"filters\":{\"name\":\"name\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"name\":\"name\"}}, returns true"
        },
        {
          "ancestorTitles": ["ignoresName"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ignoresName given {\"filters\":{\"name\":\"name\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"name\":\"name\"}}, returns false"
        },
        {
          "ancestorTitles": ["definedNameRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedNameRegex given {\"filters\":{\"regexName\":\"n.me\"}}, returns 'n.me'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"regexName\":\"n.me\"}}, returns 'n.me'"
        },
        {
          "ancestorTitles": ["definesNameRegex"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definesNameRegex given {\"filters\":{\"regexName\":\"n.me\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"regexName\":\"n.me\"}}, returns true"
        },
        {
          "ancestorTitles": ["carriedName"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriedName given {\"metadata\":{\"name\":\"name\"}}, returns 'name'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"metadata\":{\"name\":\"name\"}}, returns 'name'"
        },
        {
          "ancestorTitles": ["carriesName"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriesName given {\"metadata\":{\"name\":\"name\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"metadata\":{\"name\":\"name\"}}, returns true"
        },
        {
          "ancestorTitles": ["missingName"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "missingName given {\"metadata\":{\"name\":\"name\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"metadata\":{\"name\":\"name\"}}, returns false"
        },
        {
          "ancestorTitles": ["bindsToNamespace"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "bindsToNamespace given binding {\"kind\":{\"kind\":\"\"}} returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"kind\":{\"kind\":\"\"}} returns false"
        },
        {
          "ancestorTitles": ["bindsToNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "bindsToNamespace given binding {\"kind\":{\"kind\":\"Namespace\"}} returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given binding {\"kind\":{\"kind\":\"Namespace\"}} returns true"
        },
        {
          "ancestorTitles": ["definedNamespaces"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedNamespaces given {\"filters\":{\"namespaces\":[]}}, returns []",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"namespaces\":[]}}, returns []"
        },
        {
          "ancestorTitles": ["definedNamespaces"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedNamespaces given {\"filters\":{\"namespaces\":[\"namespace\"]}}, returns [\"namespace\"]",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"namespaces\":[\"namespace\"]}}, returns [\"namespace\"]"
        },
        {
          "ancestorTitles": ["definedNamespaces"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedNamespaces given {\"filters\":{\"namespaces\":[\"name\",\"space\"]}}, returns [\"name\",\"space\"]",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"namespaces\":[\"name\",\"space\"]}}, returns [\"name\",\"space\"]"
        },
        {
          "ancestorTitles": ["definesNamespaces"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definesNamespaces given {\"filters\":{\"namespaces\":[]}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"namespaces\":[]}}, returns false"
        },
        {
          "ancestorTitles": ["definesNamespaces"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definesNamespaces given {\"filters\":{\"namespaces\":[\"namespace\"]}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"namespaces\":[\"namespace\"]}}, returns true"
        },
        {
          "ancestorTitles": ["definesNamespaces"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definesNamespaces given {\"filters\":{\"namespaces\":[\"name\",\"space\"]}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"namespaces\":[\"name\",\"space\"]}}, returns true"
        },
        {
          "ancestorTitles": ["definedNamespaceRegexes"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedNamespaceRegexes given {\"filters\":{\"regexNamespaces\":[]}}, returns []",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"regexNamespaces\":[]}}, returns []"
        },
        {
          "ancestorTitles": ["definedNamespaceRegexes"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedNamespaceRegexes given {\"filters\":{\"regexNamespaces\":[\"n.mesp.ce\"]}}, returns [\"n.mesp.ce\"]",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"regexNamespaces\":[\"n.mesp.ce\"]}}, returns [\"n.mesp.ce\"]"
        },
        {
          "ancestorTitles": ["definedNamespaceRegexes"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedNamespaceRegexes given {\"filters\":{\"regexNamespaces\":[\"n.me\",\"sp.ce\"]}}, returns [\"n.me\",\"sp.ce\"]",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"regexNamespaces\":[\"n.me\",\"sp.ce\"]}}, returns [\"n.me\",\"sp.ce\"]"
        },
        {
          "ancestorTitles": ["definesNamespaceRegexes"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definesNamespaceRegexes given {\"filters\":{\"regexNamespaces\":[]}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"regexNamespaces\":[]}}, returns false"
        },
        {
          "ancestorTitles": ["definesNamespaceRegexes"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definesNamespaceRegexes given {\"filters\":{\"regexNamespaces\":[\"n.mesp.ce\"]}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"regexNamespaces\":[\"n.mesp.ce\"]}}, returns true"
        },
        {
          "ancestorTitles": ["definesNamespaceRegexes"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definesNamespaceRegexes given {\"filters\":{\"regexNamespaces\":[\"n.me\",\"sp.ce\"]}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"regexNamespaces\":[\"n.me\",\"sp.ce\"]}}, returns true"
        },
        {
          "ancestorTitles": ["carriedNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriedNamespace given {}, returns \"\"",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {}, returns \"\""
        },
        {
          "ancestorTitles": ["carriedNamespace"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriedNamespace given {\"metadata\":{}}, returns \"\"",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"metadata\":{}}, returns \"\""
        },
        {
          "ancestorTitles": ["carriedNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriedNamespace given {\"metadata\":{\"namespace\":null}}, returns \"\"",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"metadata\":{\"namespace\":null}}, returns \"\""
        },
        {
          "ancestorTitles": ["carriedNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriedNamespace given {\"metadata\":{\"namespace\":\"\"}}, returns \"\"",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"metadata\":{\"namespace\":\"\"}}, returns \"\""
        },
        {
          "ancestorTitles": ["carriedNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriedNamespace given {\"metadata\":{\"namespace\":\"namespace\"}}, returns \"namespace\"",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"metadata\":{\"namespace\":\"namespace\"}}, returns \"namespace\""
        },
        {
          "ancestorTitles": ["carriesNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriesNamespace given {\"metadata\":{\"namespace\":\"\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"metadata\":{\"namespace\":\"\"}}, returns false"
        },
        {
          "ancestorTitles": ["carriesNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriesNamespace given {\"metadata\":{\"namespace\":\"namespace\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"metadata\":{\"namespace\":\"namespace\"}}, returns true"
        },
        {
          "ancestorTitles": ["misboundNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "misboundNamespace given {\"kind\":{\"kind\":\"Kind\"},\"filters\":{\"namespaces\":[]}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"kind\":{\"kind\":\"Kind\"},\"filters\":{\"namespaces\":[]}}, returns false"
        },
        {
          "ancestorTitles": ["misboundNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "misboundNamespace given {\"kind\":{\"kind\":\"Kind\"},\"filters\":{\"namespaces\":[\"namespace\"]}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"kind\":{\"kind\":\"Kind\"},\"filters\":{\"namespaces\":[\"namespace\"]}}, returns false"
        },
        {
          "ancestorTitles": ["misboundNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "misboundNamespace given {\"kind\":{\"kind\":\"Namespace\"},\"filters\":{\"namespaces\":[]}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"kind\":{\"kind\":\"Namespace\"},\"filters\":{\"namespaces\":[]}}, returns false"
        },
        {
          "ancestorTitles": ["misboundNamespace"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "misboundNamespace given {\"kind\":{\"kind\":\"Namespace\"},\"filters\":{\"namespaces\":[\"namespace\"]}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"kind\":{\"kind\":\"Namespace\"},\"filters\":{\"namespaces\":[\"namespace\"]}}, returns true"
        },
        {
          "ancestorTitles": ["definedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedAnnotations given {\"filters\":{\"annotations\":{}}}, returns {}",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"annotations\":{}}}, returns {}"
        },
        {
          "ancestorTitles": ["definedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedAnnotations given {\"filters\":{\"annotations\":{\"annotation\":\"\"}}}, returns {\"annotation\":\"\"}",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"annotations\":{\"annotation\":\"\"}}}, returns {\"annotation\":\"\"}"
        },
        {
          "ancestorTitles": ["definedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedAnnotations given {\"filters\":{\"annotations\":{\"anno\":\"tation\"}}}, returns {\"anno\":\"tation\"}",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"annotations\":{\"anno\":\"tation\"}}}, returns {\"anno\":\"tation\"}"
        },
        {
          "ancestorTitles": ["definesAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definesAnnotations given {\"filters\":{\"annotations\":{}}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"annotations\":{}}}, returns false"
        },
        {
          "ancestorTitles": ["definesAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definesAnnotations given {\"filters\":{\"annotations\":{\"annotation\":\"\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"annotations\":{\"annotation\":\"\"}}}, returns true"
        },
        {
          "ancestorTitles": ["definesAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definesAnnotations given {\"filters\":{\"annotations\":{\"anno\":\"tation\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"annotations\":{\"anno\":\"tation\"}}}, returns true"
        },
        {
          "ancestorTitles": ["carriedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriedAnnotations given {\"metadata\":{\"annotations\":{}}}, returns {}",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"metadata\":{\"annotations\":{}}}, returns {}"
        },
        {
          "ancestorTitles": ["carriedAnnotations"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriedAnnotations given {\"metadata\":{\"annotations\":{\"annotation\":\"\"}}}, returns {\"annotation\":\"\"}",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"metadata\":{\"annotations\":{\"annotation\":\"\"}}}, returns {\"annotation\":\"\"}"
        },
        {
          "ancestorTitles": ["carriedAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriedAnnotations given {\"metadata\":{\"annotations\":{\"anno\":\"tation\"}}}, returns {\"anno\":\"tation\"}",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"metadata\":{\"annotations\":{\"anno\":\"tation\"}}}, returns {\"anno\":\"tation\"}"
        },
        {
          "ancestorTitles": ["carriesAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriesAnnotations given {\"metadata\":{\"annotations\":{}}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"metadata\":{\"annotations\":{}}}, returns false"
        },
        {
          "ancestorTitles": ["carriesAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriesAnnotations given {\"metadata\":{\"annotations\":{\"annotation\":\"\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"metadata\":{\"annotations\":{\"annotation\":\"\"}}}, returns true"
        },
        {
          "ancestorTitles": ["carriesAnnotations"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriesAnnotations given {\"metadata\":{\"annotations\":{\"anno\":\"tation\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"metadata\":{\"annotations\":{\"anno\":\"tation\"}}}, returns true"
        },
        {
          "ancestorTitles": ["definedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedLabels given {\"filters\":{\"labels\":{}}}, returns {}",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"labels\":{}}}, returns {}"
        },
        {
          "ancestorTitles": ["definedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedLabels given {\"filters\":{\"labels\":{\"label\":\"\"}}}, returns {\"label\":\"\"}",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"labels\":{\"label\":\"\"}}}, returns {\"label\":\"\"}"
        },
        {
          "ancestorTitles": ["definedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedLabels given {\"filters\":{\"labels\":{\"lab\":\"el\"}}}, returns {\"lab\":\"el\"}",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"labels\":{\"lab\":\"el\"}}}, returns {\"lab\":\"el\"}"
        },
        {
          "ancestorTitles": ["definesLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definesLabels given {\"filters\":{\"labels\":{}}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"labels\":{}}}, returns false"
        },
        {
          "ancestorTitles": ["definesLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definesLabels given {\"filters\":{\"labels\":{\"label\":\"\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"labels\":{\"label\":\"\"}}}, returns true"
        },
        {
          "ancestorTitles": ["definesLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definesLabels given {\"filters\":{\"labels\":{\"lab\":\"el\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"filters\":{\"labels\":{\"lab\":\"el\"}}}, returns true"
        },
        {
          "ancestorTitles": ["carriedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriedLabels given {\"metadata\":{\"labels\":{}}}, returns {}",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"metadata\":{\"labels\":{}}}, returns {}"
        },
        {
          "ancestorTitles": ["carriedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriedLabels given {\"metadata\":{\"labels\":{\"label\":\"\"}}}, returns {\"label\":\"\"}",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"metadata\":{\"labels\":{\"label\":\"\"}}}, returns {\"label\":\"\"}"
        },
        {
          "ancestorTitles": ["carriedLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriedLabels given {\"metadata\":{\"labels\":{\"lab\":\"el\"}}}, returns {\"lab\":\"el\"}",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"metadata\":{\"labels\":{\"lab\":\"el\"}}}, returns {\"lab\":\"el\"}"
        },
        {
          "ancestorTitles": ["carriesLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriesLabels given {\"metadata\":{\"labels\":{}}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"metadata\":{\"labels\":{}}}, returns false"
        },
        {
          "ancestorTitles": ["carriesLabels"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriesLabels given {\"metadata\":{\"labels\":{\"label\":\"\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"metadata\":{\"labels\":{\"label\":\"\"}}}, returns true"
        },
        {
          "ancestorTitles": ["carriesLabels"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "carriesLabels given {\"metadata\":{\"labels\":{\"lab\":\"el\"}}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"metadata\":{\"labels\":{\"lab\":\"el\"}}}, returns true"
        },
        {
          "ancestorTitles": ["definedEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedEvent given {\"event\":\"CREATE\"}, returns 'CREATE'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"event\":\"CREATE\"}, returns 'CREATE'"
        },
        {
          "ancestorTitles": ["definedEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedEvent given {\"event\":\"CREATEORUPDATE\"}, returns 'CREATEORUPDATE'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"event\":\"CREATEORUPDATE\"}, returns 'CREATEORUPDATE'"
        },
        {
          "ancestorTitles": ["definedEvent"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedEvent given {\"event\":\"UPDATE\"}, returns 'UPDATE'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"event\":\"UPDATE\"}, returns 'UPDATE'"
        },
        {
          "ancestorTitles": ["definedEvent"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedEvent given {\"event\":\"DELETE\"}, returns 'DELETE'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"event\":\"DELETE\"}, returns 'DELETE'"
        },
        {
          "ancestorTitles": ["definesDelete"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definesDelete given {\"event\":\"CREATE\"}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"event\":\"CREATE\"}, returns false"
        },
        {
          "ancestorTitles": ["definesDelete"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definesDelete given {\"event\":\"CREATEORUPDATE\"}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"event\":\"CREATEORUPDATE\"}, returns false"
        },
        {
          "ancestorTitles": ["definesDelete"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definesDelete given {\"event\":\"UPDATE\"}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"event\":\"UPDATE\"}, returns false"
        },
        {
          "ancestorTitles": ["definesDelete"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definesDelete given {\"event\":\"DELETE\"}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"event\":\"DELETE\"}, returns true"
        },
        {
          "ancestorTitles": ["misboundDeleteWithDeletionTimestamp"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "misboundDeleteWithDeletionTimestamp given {\"event\":\"DELETE\",\"filters\":{\"deletionTimestamp\":false}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"event\":\"DELETE\",\"filters\":{\"deletionTimestamp\":false}}, returns false"
        },
        {
          "ancestorTitles": ["misboundDeleteWithDeletionTimestamp"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "misboundDeleteWithDeletionTimestamp given {\"event\":\"DELETE\",\"filters\":{\"deletionTimestamp\":true}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"event\":\"DELETE\",\"filters\":{\"deletionTimestamp\":true}}, returns true"
        },
        {
          "ancestorTitles": ["when filters are not set"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "when filters are not set given {\"event\":\"CREATE\"}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"event\":\"CREATE\"}, returns false"
        },
        {
          "ancestorTitles": ["when filters are not set"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "when filters are not set given {\"event\":\"CREATEORUPDATE\"}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"event\":\"CREATEORUPDATE\"}, returns false"
        },
        {
          "ancestorTitles": ["when filters are not set"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "when filters are not set given {\"event\":\"UPDATE\"}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"event\":\"UPDATE\"}, returns false"
        },
        {
          "ancestorTitles": ["when filters are not set"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "when filters are not set given {\"event\":\"DELETE\"}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"event\":\"DELETE\"}, returns false"
        },
        {
          "ancestorTitles": ["definedGroup"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedGroup given {\"kind\":{\"group\":\"\"}}, returns ''",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"kind\":{\"group\":\"\"}}, returns ''"
        },
        {
          "ancestorTitles": ["definedGroup"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedGroup given {\"kind\":{\"group\":\"group\"}}, returns 'group'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"kind\":{\"group\":\"group\"}}, returns 'group'"
        },
        {
          "ancestorTitles": ["definesGroup"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definesGroup given {\"kind\":{\"group\":\"\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"kind\":{\"group\":\"\"}}, returns false"
        },
        {
          "ancestorTitles": ["definesGroup"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definesGroup given {\"kind\":{\"group\":\"group\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"kind\":{\"group\":\"group\"}}, returns true"
        },
        {
          "ancestorTitles": ["definedVersion"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedVersion given {\"kind\":{\"version\":\"\"}}, returns ''",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"kind\":{\"version\":\"\"}}, returns ''"
        },
        {
          "ancestorTitles": ["definedVersion"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedVersion given {\"kind\":{\"version\":\"version\"}}, returns 'version'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"kind\":{\"version\":\"version\"}}, returns 'version'"
        },
        {
          "ancestorTitles": ["definesVersion"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definesVersion given {\"kind\":{\"version\":\"\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"kind\":{\"version\":\"\"}}, returns false"
        },
        {
          "ancestorTitles": ["definesVersion"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definesVersion given {\"kind\":{\"version\":\"version\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"kind\":{\"version\":\"version\"}}, returns true"
        },
        {
          "ancestorTitles": ["definedKind"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedKind given {\"kind\":{\"kind\":\"\"}}, returns ''",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"kind\":{\"kind\":\"\"}}, returns ''"
        },
        {
          "ancestorTitles": ["definedKind"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedKind given {\"kind\":{\"kind\":\"kind\"}}, returns 'kind'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"kind\":{\"kind\":\"kind\"}}, returns 'kind'"
        },
        {
          "ancestorTitles": ["definesKind"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definesKind given {\"kind\":{\"kind\":\"\"}}, returns false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"kind\":{\"kind\":\"\"}}, returns false"
        },
        {
          "ancestorTitles": ["definesKind"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definesKind given {\"kind\":{\"kind\":\"kind\"}}, returns true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"kind\":{\"kind\":\"kind\"}}, returns true"
        },
        {
          "ancestorTitles": ["definedCategory"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedCategory given {}, returns ",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {}, returns "
        },
        {
          "ancestorTitles": ["definedCategory"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedCategory given {\"isValidate\":true}, returns Validate",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"isValidate\":true}, returns Validate"
        },
        {
          "ancestorTitles": ["definedCategory"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedCategory given {\"isMutate\":true}, returns Mutate",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"isMutate\":true}, returns Mutate"
        },
        {
          "ancestorTitles": ["definedCategory"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedCategory given {\"isWatch\":true}, returns Watch",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"isWatch\":true}, returns Watch"
        },
        {
          "ancestorTitles": ["definedCategory"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedCategory given {\"isFinalize\":true,\"isWatch\":true}, returns Finalize",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"isFinalize\":true,\"isWatch\":true}, returns Finalize"
        },
        {
          "ancestorTitles": ["definedCallback"],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedCallback given {}, returns null",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {}, returns null"
        },
        {
          "ancestorTitles": ["definedCallback"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedCallback given {\"isValidate\":true}, returns () => {\n        return { allowed: false };\n    }",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"isValidate\":true}, returns () => {\n        return { allowed: false };\n    }"
        },
        {
          "ancestorTitles": ["definedCallback"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedCallback given {\"isMutate\":true}, returns () => { }",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"isMutate\":true}, returns () => { }"
        },
        {
          "ancestorTitles": ["definedCallback"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedCallback given {\"isWatch\":true}, returns () => { }",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"isWatch\":true}, returns () => { }"
        },
        {
          "ancestorTitles": ["definedCallback"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedCallback given {\"isFinalize\":true}, returns () => { }",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"isFinalize\":true}, returns () => { }"
        },
        {
          "ancestorTitles": ["definedCallbackName"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedCallbackName given {}, returns ",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {}, returns "
        },
        {
          "ancestorTitles": ["definedCallbackName"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedCallbackName given {\"isValidate\":true}, returns validateCallback",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"isValidate\":true}, returns validateCallback"
        },
        {
          "ancestorTitles": ["definedCallbackName"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedCallbackName given {\"isMutate\":true}, returns mutateCallback",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"isMutate\":true}, returns mutateCallback"
        },
        {
          "ancestorTitles": ["definedCallbackName"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedCallbackName given {\"isWatch\":true}, returns watchCallback",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"isWatch\":true}, returns watchCallback"
        },
        {
          "ancestorTitles": ["definedCallbackName"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "definedCallbackName given {\"isFinalize\":true}, returns finalizeCallback",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given {\"isFinalize\":true}, returns finalizeCallback"
        }
      ],
      "endTime": 1737148361810,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/filter/adjudicators/bindingAdjudicators.test.ts",
      "startTime": 1737148361598,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["namespace function"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "namespace function should create a namespace object without labels if none are provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a namespace object without labels if none are provided"
        },
        {
          "ancestorTitles": ["namespace function"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "namespace function should create a namespace object with empty labels if an empty object is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a namespace object with empty labels if an empty object is provided"
        },
        {
          "ancestorTitles": ["namespace function"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "namespace function should create a namespace object with provided labels",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a namespace object with provided labels"
        },
        {
          "ancestorTitles": ["watcher function"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "watcher function watcher with bindings",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "watcher with bindings"
        },
        {
          "ancestorTitles": ["watcher function"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "watcher function watcher without bindings",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "watcher without bindings"
        },
        {
          "ancestorTitles": ["deployment function"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "deployment function deployment",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "deployment"
        },
        {
          "ancestorTitles": ["moduleSecret function"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "moduleSecret function moduleSecret within limit",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "moduleSecret within limit"
        },
        {
          "ancestorTitles": ["moduleSecret function"],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "moduleSecret function moduleSecret over limit",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "moduleSecret over limit"
        },
        {
          "ancestorTitles": ["genEnv"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "genEnv generates default environment variables without watch mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "generates default environment variables without watch mode"
        },
        {
          "ancestorTitles": ["genEnv"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "genEnv generates default environment variables with watch mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "generates default environment variables with watch mode"
        },
        {
          "ancestorTitles": ["genEnv"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "genEnv overrides default environment variables with config.env",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "overrides default environment variables with config.env"
        },
        {
          "ancestorTitles": ["genEnv"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "genEnv handles empty config.env correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles empty config.env correctly"
        },
        {
          "ancestorTitles": ["genEnv"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "genEnv should not be able to override PEPR_WATCH_MODE in package.json pepr env",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not be able to override PEPR_WATCH_MODE in package.json pepr env"
        },
        {
          "ancestorTitles": ["genEnv"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "genEnv handles no config.env correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles no config.env correctly"
        },
        {
          "ancestorTitles": ["genEnv"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "genEnv handles ignoreWatchMode for helm chart",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles ignoreWatchMode for helm chart"
        }
      ],
      "endTime": 1737148361899,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/assets/pods.test.ts",
      "startTime": 1737148361615,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["getK8sLogFromKubeConfig"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "getK8sLogFromKubeConfig should create a K8sLog instance from the default KubeConfig",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a K8sLog instance from the default KubeConfig"
        },
        {
          "ancestorTitles": ["getLabelsAndErrorMessage"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "getLabelsAndErrorMessage should return labels and error message",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return labels and error message"
        },
        {
          "ancestorTitles": ["getLabelsAndErrorMessage"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "getLabelsAndErrorMessage should return labels and error message",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return labels and error message"
        },
        {
          "ancestorTitles": ["getLabelsAndErrorMessage"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "getLabelsAndErrorMessage should return labels and error message",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return labels and error message"
        },
        {
          "ancestorTitles": ["getLabelsAndErrorMessage"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "getLabelsAndErrorMessage should return labels and error message",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return labels and error message"
        },
        {
          "ancestorTitles": ["getLabelsAndErrorMessage"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "getLabelsAndErrorMessage should return labels and error message",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return labels and error message"
        },
        {
          "ancestorTitles": ["processMutateLog"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "processMutateLog should log a mutation approval with patch details",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should log a mutation approval with patch details"
        },
        {
          "ancestorTitles": ["processMutateLog"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "processMutateLog should log a mutation denial without patch details",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should log a mutation denial without patch details"
        },
        {
          "ancestorTitles": ["processValidateLog"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "processValidateLog should log a successful validation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should log a successful validation"
        },
        {
          "ancestorTitles": ["processValidateLog"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "processValidateLog should log a validation failure with error messages",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should log a validation failure with error messages"
        }
      ],
      "endTime": 1737148361904,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/cli/monitor.test.ts",
      "startTime": 1737148361778,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["processRequest"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "processRequest responds on successful validation action",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "responds on successful validation action"
        },
        {
          "ancestorTitles": ["processRequest"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "processRequest responds on unsuccessful validation action",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "responds on unsuccessful validation action"
        }
      ],
      "endTime": 1737148361963,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/processors/validate-processor.test.ts",
      "startTime": 1737148361775,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["createWebhookYaml"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "createWebhookYaml replaces placeholders in the YAML correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "replaces placeholders in the YAML correctly"
        }
      ],
      "endTime": 1737148361979,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/assets/index.test.ts",
      "startTime": 1737148361824,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["runRaw()"],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "runRaw() returns stdout",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns stdout"
        },
        {
          "ancestorTitles": ["runRaw()"],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "runRaw() returns exit code",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns exit code"
        },
        {
          "ancestorTitles": ["runRaw()"],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "runRaw() returns stderr",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns stderr"
        },
        {
          "ancestorTitles": ["runRaw()"],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "runRaw() caches last result",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "caches last result"
        },
        {
          "ancestorTitles": ["runRaw()"],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "runRaw() accepts working directory",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "accepts working directory"
        },
        {
          "ancestorTitles": ["runRaw()"],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "runRaw() accepts env var overrides",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "accepts env var overrides"
        },
        {
          "ancestorTitles": ["run()"],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "run() on success, returns result",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "on success, returns result"
        },
        {
          "ancestorTitles": ["run()"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "run() on failure, throws result",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "on failure, throws result"
        }
      ],
      "endTime": 1737148362025,
      "message": "",
      "name": "/Users/sam/code/work/pepr/integration/helpers/cmd.test.ts",
      "startTime": 1737148361906,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["PeprValidateRequest"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprValidateRequest should initialize correctly for non-DELETE operations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should initialize correctly for non-DELETE operations"
        },
        {
          "ancestorTitles": ["PeprValidateRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprValidateRequest should initialize correctly for DELETE operations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should initialize correctly for DELETE operations"
        },
        {
          "ancestorTitles": ["PeprValidateRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprValidateRequest should provide access to old resource",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should provide access to old resource"
        },
        {
          "ancestorTitles": ["PeprValidateRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprValidateRequest should provide access to the request object",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should provide access to the request object"
        },
        {
          "ancestorTitles": ["PeprValidateRequest"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprValidateRequest should check if a label exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should check if a label exists"
        },
        {
          "ancestorTitles": ["PeprValidateRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprValidateRequest should check if an annotation exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should check if an annotation exists"
        },
        {
          "ancestorTitles": ["PeprValidateRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprValidateRequest should create an approval response",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should create an approval response"
        },
        {
          "ancestorTitles": ["PeprValidateRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprValidateRequest should create a denial response",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a denial response"
        },
        {
          "ancestorTitles": ["PeprValidateRequest"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprValidateRequest should throw an error if the request object is not available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an error if the request object is not available"
        }
      ],
      "endTime": 1737148362034,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/validate-request.test.ts",
      "startTime": 1737148361987,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["toHuman()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toHuman() given ms '1', returns '1ms' duration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given ms '1', returns '1ms' duration"
        },
        {
          "ancestorTitles": ["toHuman()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toHuman() given ms '1000', returns '1s' duration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given ms '1000', returns '1s' duration"
        },
        {
          "ancestorTitles": ["toHuman()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toHuman() given ms '60000', returns '1m' duration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given ms '60000', returns '1m' duration"
        },
        {
          "ancestorTitles": ["toHuman()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toHuman() given ms '3600000', returns '1h' duration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given ms '3600000', returns '1h' duration"
        },
        {
          "ancestorTitles": ["toHuman()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toHuman() given ms '86400000', returns '1d' duration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given ms '86400000', returns '1d' duration"
        },
        {
          "ancestorTitles": ["toHuman()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toHuman() given ms '604800000', returns '1w' duration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given ms '604800000', returns '1w' duration"
        },
        {
          "ancestorTitles": ["toHuman()"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toHuman() given ms '2592000000', returns '1mo' duration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given ms '2592000000', returns '1mo' duration"
        },
        {
          "ancestorTitles": ["toHuman()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toHuman() given ms '31536000000', returns '1y' duration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given ms '31536000000', returns '1y' duration"
        },
        {
          "ancestorTitles": ["toHuman()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toHuman() given ms '34822861001', returns '1y1mo1w1d1h1m1s1ms' duration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given ms '34822861001', returns '1y1mo1w1d1h1m1s1ms' duration"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '1ms', returns '1' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '1ms', returns '1' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '1s', returns '1000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '1s', returns '1000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '60s', returns '60000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '60s', returns '60000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '1m', returns '60000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '1m', returns '60000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '60m', returns '3600000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '60m', returns '3600000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '1h', returns '3600000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '1h', returns '3600000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '24h', returns '86400000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '24h', returns '86400000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '1d', returns '86400000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '1d', returns '86400000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '7d', returns '604800000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '7d', returns '604800000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '1w', returns '604800000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '1w', returns '604800000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '30d', returns '2592000000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '30d', returns '2592000000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '1mo', returns '2592000000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '1mo', returns '2592000000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '365d', returns '31536000000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '365d', returns '31536000000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '1y', returns '31536000000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '1y', returns '31536000000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '0001s', returns '1000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '0001s', returns '1000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '1 s  ', returns '1000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '1 s  ', returns '1000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '1y1mo1w1d1h1m1s1ms', returns '34822861001' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '1y1mo1w1d1h1m1s1ms', returns '34822861001' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '1ms1s1m1h1d1w1mo1y', returns '34822861001' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '1ms1s1m1h1d1w1mo1y', returns '34822861001' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration 'h1m1s', throws error matching '/Unrecognized number .* while parsing/'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration 'h1m1s', throws error matching '/Unrecognized number .* while parsing/'"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '1z', throws error matching '/Unrecognized unit .* while parsing/'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '1z', throws error matching '/Unrecognized unit .* while parsing/'"
        },
        {
          "ancestorTitles": ["generateAudienceData()"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "generateAudienceData() creates 'random' datasets",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "creates 'random' datasets"
        },
        {
          "ancestorTitles": ["parseActressData()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "parseActressData() converts logged data appropriately split lines",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "converts logged data appropriately split lines"
        },
        {
          "ancestorTitles": ["parseAudienceData()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "parseAudienceData() converts logged data into per-pod datasets",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "converts logged data into per-pod datasets"
        },
        {
          "ancestorTitles": ["injectsToRps()"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "injectsToRps() converts list of timestamps into list of counts of injects within second prior",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "converts list of timestamps into list of counts of injects within second prior"
        }
      ],
      "endTime": 1737148362065,
      "message": "",
      "name": "/Users/sam/code/work/pepr/hack/load.unit.test.ts",
      "startTime": 1737148362030,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["peprIgnoreNamespaces"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "peprIgnoreNamespaces should have order of kube-system, then pepr-system for the helm templating",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should have order of kube-system, then pepr-system for the helm templating"
        },
        {
          "ancestorTitles": ["resolveIgnoreNamespaces"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "resolveIgnoreNamespaces should default to empty array ig config is empty",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should default to empty array ig config is empty"
        },
        {
          "ancestorTitles": ["resolveIgnoreNamespaces"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "resolveIgnoreNamespaces should return the config ignore namespaces if not provided PEPR_ADDITIONAL_IGNORED_NAMESPACES is not provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return the config ignore namespaces if not provided PEPR_ADDITIONAL_IGNORED_NAMESPACES is not provided"
        },
        {
          "ancestorTitles": ["resolveIgnoreNamespaces"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "resolveIgnoreNamespaces should include additionalIgnoredNamespaces when PEPR_ADDITIONAL_IGNORED_NAMESPACES is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should include additionalIgnoredNamespaces when PEPR_ADDITIONAL_IGNORED_NAMESPACES is provided"
        }
      ],
      "endTime": 1737148362069,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/assets/webhooks.test.ts",
      "startTime": 1737148362036,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["stripV2Prefix"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "stripV2Prefix should remove the v2 prefix",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove the v2 prefix"
        },
        {
          "ancestorTitles": ["v2StoreKey"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "v2StoreKey should prefix the key with v2",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should prefix the key with v2"
        },
        {
          "ancestorTitles": ["v2UnescapedStoreKey"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "v2UnescapedStoreKey should prefix the key with v2",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should prefix the key with v2"
        },
        {
          "ancestorTitles": ["Storage with fuzzing and property-based tests"],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Storage with fuzzing and property-based tests should correctly set and retrieve items",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 100,
          "retryReasons": [],
          "status": "passed",
          "title": "should correctly set and retrieve items"
        },
        {
          "ancestorTitles": ["Storage with fuzzing and property-based tests"],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Storage with fuzzing and property-based tests should return null for non-existing items",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 100,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null for non-existing items"
        },
        {
          "ancestorTitles": ["Storage with fuzzing and property-based tests"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Storage with fuzzing and property-based tests should correctly remove items",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 100,
          "retryReasons": [],
          "status": "passed",
          "title": "should correctly remove items"
        },
        {
          "ancestorTitles": ["Storage with fuzzing and property-based tests"],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Storage with fuzzing and property-based tests should ensure all set items are v2-coded internally",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 100,
          "retryReasons": [],
          "status": "passed",
          "title": "should ensure all set items are v2-coded internally"
        },
        {
          "ancestorTitles": ["Storage"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Storage should set an item",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should set an item"
        },
        {
          "ancestorTitles": ["Storage"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Storage should set an item and wait",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should set an item and wait"
        },
        {
          "ancestorTitles": ["Storage"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Storage should remove an item and wait",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove an item and wait"
        },
        {
          "ancestorTitles": ["Storage"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Storage should remove an item",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove an item"
        },
        {
          "ancestorTitles": ["Storage"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Storage should clear all items",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should clear all items"
        },
        {
          "ancestorTitles": ["Storage"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Storage should get an item",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "should get an item"
        },
        {
          "ancestorTitles": ["Storage"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Storage should return null for non-existing item",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null for non-existing item"
        },
        {
          "ancestorTitles": ["Storage"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Storage should subscribe and unsubscribe",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should subscribe and unsubscribe"
        },
        {
          "ancestorTitles": ["Storage"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Storage should call onReady handlers",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should call onReady handlers"
        },
        {
          "ancestorTitles": ["Storage"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Storage should handle null data in receive method",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle null data in receive method"
        }
      ],
      "endTime": 1737148362073,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/core/storage.test.ts",
      "startTime": 1737148361974,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Logger"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Logger should set log level based on LOG_LEVEL environment variable",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should set log level based on LOG_LEVEL environment variable"
        },
        {
          "ancestorTitles": ["Logger", "when PEPR_STORE_REDACT_VALUE is true"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Logger when PEPR_STORE_REDACT_VALUE is true should redact keys and values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should redact keys and values"
        },
        {
          "ancestorTitles": ["Logger", "when PEPR_STORE_REDACT_VALUE is true"],
          "duration": 32,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Logger when PEPR_STORE_REDACT_VALUE is true should redact values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 460,
          "retryReasons": [],
          "status": "passed",
          "title": "should redact values"
        },
        {
          "ancestorTitles": ["Logger", "when PEPR_STORE_REDACT_VALUE is true"],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Logger when PEPR_STORE_REDACT_VALUE is true should maintain other store properties",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 300,
          "retryReasons": [],
          "status": "passed",
          "title": "should maintain other store properties"
        },
        {
          "ancestorTitles": ["Logger", "when PEPR_STORE_REDACT_VALUE is false"],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Logger when PEPR_STORE_REDACT_VALUE is false should not redact values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 100,
          "retryReasons": [],
          "status": "passed",
          "title": "should not redact values"
        },
        {
          "ancestorTitles": ["Logger", "when PEPR_STORE_REDACT_VALUE is false"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Logger when PEPR_STORE_REDACT_VALUE is false should not redact keys and values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should not redact keys and values"
        },
        {
          "ancestorTitles": ["Logger", "when PEPR_STORE_REDACT_VALUE is false"],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Logger when PEPR_STORE_REDACT_VALUE is false should maintain other store properties",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 300,
          "retryReasons": [],
          "status": "passed",
          "title": "should maintain other store properties"
        }
      ],
      "endTime": 1737148362112,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/telemetry/logger.test.ts",
      "startTime": 1737148361918,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["PeprMutateRequest"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprMutateRequest should initialize correctly for non-DELETE operations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should initialize correctly for non-DELETE operations"
        },
        {
          "ancestorTitles": ["PeprMutateRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprMutateRequest should initialize correctly for DELETE operations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should initialize correctly for DELETE operations"
        },
        {
          "ancestorTitles": ["PeprMutateRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprMutateRequest should provide correct value for PermitSideEffects",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should provide correct value for PermitSideEffects"
        },
        {
          "ancestorTitles": ["PeprMutateRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprMutateRequest should provide correct value for IsDryRun",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should provide correct value for IsDryRun"
        },
        {
          "ancestorTitles": ["PeprMutateRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprMutateRequest should provide access to old resource",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should provide access to old resource"
        },
        {
          "ancestorTitles": ["PeprMutateRequest"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprMutateRequest should provide access to the request object",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should provide access to the request object"
        },
        {
          "ancestorTitles": ["PeprMutateRequest"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprMutateRequest should throw an error if the request object is not available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an error if the request object is not available"
        },
        {
          "ancestorTitles": ["PeprMutateRequest"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprMutateRequest should merge the provided object with the current resource",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should merge the provided object with the current resource"
        },
        {
          "ancestorTitles": ["PeprMutateRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprMutateRequest should set a label",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should set a label"
        },
        {
          "ancestorTitles": ["PeprMutateRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprMutateRequest should set an annotation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should set an annotation"
        },
        {
          "ancestorTitles": ["PeprMutateRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprMutateRequest should remove an existing label",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove an existing label"
        },
        {
          "ancestorTitles": ["PeprMutateRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprMutateRequest should remove an existing annotation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove an existing annotation"
        },
        {
          "ancestorTitles": ["PeprMutateRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprMutateRequest should check if a label exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should check if a label exists"
        },
        {
          "ancestorTitles": ["PeprMutateRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprMutateRequest should check if an annotation exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should check if an annotation exists"
        },
        {
          "ancestorTitles": ["PeprMutateRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprMutateRequest should set a label when metadata and labels do not exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should set a label when metadata and labels do not exist"
        },
        {
          "ancestorTitles": ["PeprMutateRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprMutateRequest should set an annotation when metadata and annotations do not exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should set an annotation when metadata and annotations do not exist"
        },
        {
          "ancestorTitles": ["PeprMutateRequest"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprMutateRequest should not throw an error when removing a non-existent label",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not throw an error when removing a non-existent label"
        },
        {
          "ancestorTitles": ["PeprMutateRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprMutateRequest should not throw an error when removing a non-existent annotation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not throw an error when removing a non-existent annotation"
        },
        {
          "ancestorTitles": ["PeprMutateRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprMutateRequest should return false for HasLabel when metadata or labels do not exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false for HasLabel when metadata or labels do not exist"
        },
        {
          "ancestorTitles": ["PeprMutateRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PeprMutateRequest should return false for HasAnnotation when metadata or annotations do not exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false for HasAnnotation when metadata or annotations do not exist"
        }
      ],
      "endTime": 1737148362115,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/mutate-request.test.ts",
      "startTime": 1737148362070,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["OnSchedule"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "OnSchedule should create an instance of OnSchedule",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should create an instance of OnSchedule"
        },
        {
          "ancestorTitles": ["OnSchedule"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "OnSchedule should startInterval, run, and start",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should startInterval, run, and start"
        },
        {
          "ancestorTitles": ["OnSchedule"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "OnSchedule should stop, removeItem, and removeItem",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should stop, removeItem, and removeItem"
        },
        {
          "ancestorTitles": ["OnSchedule", "getDuration handles supported inputs"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "OnSchedule getDuration handles supported inputs {\"description\": \"test seconds\", \"expectedDuration\": 10000, \"setup\": [Object], \"shouldThrow\": false}",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "{\"description\": \"test seconds\", \"expectedDuration\": 10000, \"setup\": [Object], \"shouldThrow\": false}"
        },
        {
          "ancestorTitles": ["OnSchedule", "getDuration handles supported inputs"],
          "duration": 18,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "OnSchedule getDuration handles supported inputs {\"description\": \"test second error\", \"expectedError\": [Error: 10 Seconds in the smallest interval allowed], \"setup\": [Object], \"shouldThrow\": true}",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "{\"description\": \"test second error\", \"expectedError\": [Error: 10 Seconds in the smallest interval allowed], \"setup\": [Object], \"shouldThrow\": true}"
        },
        {
          "ancestorTitles": ["OnSchedule", "getDuration handles supported inputs"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "OnSchedule getDuration handles supported inputs {\"description\": \"test minutes\", \"expectedDuration\": 600000, \"setup\": [Object], \"shouldThrow\": false}",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "{\"description\": \"test minutes\", \"expectedDuration\": 600000, \"setup\": [Object], \"shouldThrow\": false}"
        },
        {
          "ancestorTitles": ["OnSchedule", "getDuration handles supported inputs"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "OnSchedule getDuration handles supported inputs {\"description\": \"test singular minute\", \"expectedDuration\": 600000, \"setup\": [Object], \"shouldThrow\": false}",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "{\"description\": \"test singular minute\", \"expectedDuration\": 600000, \"setup\": [Object], \"shouldThrow\": false}"
        },
        {
          "ancestorTitles": ["OnSchedule", "getDuration handles supported inputs"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "OnSchedule getDuration handles supported inputs {\"description\": \"test hours\", \"expectedDuration\": 36000000, \"setup\": [Object], \"shouldThrow\": false}",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "{\"description\": \"test hours\", \"expectedDuration\": 36000000, \"setup\": [Object], \"shouldThrow\": false}"
        },
        {
          "ancestorTitles": ["OnSchedule", "getDuration handles supported inputs"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "OnSchedule getDuration handles supported inputs {\"description\": \"test singular hour\", \"expectedDuration\": 36000000, \"setup\": [Object], \"shouldThrow\": false}",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "{\"description\": \"test singular hour\", \"expectedDuration\": 36000000, \"setup\": [Object], \"shouldThrow\": false}"
        },
        {
          "ancestorTitles": ["OnSchedule", "getDuration handles supported inputs"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "OnSchedule getDuration handles supported inputs {\"description\": \"test invalid unit\", \"expectedError\": [Error: Invalid time unit], \"setup\": [Object], \"shouldThrow\": true}",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "{\"description\": \"test invalid unit\", \"expectedError\": [Error: Invalid time unit], \"setup\": [Object], \"shouldThrow\": true}"
        },
        {
          "ancestorTitles": ["OnSchedule"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "OnSchedule should setupInterval",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should setupInterval"
        },
        {
          "ancestorTitles": ["OnSchedule"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "OnSchedule should call setItem during saveToStore",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should call setItem during saveToStore"
        },
        {
          "ancestorTitles": ["OnSchedule"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "OnSchedule checkStore retrieves values from the store",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "checkStore retrieves values from the store"
        }
      ],
      "endTime": 1737148362129,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/core/schedule.test.ts",
      "startTime": 1737148362079,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["utils"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "utils convertToBase64Map should encode all ascii values and skip listed values in skip array",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "convertToBase64Map should encode all ascii values and skip listed values in skip array"
        },
        {
          "ancestorTitles": ["utils"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "utils convertFromBase64Map should decode all ascii values and skip values in skip array",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "convertFromBase64Map should decode all ascii values and skip values in skip array"
        },
        {
          "ancestorTitles": ["utils"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "utils base64Decode should decode a base64 string",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "base64Decode should decode a base64 string"
        },
        {
          "ancestorTitles": ["utils"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "utils base64Encode should encode a string to base64",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "base64Encode should encode a string to base64"
        },
        {
          "ancestorTitles": ["utils"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "utils convertToBase64Map empty object",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "convertToBase64Map empty object"
        },
        {
          "ancestorTitles": ["utils"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "utils convertFromBase64Map empty object",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "convertFromBase64Map empty object"
        }
      ],
      "endTime": 1737148362139,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/utils.test.ts",
      "startTime": 1737148362120,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["namespaceDeploymentsReady"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "namespaceDeploymentsReady should return true if all deployments are ready",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true if all deployments are ready"
        },
        {
          "ancestorTitles": ["namespaceDeploymentsReady"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "namespaceDeploymentsReady should call checkDeploymentStatus if any deployments are not ready",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should call checkDeploymentStatus if any deployments are not ready"
        },
        {
          "ancestorTitles": ["checkDeploymentStatus"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "checkDeploymentStatus should return true if all deployments are ready",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true if all deployments are ready"
        },
        {
          "ancestorTitles": ["checkDeploymentStatus"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "checkDeploymentStatus should return false if any deployments are not ready",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false if any deployments are not ready"
        }
      ],
      "endTime": 1737148362140,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/deploymentChecks.test.ts",
      "startTime": 1737148362123,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["karForMutate()"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "karForMutate() returns given MutateResponse wrapped in an KubeAdmissionReview",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns given MutateResponse wrapped in an KubeAdmissionReview"
        },
        {
          "ancestorTitles": ["karForValidate()", "given 0 ValidationResponse[]'s"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "karForValidate() given 0 ValidationResponse[]'s returns KubeAdmissionReview with abbreviated success message",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns KubeAdmissionReview with abbreviated success message"
        },
        {
          "ancestorTitles": ["karForValidate()", "given 1-or-more ValidationResponse[]'s"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "karForValidate() given 1-or-more ValidationResponse[]'s returns KubeAdmissionReview with detailed success message",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns KubeAdmissionReview with detailed success message"
        },
        {
          "ancestorTitles": ["karForValidate()", "given 1-or-more ValidationResponse[]'s"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "karForValidate() given 1-or-more ValidationResponse[]'s returns KubeAdmissionReview with detailed failure message",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns KubeAdmissionReview with detailed failure message"
        }
      ],
      "endTime": 1737148362154,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/controller/index.util.test.ts",
      "startTime": 1737148362136,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["updateStatus", "when given non-delete request"],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "updateStatus when given non-delete request adds status annotation to to-be-admitted resource",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "adds status annotation to to-be-admitted resource"
        },
        {
          "ancestorTitles": ["updateStatus", "when given delete request"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "updateStatus when given delete request does not add status annotation to to-be-admitted resource",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not add status annotation to to-be-admitted resource"
        },
        {
          "ancestorTitles": ["logMutateErrorMessage"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "logMutateErrorMessage given error 'oof', returns 'oof'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given error 'oof', returns 'oof'"
        },
        {
          "ancestorTitles": ["logMutateErrorMessage"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "logMutateErrorMessage given error '', returns 'An error occurred with the mutate action.'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given error '', returns 'An error occurred with the mutate action.'"
        },
        {
          "ancestorTitles": ["logMutateErrorMessage"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "logMutateErrorMessage given error '[object Object]', returns 'An error occurred with the mutate action.'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given error '[object Object]', returns 'An error occurred with the mutate action.'"
        },
        {
          "ancestorTitles": ["decodeData"],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "decodeData returns skips if required & given a Secret",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "returns skips if required & given a Secret"
        },
        {
          "ancestorTitles": ["decodeData"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "decodeData returns no skips when given a non-Secret",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "returns no skips when given a non-Secret"
        },
        {
          "ancestorTitles": ["reencodeData"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "reencodeData returns unchanged content when given non-secret",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns unchanged content when given non-secret"
        },
        {
          "ancestorTitles": ["reencodeData"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "reencodeData returns modified content when given a secret and skips",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "returns modified content when given a secret and skips"
        },
        {
          "ancestorTitles": ["processRequest"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "processRequest adds a status annotation on success",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "adds a status annotation on success"
        },
        {
          "ancestorTitles": ["processRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "processRequest adds a status annotation, warning, and result on failure when Errors.reject",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "adds a status annotation, warning, and result on failure when Errors.reject"
        },
        {
          "ancestorTitles": ["processRequest"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "processRequest adds a status annotation, warning, and auditAnnotation on failure when Errors.audit",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 10,
          "retryReasons": [],
          "status": "passed",
          "title": "adds a status annotation, warning, and auditAnnotation on failure when Errors.audit"
        }
      ],
      "endTime": 1737148362151,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/processors/mutate-processor.test.ts",
      "startTime": 1737148362071,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sanitizeName() sanitizes 'My Test Module' correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "sanitizeName() sanitizes 'My Test Module' correctly"
        },
        {
          "ancestorTitles": [],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sanitizeName() sanitizes '!! 123 @@ Module' correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "sanitizeName() sanitizes '!! 123 @@ Module' correctly"
        },
        {
          "ancestorTitles": [],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sanitizeName() sanitizes '---Test-Module---' correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "sanitizeName() sanitizes '---Test-Module---' correctly"
        },
        {
          "ancestorTitles": [],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sanitizeName() should throw TypeError when given a non-string",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "sanitizeName() should throw TypeError when given a non-string"
        },
        {
          "ancestorTitles": ["createDir"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "createDir should create the pepr-test-module dir",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should create the pepr-test-module dir"
        },
        {
          "ancestorTitles": ["createDir"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "createDir should throw an error if the directory already exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an error if the directory already exists"
        },
        {
          "ancestorTitles": ["createDir"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "createDir should throw the error if there is another error other than already exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw the error if there is another error other than already exists"
        },
        {
          "ancestorTitles": ["write"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "write should write data to a file",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should write data to a file"
        },
        {
          "ancestorTitles": ["write"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "write should stringify data if it is not a string",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should stringify data if it is not a string"
        }
      ],
      "endTime": 1737148362172,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/cli/init/utils.test.ts",
      "startTime": 1737148362142,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Kubernetes Template Generators", "nsTemplate"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Kubernetes Template Generators nsTemplate should generate a Namespace template correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate a Namespace template correctly"
        },
        {
          "ancestorTitles": ["Kubernetes Template Generators", "chartYaml"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Kubernetes Template Generators chartYaml should generate a Chart.yaml content correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate a Chart.yaml content correctly"
        },
        {
          "ancestorTitles": ["Kubernetes Template Generators", "watcherDeployTemplate"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Kubernetes Template Generators watcherDeployTemplate should generate a Deployment template for the watcher correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate a Deployment template for the watcher correctly"
        },
        {
          "ancestorTitles": ["Kubernetes Template Generators", "admissionDeployTemplate"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Kubernetes Template Generators admissionDeployTemplate should generate a Deployment template for the admission controller correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate a Deployment template for the admission controller correctly"
        },
        {
          "ancestorTitles": ["Kubernetes Template Generators", "admissionServiceMonitor"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Kubernetes Template Generators admissionServiceMonitor should generate a Service Monitor template for the admission controller correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate a Service Monitor template for the admission controller correctly"
        },
        {
          "ancestorTitles": ["Kubernetes Template Generators", "watcherServiceMonitor"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Kubernetes Template Generators watcherServiceMonitor should generate a Service Monitor template for the watcher controller correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate a Service Monitor template for the watcher controller correctly"
        }
      ],
      "endTime": 1737148362175,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/assets/helm.test.ts",
      "startTime": 1737148362157,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["createDirectoryIfNotExists function"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "createDirectoryIfNotExists function should create a directory if it doesn't exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a directory if it doesn't exist"
        },
        {
          "ancestorTitles": ["createDirectoryIfNotExists function"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "createDirectoryIfNotExists function should not create a directory if it already exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should not create a directory if it already exists"
        },
        {
          "ancestorTitles": ["createDirectoryIfNotExists function"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "createDirectoryIfNotExists function should throw an error for other fs.access errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an error for other fs.access errors"
        }
      ],
      "endTime": 1737148362191,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/filesystemService.test.ts",
      "startTime": 1737148362171,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["toHuman()"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toHuman() given ms '1', returns '1ms' duration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given ms '1', returns '1ms' duration"
        },
        {
          "ancestorTitles": ["toHuman()"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toHuman() given ms '1000', returns '1s' duration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given ms '1000', returns '1s' duration"
        },
        {
          "ancestorTitles": ["toHuman()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toHuman() given ms '60000', returns '1m' duration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given ms '60000', returns '1m' duration"
        },
        {
          "ancestorTitles": ["toHuman()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toHuman() given ms '3600000', returns '1h' duration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given ms '3600000', returns '1h' duration"
        },
        {
          "ancestorTitles": ["toHuman()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toHuman() given ms '86400000', returns '1d' duration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given ms '86400000', returns '1d' duration"
        },
        {
          "ancestorTitles": ["toHuman()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toHuman() given ms '604800000', returns '1w' duration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given ms '604800000', returns '1w' duration"
        },
        {
          "ancestorTitles": ["toHuman()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toHuman() given ms '2592000000', returns '1mo' duration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given ms '2592000000', returns '1mo' duration"
        },
        {
          "ancestorTitles": ["toHuman()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toHuman() given ms '31536000000', returns '1y' duration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given ms '31536000000', returns '1y' duration"
        },
        {
          "ancestorTitles": ["toHuman()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toHuman() given ms '34822861001', returns '1y1mo1w1d1h1m1s1ms' duration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given ms '34822861001', returns '1y1mo1w1d1h1m1s1ms' duration"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '1ms', returns '1' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '1ms', returns '1' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '1s', returns '1000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '1s', returns '1000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '60s', returns '60000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '60s', returns '60000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '1m', returns '60000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '1m', returns '60000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '60m', returns '3600000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '60m', returns '3600000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '1h', returns '3600000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '1h', returns '3600000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '24h', returns '86400000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '24h', returns '86400000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '1d', returns '86400000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '1d', returns '86400000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '7d', returns '604800000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '7d', returns '604800000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '1w', returns '604800000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '1w', returns '604800000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '30d', returns '2592000000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '30d', returns '2592000000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '1mo', returns '2592000000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '1mo', returns '2592000000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '365d', returns '31536000000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '365d', returns '31536000000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '1y', returns '31536000000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '1y', returns '31536000000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '0001s', returns '1000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '0001s', returns '1000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '1 s  ', returns '1000' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '1 s  ', returns '1000' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '1y1mo1w1d1h1m1s1ms', returns '34822861001' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '1y1mo1w1d1h1m1s1ms', returns '34822861001' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '1ms1s1m1h1d1w1mo1y', returns '34822861001' ms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '1ms1s1m1h1d1w1mo1y', returns '34822861001' ms"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration 'h1m1s', throws error matching '/Unrecognized number .* while parsing/'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration 'h1m1s', throws error matching '/Unrecognized number .* while parsing/'"
        },
        {
          "ancestorTitles": ["toMs()"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "toMs() given duration '1z', throws error matching '/Unrecognized unit .* while parsing/'",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given duration '1z', throws error matching '/Unrecognized unit .* while parsing/'"
        }
      ],
      "endTime": 1737148362186,
      "message": "",
      "name": "/Users/sam/code/work/pepr/integration/helpers/time.test.ts",
      "startTime": 1737148362144,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["formatWithPrettier"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "formatWithPrettier should format files and write back to the file system",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should format files and write back to the file system"
        },
        {
          "ancestorTitles": ["formatWithPrettier"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "formatWithPrettier should report failures in validate-only mode if files are not formatted",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should report failures in validate-only mode if files are not formatted"
        }
      ],
      "endTime": 1737148362200,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/cli/format.test.ts",
      "startTime": 1737148362177,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["createDockerfile"],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "createDockerfile should create a Dockerfile.controller with the correct content",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a Dockerfile.controller with the correct content"
        }
      ],
      "endTime": 1737148362201,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/lib/included-files.test.ts",
      "startTime": 1737148362177,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["heredoc"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "heredoc trims head/tail empty lines & de-indents",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "trims head/tail empty lines & de-indents"
        }
      ],
      "endTime": 1737148362210,
      "message": "",
      "name": "/Users/sam/code/work/pepr/src/sdk/heredoc.unit.test.ts",
      "startTime": 1737148362193,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [],
      "coverage": {},
      "endTime": 1737148365985,
      "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    TypeError: Converting circular structure to JSON\n        --> starting at object with constructor 'Error'\n        --- property 'error' closes the circle\n        at stringify (<anonymous>)\n\n      \u001b[2mat messageParent (\u001b[22m../../../../../opt/homebrew/lib/node_modules/jest/node_modules/jest-worker/build/workers/messageParent.js\u001b[2m:29:19)\u001b[22m\n",
      "name": "/Users/sam/code/work/pepr/journey/entrypoint.test.ts",
      "startTime": 1737148365985,
      "status": "failed",
      "summary": ""
    },
    {
      "assertionResults": [],
      "coverage": {},
      "endTime": 1737148365985,
      "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    TypeError: Converting circular structure to JSON\n        --> starting at object with constructor 'Error'\n        --- property 'error' closes the circle\n        at stringify (<anonymous>)\n\n      \u001b[2mat messageParent (\u001b[22m../../../../../opt/homebrew/lib/node_modules/jest/node_modules/jest-worker/build/workers/messageParent.js\u001b[2m:29:19)\u001b[22m\n",
      "name": "/Users/sam/code/work/pepr/journey/entrypoint-wasm.test.ts",
      "startTime": 1737148365985,
      "status": "failed",
      "summary": ""
    }
  ],
  "wasInterrupted": false,
  "coverageMap": {
    "/Users/sam/code/work/pepr/journey/k8s.ts": {
      "path": "/Users/sam/code/work/pepr/journey/k8s.ts",
      "statementMap": {
        "0": { "start": { "line": 8, "column": 0 }, "end": { "line": 8, "column": 16 } },
        "1": { "start": { "line": 12, "column": 0 }, "end": { "line": 12, "column": 7 } },
        "2": { "start": { "line": 20, "column": 0 }, "end": { "line": 20, "column": 7 } },
        "3": { "start": { "line": 31, "column": 0 }, "end": { "line": 31, "column": 7 } },
        "4": { "start": { "line": 38, "column": 0 }, "end": { "line": 38, "column": 7 } },
        "5": { "start": { "line": 52, "column": 0 }, "end": { "line": 52, "column": 7 } },
        "6": { "start": { "line": 61, "column": 0 }, "end": { "line": 61, "column": 7 } },
        "7": { "start": { "line": 70, "column": 0 }, "end": { "line": 70, "column": 7 } },
        "8": { "start": { "line": 84, "column": 0 }, "end": { "line": 84, "column": 7 } },
        "9": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 53 } },
        "10": { "start": { "line": 6, "column": 0 }, "end": { "line": 6, "column": 39 } },
        "11": { "start": { "line": 9, "column": 2 }, "end": { "line": 9, "column": 69 } },
        "12": { "start": { "line": 9, "column": 32 }, "end": { "line": 9, "column": 67 } },
        "13": { "start": { "line": 13, "column": 2 }, "end": { "line": 17, "column": 3 } },
        "14": { "start": { "line": 14, "column": 4 }, "end": { "line": 14, "column": 66 } },
        "15": { "start": { "line": 21, "column": 21 }, "end": { "line": 21, "column": 80 } },
        "16": { "start": { "line": 22, "column": 19 }, "end": { "line": 22, "column": 49 } },
        "17": { "start": { "line": 23, "column": 24 }, "end": { "line": 23, "column": 61 } },
        "18": { "start": { "line": 25, "column": 2 }, "end": { "line": 28, "column": 3 } },
        "19": { "start": { "line": 26, "column": 4 }, "end": { "line": 26, "column": 19 } },
        "20": { "start": { "line": 27, "column": 4 }, "end": { "line": 27, "column": 51 } },
        "21": { "start": { "line": 32, "column": 16 }, "end": { "line": 32, "column": 69 } },
        "22": { "start": { "line": 33, "column": 2 }, "end": { "line": 35, "column": 3 } },
        "23": { "start": { "line": 34, "column": 4 }, "end": { "line": 34, "column": 32 } },
        "24": { "start": { "line": 39, "column": 2 }, "end": { "line": 49, "column": 3 } },
        "25": { "start": { "line": 40, "column": 18 }, "end": { "line": 40, "column": 71 } },
        "26": { "start": { "line": 41, "column": 4 }, "end": { "line": 43, "column": 5 } },
        "27": { "start": { "line": 42, "column": 6 }, "end": { "line": 42, "column": 34 } },
        "28": { "start": { "line": 45, "column": 4 }, "end": { "line": 45, "column": 37 } },
        "29": { "start": { "line": 47, "column": 4 }, "end": { "line": 47, "column": 19 } },
        "30": { "start": { "line": 48, "column": 4 }, "end": { "line": 48, "column": 47 } },
        "31": { "start": { "line": 53, "column": 2 }, "end": { "line": 58, "column": 3 } },
        "32": { "start": { "line": 54, "column": 4 }, "end": { "line": 54, "column": 52 } },
        "33": { "start": { "line": 56, "column": 4 }, "end": { "line": 56, "column": 19 } },
        "34": { "start": { "line": 57, "column": 4 }, "end": { "line": 57, "column": 39 } },
        "35": { "start": { "line": 62, "column": 2 }, "end": { "line": 67, "column": 3 } },
        "36": { "start": { "line": 63, "column": 4 }, "end": { "line": 63, "column": 70 } },
        "37": { "start": { "line": 65, "column": 4 }, "end": { "line": 65, "column": 19 } },
        "38": { "start": { "line": 66, "column": 4 }, "end": { "line": 66, "column": 45 } },
        "39": { "start": { "line": 71, "column": 2 }, "end": { "line": 81, "column": 3 } },
        "40": { "start": { "line": 72, "column": 15 }, "end": { "line": 72, "column": 54 } },
        "41": { "start": { "line": 73, "column": 4 }, "end": { "line": 77, "column": 5 } },
        "42": { "start": { "line": 74, "column": 6 }, "end": { "line": 74, "column": 16 } },
        "43": { "start": { "line": 76, "column": 6 }, "end": { "line": 76, "column": 56 } },
        "44": { "start": { "line": 79, "column": 4 }, "end": { "line": 79, "column": 19 } },
        "45": { "start": { "line": 80, "column": 4 }, "end": { "line": 80, "column": 53 } },
        "46": { "start": { "line": 85, "column": 2 }, "end": { "line": 90, "column": 3 } },
        "47": { "start": { "line": 86, "column": 4 }, "end": { "line": 86, "column": 67 } },
        "48": { "start": { "line": 88, "column": 4 }, "end": { "line": 88, "column": 19 } },
        "49": { "start": { "line": 89, "column": 4 }, "end": { "line": 89, "column": 42 } }
      },
      "fnMap": {
        "0": {
          "name": "sleep",
          "decl": { "start": { "line": 8, "column": 16 }, "end": { "line": 8, "column": 21 } },
          "loc": { "start": { "line": 8, "column": 37 }, "end": { "line": 10, "column": 1 } }
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 9, "column": 21 }, "end": { "line": 9, "column": 28 } },
          "loc": { "start": { "line": 9, "column": 32 }, "end": { "line": 9, "column": 67 } }
        },
        "2": {
          "name": "deleteConfigMap",
          "decl": { "start": { "line": 12, "column": 22 }, "end": { "line": 12, "column": 37 } },
          "loc": { "start": { "line": 12, "column": 69 }, "end": { "line": 18, "column": 1 } }
        },
        "3": {
          "name": "waitForDeploymentReady",
          "decl": { "start": { "line": 20, "column": 22 }, "end": { "line": 20, "column": 44 } },
          "loc": { "start": { "line": 20, "column": 76 }, "end": { "line": 29, "column": 1 } }
        },
        "4": {
          "name": "noWaitPeprStoreKey",
          "decl": { "start": { "line": 31, "column": 22 }, "end": { "line": 31, "column": 40 } },
          "loc": { "start": { "line": 31, "column": 71 }, "end": { "line": 36, "column": 1 } }
        },
        "5": {
          "name": "waitForPeprStoreKey",
          "decl": { "start": { "line": 38, "column": 22 }, "end": { "line": 38, "column": 41 } },
          "loc": { "start": { "line": 38, "column": 72 }, "end": { "line": 50, "column": 1 } }
        },
        "6": {
          "name": "waitForNamespace",
          "decl": { "start": { "line": 52, "column": 22 }, "end": { "line": 52, "column": 38 } },
          "loc": { "start": { "line": 52, "column": 56 }, "end": { "line": 59, "column": 1 } }
        },
        "7": {
          "name": "waitForConfigMap",
          "decl": { "start": { "line": 61, "column": 22 }, "end": { "line": 61, "column": 38 } },
          "loc": { "start": { "line": 61, "column": 70 }, "end": { "line": 68, "column": 1 } }
        },
        "8": {
          "name": "waitForConfigMapKey",
          "decl": { "start": { "line": 70, "column": 22 }, "end": { "line": 70, "column": 41 } },
          "loc": { "start": { "line": 70, "column": 86 }, "end": { "line": 82, "column": 1 } }
        },
        "9": {
          "name": "waitForSecret",
          "decl": { "start": { "line": 84, "column": 22 }, "end": { "line": 84, "column": 35 } },
          "loc": { "start": { "line": 84, "column": 67 }, "end": { "line": 91, "column": 1 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 22, "column": 19 }, "end": { "line": 22, "column": 49 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 22, "column": 19 }, "end": { "line": 22, "column": 44 } },
            { "start": { "line": 22, "column": 48 }, "end": { "line": 22, "column": 49 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 23, "column": 24 }, "end": { "line": 23, "column": 61 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 23, "column": 24 }, "end": { "line": 23, "column": 56 } },
            { "start": { "line": 23, "column": 60 }, "end": { "line": 23, "column": 61 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 25, "column": 2 }, "end": { "line": 28, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 25, "column": 2 }, "end": { "line": 28, "column": 3 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 33, "column": 2 }, "end": { "line": 35, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 33, "column": 2 }, "end": { "line": 35, "column": 3 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 41, "column": 4 }, "end": { "line": 43, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 41, "column": 4 }, "end": { "line": 43, "column": 5 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 73, "column": 4 }, "end": { "line": 77, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 73, "column": 4 }, "end": { "line": 77, "column": 5 } },
            { "start": { "line": 75, "column": 11 }, "end": { "line": 77, "column": 5 } }
          ]
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0,
        "47": 0,
        "48": 0,
        "49": 0
      },
      "f": { "0": 0, "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0 },
      "b": { "0": [0, 0], "1": [0, 0], "2": [0], "3": [0], "4": [0], "5": [0, 0] }
    },
    "/Users/sam/code/work/pepr/src/lib/k8s.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/k8s.ts",
      "statementMap": {
        "0": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 69 } },
        "1": { "start": { "line": 9, "column": 0 }, "end": { "line": 9, "column": 13 } },
        "2": { "start": { "line": 15, "column": 13 }, "end": { "line": 19, "column": 2 } },
        "3": { "start": { "line": 21, "column": 0 }, "end": { "line": 21, "column": 34 } }
      },
      "fnMap": {},
      "branchMap": {},
      "s": { "0": 4, "1": 4, "2": 4, "3": 4 },
      "f": {},
      "b": {}
    },
    "/Users/sam/code/work/pepr/src/sdk/heredoc.ts": {
      "path": "/Users/sam/code/work/pepr/src/sdk/heredoc.ts",
      "statementMap": {
        "0": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 16 } },
        "1": { "start": { "line": 6, "column": 17 }, "end": { "line": 11, "column": 19 } },
        "2": { "start": { "line": 8, "column": 6 }, "end": { "line": 8, "column": 39 } },
        "3": { "start": { "line": 9, "column": 6 }, "end": { "line": 9, "column": 17 } },
        "4": { "start": { "line": 11, "column": 17 }, "end": { "line": 11, "column": 18 } },
        "5": { "start": { "line": 14, "column": 18 }, "end": { "line": 14, "column": 50 } },
        "6": { "start": { "line": 17, "column": 2 }, "end": { "line": 17, "column": 58 } },
        "7": { "start": { "line": 18, "column": 2 }, "end": { "line": 18, "column": 66 } },
        "8": { "start": { "line": 21, "column": 17 }, "end": { "line": 24, "column": 30 } },
        "9": { "start": { "line": 22, "column": 20 }, "end": { "line": 22, "column": 36 } },
        "10": { "start": { "line": 23, "column": 4 }, "end": { "line": 23, "column": 78 } },
        "11": { "start": { "line": 27, "column": 18 }, "end": { "line": 32, "column": 4 } },
        "12": { "start": { "line": 28, "column": 4 }, "end": { "line": 30, "column": 5 } },
        "13": { "start": { "line": 29, "column": 6 }, "end": { "line": 29, "column": 16 } },
        "14": { "start": { "line": 31, "column": 4 }, "end": { "line": 31, "column": 30 } },
        "15": { "start": { "line": 35, "column": 2 }, "end": { "line": 35, "column": 28 } }
      },
      "fnMap": {
        "0": {
          "name": "heredoc",
          "decl": { "start": { "line": 4, "column": 16 }, "end": { "line": 4, "column": 23 } },
          "loc": { "start": { "line": 4, "column": 74 }, "end": { "line": 36, "column": 1 } }
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 7, "column": 12 }, "end": { "line": 7, "column": 13 } },
          "loc": { "start": { "line": 7, "column": 40 }, "end": { "line": 10, "column": 5 } }
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 11, "column": 12 }, "end": { "line": 11, "column": 13 } },
          "loc": { "start": { "line": 11, "column": 17 }, "end": { "line": 11, "column": 18 } }
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 21, "column": 32 }, "end": { "line": 21, "column": 33 } },
          "loc": { "start": { "line": 21, "column": 45 }, "end": { "line": 24, "column": 3 } }
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 27, "column": 30 }, "end": { "line": 27, "column": 34 } },
          "loc": { "start": { "line": 27, "column": 37 }, "end": { "line": 32, "column": 3 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 8, "column": 20 }, "end": { "line": 8, "column": 37 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 8, "column": 20 }, "end": { "line": 8, "column": 31 } },
            { "start": { "line": 8, "column": 35 }, "end": { "line": 8, "column": 37 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 17, "column": 2 }, "end": { "line": 17, "column": 57 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 17, "column": 35 }, "end": { "line": 17, "column": 50 } },
            { "start": { "line": 17, "column": 53 }, "end": { "line": 17, "column": 57 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 18, "column": 2 }, "end": { "line": 18, "column": 65 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 18, "column": 45 }, "end": { "line": 18, "column": 58 } },
            { "start": { "line": 18, "column": 61 }, "end": { "line": 18, "column": 65 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 23, "column": 20 }, "end": { "line": 23, "column": 71 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 23, "column": 37 }, "end": { "line": 23, "column": 44 } },
            { "start": { "line": 23, "column": 47 }, "end": { "line": 23, "column": 71 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 28, "column": 4 }, "end": { "line": 30, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 28, "column": 4 }, "end": { "line": 30, "column": 5 } }
          ]
        }
      },
      "s": {
        "0": 4,
        "1": 10,
        "2": 19,
        "3": 19,
        "4": 38,
        "5": 10,
        "6": 10,
        "7": 10,
        "8": 10,
        "9": 88,
        "10": 88,
        "11": 10,
        "12": 88,
        "13": 0,
        "14": 88,
        "15": 10
      },
      "f": { "0": 10, "1": 19, "2": 38, "3": 88, "4": 88 },
      "b": { "0": [19, 10], "1": [10, 0], "2": [10, 0], "3": [88, 0], "4": [0] }
    },
    "/Users/sam/code/work/pepr/src/sdk/cosign.ts": {
      "path": "/Users/sam/code/work/pepr/src/sdk/cosign.ts",
      "statementMap": {
        "0": { "start": { "line": 22, "column": 0 }, "end": { "line": 22, "column": 7 } },
        "1": { "start": { "line": 69, "column": 0 }, "end": { "line": 69, "column": 7 } },
        "2": { "start": { "line": 127, "column": 0 }, "end": { "line": 127, "column": 7 } },
        "3": { "start": { "line": 189, "column": 0 }, "end": { "line": 189, "column": 7 } },
        "4": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 41 } },
        "5": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 52 } },
        "6": { "start": { "line": 6, "column": 0 }, "end": { "line": 6, "column": 44 } },
        "7": { "start": { "line": 7, "column": 0 }, "end": { "line": 7, "column": 38 } },
        "8": { "start": { "line": 8, "column": 0 }, "end": { "line": 8, "column": 73 } },
        "9": { "start": { "line": 9, "column": 0 }, "end": { "line": 9, "column": 50 } },
        "10": { "start": { "line": 10, "column": 0 }, "end": { "line": 10, "column": 77 } },
        "11": { "start": { "line": 12, "column": 0 }, "end": { "line": 12, "column": null } },
        "12": { "start": { "line": 13, "column": 2 }, "end": { "line": 13, "column": null } },
        "13": { "start": { "line": 16, "column": 0 }, "end": { "line": 16, "column": null } },
        "14": { "start": { "line": 17, "column": 2 }, "end": { "line": 17, "column": null } },
        "15": { "start": { "line": 18, "column": 2 }, "end": { "line": 18, "column": null } },
        "16": { "start": { "line": 27, "column": 14 }, "end": { "line": 27, "column": 29 } },
        "17": { "start": { "line": 29, "column": 2 }, "end": { "line": 65, "column": 5 } },
        "18": { "start": { "line": 30, "column": 17 }, "end": { "line": 38, "column": 6 } },
        "19": { "start": { "line": 40, "column": 4 }, "end": { "line": 64, "column": 13 } },
        "20": { "start": { "line": 42, "column": 31 }, "end": { "line": 42, "column": 35 } },
        "21": { "start": { "line": 45, "column": 8 }, "end": { "line": 48, "column": 9 } },
        "22": { "start": { "line": 46, "column": 10 }, "end": { "line": 46, "column": 81 } },
        "23": { "start": { "line": 47, "column": 10 }, "end": { "line": 47, "column": 23 } },
        "24": { "start": { "line": 50, "column": 8 }, "end": { "line": 53, "column": 9 } },
        "25": { "start": { "line": 51, "column": 10 }, "end": { "line": 51, "column": 24 } },
        "26": { "start": { "line": 52, "column": 10 }, "end": { "line": 52, "column": 17 } },
        "27": { "start": { "line": 55, "column": 8 }, "end": { "line": 55, "column": 33 } },
        "28": { "start": { "line": 57, "column": 8 }, "end": { "line": 57, "column": 34 } },
        "29": { "start": { "line": 59, "column": 8 }, "end": { "line": 61, "column": 11 } },
        "30": { "start": { "line": 60, "column": 10 }, "end": { "line": 60, "column": 32 } },
        "31": { "start": { "line": 63, "column": 24 }, "end": { "line": 63, "column": 33 } },
        "32": { "start": { "line": 74, "column": 14 }, "end": { "line": 74, "column": 29 } },
        "33": { "start": { "line": 76, "column": 2 }, "end": { "line": 123, "column": 5 } },
        "34": { "start": { "line": 77, "column": 17 }, "end": { "line": 88, "column": 6 } },
        "35": { "start": { "line": 90, "column": 4 }, "end": { "line": 122, "column": 13 } },
        "36": { "start": { "line": 92, "column": 31 }, "end": { "line": 92, "column": 35 } },
        "37": { "start": { "line": 96, "column": 8 }, "end": { "line": 100, "column": 9 } },
        "38": { "start": { "line": 97, "column": 10 }, "end": { "line": 97, "column": 36 } },
        "39": { "start": { "line": 98, "column": 10 }, "end": { "line": 98, "column": 77 } },
        "40": { "start": { "line": 99, "column": 10 }, "end": { "line": 99, "column": 23 } },
        "41": { "start": { "line": 102, "column": 8 }, "end": { "line": 105, "column": 9 } },
        "42": { "start": { "line": 103, "column": 10 }, "end": { "line": 103, "column": 24 } },
        "43": { "start": { "line": 104, "column": 10 }, "end": { "line": 104, "column": 17 } },
        "44": { "start": { "line": 107, "column": 8 }, "end": { "line": 107, "column": 33 } },
        "45": { "start": { "line": 109, "column": 18 }, "end": { "line": 109, "column": 20 } },
        "46": { "start": { "line": 110, "column": 8 }, "end": { "line": 112, "column": 11 } },
        "47": { "start": { "line": 111, "column": 10 }, "end": { "line": 111, "column": 23 } },
        "48": { "start": { "line": 113, "column": 8 }, "end": { "line": 119, "column": 11 } },
        "49": { "start": { "line": 114, "column": 10 }, "end": { "line": 118, "column": 11 } },
        "50": { "start": { "line": 115, "column": 12 }, "end": { "line": 115, "column": 55 } },
        "51": { "start": { "line": 117, "column": 12 }, "end": { "line": 117, "column": 22 } },
        "52": { "start": { "line": 121, "column": 24 }, "end": { "line": 121, "column": 33 } },
        "53": { "start": { "line": 132, "column": 14 }, "end": { "line": 132, "column": 29 } },
        "54": { "start": { "line": 134, "column": 2 }, "end": { "line": 176, "column": 5 } },
        "55": { "start": { "line": 135, "column": 17 }, "end": { "line": 146, "column": 6 } },
        "56": { "start": { "line": 148, "column": 4 }, "end": { "line": 175, "column": 13 } },
        "57": { "start": { "line": 150, "column": 31 }, "end": { "line": 150, "column": 35 } },
        "58": { "start": { "line": 154, "column": 8 }, "end": { "line": 158, "column": 9 } },
        "59": { "start": { "line": 155, "column": 10 }, "end": { "line": 155, "column": 36 } },
        "60": { "start": { "line": 156, "column": 10 }, "end": { "line": 156, "column": 77 } },
        "61": { "start": { "line": 157, "column": 10 }, "end": { "line": 157, "column": 23 } },
        "62": { "start": { "line": 160, "column": 8 }, "end": { "line": 163, "column": 9 } },
        "63": { "start": { "line": 161, "column": 10 }, "end": { "line": 161, "column": 24 } },
        "64": { "start": { "line": 162, "column": 10 }, "end": { "line": 162, "column": 17 } },
        "65": { "start": { "line": 165, "column": 19 }, "end": { "line": 167, "column": 10 } },
        "66": { "start": { "line": 166, "column": 10 }, "end": { "line": 166, "column": 36 } },
        "67": { "start": { "line": 166, "column": 25 }, "end": { "line": 166, "column": 34 } },
        "68": { "start": { "line": 169, "column": 8 }, "end": { "line": 169, "column": 22 } },
        "69": { "start": { "line": 172, "column": 8 }, "end": { "line": 172, "column": 32 } },
        "70": { "start": { "line": 173, "column": 8 }, "end": { "line": 173, "column": 20 } },
        "71": { "start": { "line": 194, "column": 33 }, "end": { "line": 194, "column": 35 } },
        "72": { "start": { "line": 204, "column": 2 }, "end": { "line": 204, "column": 14 } },
        "73": { "start": { "line": 205, "column": 2 }, "end": { "line": 205, "column": 20 } },
        "74": { "start": { "line": 206, "column": 2 }, "end": { "line": 206, "column": 35 } },
        "75": { "start": { "line": 207, "column": 2 }, "end": { "line": 207, "column": 53 } },
        "76": { "start": { "line": 208, "column": 2 }, "end": { "line": 208, "column": 46 } },
        "77": { "start": { "line": 209, "column": 2 }, "end": { "line": 209, "column": 59 } },
        "78": { "start": { "line": 211, "column": 2 }, "end": { "line": 213, "column": 4 } },
        "79": { "start": { "line": 215, "column": 28 }, "end": { "line": 217, "column": 3 } },
        "80": { "start": { "line": 216, "column": 4 }, "end": { "line": 216, "column": 87 } },
        "81": { "start": { "line": 219, "column": 27 }, "end": { "line": 221, "column": 3 } },
        "82": { "start": { "line": 220, "column": 4 }, "end": { "line": 220, "column": 67 } },
        "83": { "start": { "line": 223, "column": 30 }, "end": { "line": 225, "column": 3 } },
        "84": { "start": { "line": 224, "column": 4 }, "end": { "line": 224, "column": 70 } },
        "85": { "start": { "line": 229, "column": 4 }, "end": { "line": 231, "column": 83 } },
        "86": { "start": { "line": 231, "column": 19 }, "end": { "line": 231, "column": 79 } },
        "87": { "start": { "line": 232, "column": 2 }, "end": { "line": 232, "column": 41 } },
        "88": { "start": { "line": 234, "column": 2 }, "end": { "line": 238, "column": 18 } },
        "89": { "start": { "line": 240, "column": 2 }, "end": { "line": 240, "column": 13 } },
        "90": { "start": { "line": 241, "column": 2 }, "end": { "line": 241, "column": 59 } },
        "91": { "start": { "line": 242, "column": 2 }, "end": { "line": 242, "column": 68 } },
        "92": { "start": { "line": 243, "column": 2 }, "end": { "line": 243, "column": 80 } },
        "93": { "start": { "line": 245, "column": 26 }, "end": { "line": 245, "column": 88 } },
        "94": { "start": { "line": 246, "column": 2 }, "end": { "line": 246, "column": 40 } },
        "95": { "start": { "line": 248, "column": 25 }, "end": { "line": 250, "column": 6 } },
        "96": { "start": { "line": 249, "column": 4 }, "end": { "line": 249, "column": 71 } },
        "97": { "start": { "line": 252, "column": 2 }, "end": { "line": 252, "column": 18 } },
        "98": { "start": { "line": 253, "column": 2 }, "end": { "line": 253, "column": 44 } },
        "99": { "start": { "line": 254, "column": 2 }, "end": { "line": 254, "column": 90 } },
        "100": { "start": { "line": 255, "column": 2 }, "end": { "line": 255, "column": 89 } },
        "101": { "start": { "line": 257, "column": 22 }, "end": { "line": 257, "column": 92 } },
        "102": { "start": { "line": 258, "column": 2 }, "end": { "line": 258, "column": 40 } },
        "103": { "start": { "line": 260, "column": 17 }, "end": { "line": 260, "column": 22 } },
        "104": { "start": { "line": 262, "column": 2 }, "end": { "line": 324, "column": 3 } },
        "105": { "start": { "line": 264, "column": 22 }, "end": { "line": 264, "column": 71 } },
        "106": { "start": { "line": 265, "column": 19 }, "end": { "line": 269, "column": 6 } },
        "107": { "start": { "line": 271, "column": 24 }, "end": { "line": 276, "column": 32 } },
        "108": { "start": { "line": 278, "column": 17 }, "end": { "line": 283, "column": 6 } },
        "109": { "start": { "line": 284, "column": 26 }, "end": { "line": 284, "column": 60 } },
        "110": { "start": { "line": 286, "column": 20 }, "end": { "line": 290, "column": 6 } },
        "111": { "start": { "line": 292, "column": 19 }, "end": { "line": 310, "column": 6 } },
        "112": { "start": { "line": 312, "column": 25 }, "end": { "line": 312, "column": 80 } },
        "113": { "start": { "line": 314, "column": 4 }, "end": { "line": 323, "column": 5 } },
        "114": { "start": { "line": 315, "column": 6 }, "end": { "line": 315, "column": 35 } },
        "115": { "start": { "line": 316, "column": 6 }, "end": { "line": 316, "column": 22 } },
        "116": { "start": { "line": 317, "column": 6 }, "end": { "line": 317, "column": 12 } },
        "117": { "start": { "line": 319, "column": 6 }, "end": { "line": 321, "column": 7 } },
        "118": { "start": { "line": 320, "column": 8 }, "end": { "line": 320, "column": 17 } },
        "119": { "start": { "line": 322, "column": 6 }, "end": { "line": 322, "column": 14 } },
        "120": { "start": { "line": 326, "column": 2 }, "end": { "line": 326, "column": 18 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_9)",
          "decl": { "start": { "line": 12, "column": 0 }, "end": { "line": 12, "column": 12 } },
          "loc": { "start": { "line": 12, "column": 29 }, "end": { "line": 14, "column": 1 } }
        },
        "1": {
          "name": "(anonymous_10)",
          "decl": { "start": { "line": 16, "column": 0 }, "end": { "line": 16, "column": 12 } },
          "loc": { "start": { "line": 16, "column": 26 }, "end": { "line": 19, "column": 1 } }
        },
        "2": {
          "name": "head",
          "decl": { "start": { "line": 22, "column": 22 }, "end": { "line": 22, "column": 26 } },
          "loc": { "start": { "line": 25, "column": 37 }, "end": { "line": 66, "column": 1 } }
        },
        "3": {
          "name": "(anonymous_12)",
          "decl": { "start": { "line": 29, "column": 21 }, "end": { "line": 29, "column": 22 } },
          "loc": { "start": { "line": 29, "column": 41 }, "end": { "line": 65, "column": 3 } }
        },
        "4": {
          "name": "(anonymous_13)",
          "decl": { "start": { "line": 41, "column": 21 }, "end": { "line": 41, "column": 25 } },
          "loc": { "start": { "line": 41, "column": 28 }, "end": { "line": 62, "column": 7 } }
        },
        "5": {
          "name": "(anonymous_14)",
          "decl": { "start": { "line": 57, "column": 24 }, "end": { "line": 57, "column": 27 } },
          "loc": { "start": { "line": 57, "column": 29 }, "end": { "line": 57, "column": 32 } }
        },
        "6": {
          "name": "(anonymous_15)",
          "decl": { "start": { "line": 59, "column": 23 }, "end": { "line": 59, "column": 26 } },
          "loc": { "start": { "line": 59, "column": 28 }, "end": { "line": 61, "column": 9 } }
        },
        "7": {
          "name": "(anonymous_16)",
          "decl": { "start": { "line": 63, "column": 19 }, "end": { "line": 63, "column": 20 } },
          "loc": { "start": { "line": 63, "column": 24 }, "end": { "line": 63, "column": 33 } }
        },
        "8": {
          "name": "get",
          "decl": { "start": { "line": 69, "column": 22 }, "end": { "line": 69, "column": 25 } },
          "loc": { "start": { "line": 72, "column": 37 }, "end": { "line": 124, "column": 1 } }
        },
        "9": {
          "name": "(anonymous_18)",
          "decl": { "start": { "line": 76, "column": 21 }, "end": { "line": 76, "column": 22 } },
          "loc": { "start": { "line": 76, "column": 41 }, "end": { "line": 123, "column": 3 } }
        },
        "10": {
          "name": "(anonymous_19)",
          "decl": { "start": { "line": 91, "column": 21 }, "end": { "line": 91, "column": 25 } },
          "loc": { "start": { "line": 91, "column": 28 }, "end": { "line": 120, "column": 7 } }
        },
        "11": {
          "name": "(anonymous_20)",
          "decl": { "start": { "line": 110, "column": 24 }, "end": { "line": 110, "column": 29 } },
          "loc": { "start": { "line": 110, "column": 32 }, "end": { "line": 112, "column": 9 } }
        },
        "12": {
          "name": "(anonymous_21)",
          "decl": { "start": { "line": 113, "column": 23 }, "end": { "line": 113, "column": 26 } },
          "loc": { "start": { "line": 113, "column": 28 }, "end": { "line": 119, "column": 9 } }
        },
        "13": {
          "name": "(anonymous_22)",
          "decl": { "start": { "line": 121, "column": 19 }, "end": { "line": 121, "column": 20 } },
          "loc": { "start": { "line": 121, "column": 24 }, "end": { "line": 121, "column": 33 } }
        },
        "14": {
          "name": "download",
          "decl": { "start": { "line": 127, "column": 22 }, "end": { "line": 127, "column": 30 } },
          "loc": { "start": { "line": 130, "column": 37 }, "end": { "line": 177, "column": 1 } }
        },
        "15": {
          "name": "(anonymous_24)",
          "decl": { "start": { "line": 134, "column": 21 }, "end": { "line": 134, "column": 22 } },
          "loc": { "start": { "line": 134, "column": 41 }, "end": { "line": 176, "column": 3 } }
        },
        "16": {
          "name": "(anonymous_25)",
          "decl": { "start": { "line": 149, "column": 21 }, "end": { "line": 149, "column": 25 } },
          "loc": { "start": { "line": 149, "column": 28 }, "end": { "line": 170, "column": 7 } }
        },
        "17": {
          "name": "(anonymous_26)",
          "decl": { "start": { "line": 165, "column": 61 }, "end": { "line": 165, "column": 64 } },
          "loc": { "start": { "line": 165, "column": 66 }, "end": { "line": 167, "column": 9 } }
        },
        "18": {
          "name": "(anonymous_27)",
          "decl": { "start": { "line": 166, "column": 19 }, "end": { "line": 166, "column": 22 } },
          "loc": { "start": { "line": 166, "column": 25 }, "end": { "line": 166, "column": 34 } }
        },
        "19": {
          "name": "(anonymous_28)",
          "decl": { "start": { "line": 171, "column": 19 }, "end": { "line": 171, "column": 24 } },
          "loc": { "start": { "line": 171, "column": 31 }, "end": { "line": 174, "column": 7 } }
        },
        "20": {
          "name": "verifyImage",
          "decl": { "start": { "line": 189, "column": 22 }, "end": { "line": 189, "column": 33 } },
          "loc": { "start": { "line": 192, "column": 20 }, "end": { "line": 327, "column": 1 } }
        },
        "21": {
          "name": "(anonymous_30)",
          "decl": { "start": { "line": 215, "column": 28 }, "end": { "line": 215, "column": 33 } },
          "loc": { "start": { "line": 215, "column": 87 }, "end": { "line": 217, "column": 3 } }
        },
        "22": {
          "name": "(anonymous_31)",
          "decl": { "start": { "line": 219, "column": 27 }, "end": { "line": 219, "column": 32 } },
          "loc": { "start": { "line": 219, "column": 75 }, "end": { "line": 221, "column": 3 } }
        },
        "23": {
          "name": "(anonymous_32)",
          "decl": { "start": { "line": 223, "column": 30 }, "end": { "line": 223, "column": 35 } },
          "loc": { "start": { "line": 223, "column": 78 }, "end": { "line": 225, "column": 3 } }
        },
        "24": {
          "name": "(anonymous_33)",
          "decl": { "start": { "line": 231, "column": 5 }, "end": { "line": 231, "column": 14 } },
          "loc": { "start": { "line": 231, "column": 16 }, "end": { "line": 231, "column": 80 } }
        },
        "25": {
          "name": "(anonymous_34)",
          "decl": { "start": { "line": 248, "column": 66 }, "end": { "line": 248, "column": 67 } },
          "loc": { "start": { "line": 249, "column": 4 }, "end": { "line": 249, "column": 71 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 12, "column": 12 }, "end": { "line": 12, "column": null } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 12, "column": 12 }, "end": { "line": 12, "column": 29 } },
            { "start": { "line": 12, "column": 29 }, "end": { "line": 12, "column": null } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 16, "column": 12 }, "end": { "line": 16, "column": null } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 16, "column": 12 }, "end": { "line": 16, "column": 26 } },
            { "start": { "line": 16, "column": 26 }, "end": { "line": 16, "column": null } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 25, "column": 2 }, "end": { "line": 25, "column": 37 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 25, "column": 35 }, "end": { "line": 25, "column": 37 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 45, "column": 8 }, "end": { "line": 48, "column": 9 } },
          "type": "if",
          "locations": [
            { "start": { "line": 45, "column": 8 }, "end": { "line": 48, "column": 9 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 45, "column": 12 }, "end": { "line": 45, "column": 94 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 45, "column": 12 }, "end": { "line": 45, "column": 51 } },
            { "start": { "line": 45, "column": 55 }, "end": { "line": 45, "column": 94 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 50, "column": 8 }, "end": { "line": 53, "column": 9 } },
          "type": "if",
          "locations": [
            { "start": { "line": 50, "column": 8 }, "end": { "line": 53, "column": 9 } }
          ]
        },
        "6": {
          "loc": { "start": { "line": 72, "column": 2 }, "end": { "line": 72, "column": 37 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 72, "column": 35 }, "end": { "line": 72, "column": 37 } }
          ]
        },
        "7": {
          "loc": { "start": { "line": 96, "column": 8 }, "end": { "line": 100, "column": 9 } },
          "type": "if",
          "locations": [
            { "start": { "line": 96, "column": 8 }, "end": { "line": 100, "column": 9 } }
          ]
        },
        "8": {
          "loc": { "start": { "line": 96, "column": 12 }, "end": { "line": 96, "column": 94 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 96, "column": 12 }, "end": { "line": 96, "column": 51 } },
            { "start": { "line": 96, "column": 55 }, "end": { "line": 96, "column": 94 } }
          ]
        },
        "9": {
          "loc": { "start": { "line": 102, "column": 8 }, "end": { "line": 105, "column": 9 } },
          "type": "if",
          "locations": [
            { "start": { "line": 102, "column": 8 }, "end": { "line": 105, "column": 9 } }
          ]
        },
        "10": {
          "loc": { "start": { "line": 130, "column": 2 }, "end": { "line": 130, "column": 37 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 130, "column": 35 }, "end": { "line": 130, "column": 37 } }
          ]
        },
        "11": {
          "loc": { "start": { "line": 154, "column": 8 }, "end": { "line": 158, "column": 9 } },
          "type": "if",
          "locations": [
            { "start": { "line": 154, "column": 8 }, "end": { "line": 158, "column": 9 } }
          ]
        },
        "12": {
          "loc": { "start": { "line": 154, "column": 12 }, "end": { "line": 154, "column": 94 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 154, "column": 12 }, "end": { "line": 154, "column": 51 } },
            { "start": { "line": 154, "column": 55 }, "end": { "line": 154, "column": 94 } }
          ]
        },
        "13": {
          "loc": { "start": { "line": 160, "column": 8 }, "end": { "line": 163, "column": 9 } },
          "type": "if",
          "locations": [
            { "start": { "line": 160, "column": 8 }, "end": { "line": 163, "column": 9 } }
          ]
        },
        "14": {
          "loc": { "start": { "line": 229, "column": 4 }, "end": { "line": 231, "column": 83 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 229, "column": 45 }, "end": { "line": 229, "column": 110 } },
            { "start": { "line": 230, "column": 4 }, "end": { "line": 231, "column": 83 } }
          ]
        },
        "15": {
          "loc": { "start": { "line": 230, "column": 4 }, "end": { "line": 231, "column": 83 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 230, "column": 48 }, "end": { "line": 230, "column": 116 } },
            { "start": { "line": 231, "column": 4 }, "end": { "line": 231, "column": 83 } }
          ]
        },
        "16": {
          "loc": { "start": { "line": 319, "column": 6 }, "end": { "line": 321, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 319, "column": 6 }, "end": { "line": 321, "column": 7 } }
          ]
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 1,
        "12": 1,
        "13": 1,
        "14": 1,
        "15": 1,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0,
        "47": 0,
        "48": 0,
        "49": 0,
        "50": 0,
        "51": 0,
        "52": 0,
        "53": 0,
        "54": 0,
        "55": 0,
        "56": 0,
        "57": 0,
        "58": 0,
        "59": 0,
        "60": 0,
        "61": 0,
        "62": 0,
        "63": 0,
        "64": 0,
        "65": 0,
        "66": 0,
        "67": 0,
        "68": 0,
        "69": 0,
        "70": 0,
        "71": 0,
        "72": 0,
        "73": 0,
        "74": 0,
        "75": 0,
        "76": 0,
        "77": 0,
        "78": 0,
        "79": 0,
        "80": 0,
        "81": 0,
        "82": 0,
        "83": 0,
        "84": 0,
        "85": 0,
        "86": 0,
        "87": 0,
        "88": 0,
        "89": 0,
        "90": 0,
        "91": 0,
        "92": 0,
        "93": 0,
        "94": 0,
        "95": 0,
        "96": 0,
        "97": 0,
        "98": 0,
        "99": 0,
        "100": 0,
        "101": 0,
        "102": 0,
        "103": 0,
        "104": 0,
        "105": 0,
        "106": 0,
        "107": 0,
        "108": 0,
        "109": 0,
        "110": 0,
        "111": 0,
        "112": 0,
        "113": 0,
        "114": 0,
        "115": 0,
        "116": 0,
        "117": 0,
        "118": 0,
        "119": 0,
        "120": 0
      },
      "f": {
        "0": 1,
        "1": 1,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0
      },
      "b": {
        "0": [1, 1],
        "1": [1, 1],
        "2": [0],
        "3": [0],
        "4": [0, 0],
        "5": [0],
        "6": [0],
        "7": [0],
        "8": [0, 0],
        "9": [0],
        "10": [0],
        "11": [0],
        "12": [0, 0],
        "13": [0],
        "14": [0, 0],
        "15": [0, 0],
        "16": [0]
      }
    },
    "/Users/sam/code/work/pepr/src/lib/controller/store.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/controller/store.ts",
      "statementMap": {
        "0": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 47 } },
        "1": { "start": { "line": 6, "column": 0 }, "end": { "line": 6, "column": 35 } },
        "2": { "start": { "line": 9, "column": 0 }, "end": { "line": 9, "column": 31 } },
        "3": { "start": { "line": 10, "column": 0 }, "end": { "line": 10, "column": 72 } },
        "4": { "start": { "line": 12, "column": 0 }, "end": { "line": 12, "column": 72 } },
        "5": { "start": { "line": 14, "column": 18 }, "end": { "line": 14, "column": 31 } },
        "6": { "start": { "line": 15, "column": 31 }, "end": { "line": 15, "column": 35 } },
        "7": { "start": { "line": 16, "column": 28 }, "end": { "line": 16, "column": 32 } },
        "8": { "start": { "line": 20, "column": 37 }, "end": { "line": 20, "column": 39 } },
        "9": { "start": { "line": 25, "column": 4 }, "end": { "line": 25, "column": 28 } },
        "10": { "start": { "line": 27, "column": 4 }, "end": { "line": 27, "column": 22 } },
        "11": { "start": { "line": 29, "column": 31 }, "end": { "line": 37, "column": 5 } },
        "12": { "start": { "line": 30, "column": 28 }, "end": { "line": 30, "column": 50 } },
        "13": { "start": { "line": 33, "column": 6 }, "end": { "line": 33, "column": 53 } },
        "14": { "start": { "line": 36, "column": 6 }, "end": { "line": 36, "column": 41 } },
        "15": { "start": { "line": 39, "column": 4 }, "end": { "line": 52, "column": 5 } },
        "16": { "start": { "line": 41, "column": 6 }, "end": { "line": 46, "column": 7 } },
        "17": { "start": { "line": 42, "column": 8 }, "end": { "line": 45, "column": 9 } },
        "18": { "start": { "line": 44, "column": 10 }, "end": { "line": 44, "column": 58 } },
        "19": { "start": { "line": 49, "column": 6 }, "end": { "line": 51, "column": 7 } },
        "20": { "start": { "line": 50, "column": 8 }, "end": { "line": 50, "column": 48 } },
        "21": { "start": { "line": 54, "column": 4 }, "end": { "line": 62, "column": 6 } },
        "22": { "start": { "line": 56, "column": 8 }, "end": { "line": 60, "column": 43 } },
        "23": { "start": { "line": 59, "column": 40 }, "end": { "line": 59, "column": 79 } },
        "24": { "start": { "line": 65, "column": 16 }, "end": { "line": 68, "column": 3 } },
        "25": { "start": { "line": 66, "column": 20 }, "end": { "line": 66, "column": 84 } },
        "26": { "start": { "line": 67, "column": 4 }, "end": { "line": 67, "column": 80 } },
        "27": { "start": { "line": 67, "column": 31 }, "end": { "line": 67, "column": 78 } },
        "28": { "start": { "line": 70, "column": 26 }, "end": { "line": 107, "column": 3 } },
        "29": { "start": { "line": 71, "column": 4 }, "end": { "line": 71, "column": 60 } },
        "30": { "start": { "line": 73, "column": 4 }, "end": { "line": 79, "column": 7 } },
        "31": { "start": { "line": 81, "column": 28 }, "end": { "line": 81, "column": 44 } },
        "32": { "start": { "line": 82, "column": 48 }, "end": { "line": 82, "column": 50 } },
        "33": { "start": { "line": 84, "column": 4 }, "end": { "line": 104, "column": 5 } },
        "34": { "start": { "line": 86, "column": 21 }, "end": { "line": 86, "column": 38 } },
        "35": { "start": { "line": 89, "column": 6 }, "end": { "line": 103, "column": 7 } },
        "36": { "start": { "line": 91, "column": 8 }, "end": { "line": 102, "column": 9 } },
        "37": { "start": { "line": 93, "column": 10 }, "end": { "line": 96, "column": 13 } },
        "38": { "start": { "line": 97, "column": 10 }, "end": { "line": 101, "column": 13 } },
        "39": { "start": { "line": 105, "column": 4 }, "end": { "line": 105, "column": 83 } },
        "40": { "start": { "line": 106, "column": 4 }, "end": { "line": 106, "column": 23 } },
        "41": { "start": { "line": 109, "column": 13 }, "end": { "line": 148, "column": 3 } },
        "42": { "start": { "line": 110, "column": 4 }, "end": { "line": 110, "column": 57 } },
        "43": { "start": { "line": 113, "column": 22 }, "end": { "line": 143, "column": 5 } },
        "44": { "start": { "line": 115, "column": 30 }, "end": { "line": 115, "column": 46 } },
        "45": { "start": { "line": 118, "column": 6 }, "end": { "line": 136, "column": 7 } },
        "46": { "start": { "line": 120, "column": 23 }, "end": { "line": 120, "column": 40 } },
        "47": { "start": { "line": 123, "column": 36 }, "end": { "line": 123, "column": 38 } },
        "48": { "start": { "line": 126, "column": 8 }, "end": { "line": 132, "column": 9 } },
        "49": { "start": { "line": 128, "column": 10 }, "end": { "line": 131, "column": 11 } },
        "50": { "start": { "line": 130, "column": 12 }, "end": { "line": 130, "column": 52 } },
        "51": { "start": { "line": 135, "column": 8 }, "end": { "line": 135, "column": 45 } },
        "52": { "start": { "line": 139, "column": 6 }, "end": { "line": 142, "column": 7 } },
        "53": { "start": { "line": 140, "column": 8 }, "end": { "line": 140, "column": 24 } },
        "54": { "start": { "line": 141, "column": 8 }, "end": { "line": 141, "column": 34 } },
        "55": { "start": { "line": 146, "column": 4 }, "end": { "line": 146, "column": 37 } },
        "56": { "start": { "line": 147, "column": 4 }, "end": { "line": 147, "column": 91 } },
        "57": { "start": { "line": 150, "column": 10 }, "end": { "line": 167, "column": 3 } },
        "58": { "start": { "line": 151, "column": 48 }, "end": { "line": 151, "column": 50 } },
        "59": { "start": { "line": 154, "column": 31 }, "end": { "line": 156, "column": 5 } },
        "60": { "start": { "line": 155, "column": 6 }, "end": { "line": 155, "column": 82 } },
        "61": { "start": { "line": 159, "column": 4 }, "end": { "line": 164, "column": 28 } },
        "62": { "start": { "line": 160, "column": 6 }, "end": { "line": 163, "column": 7 } },
        "63": { "start": { "line": 161, "column": 8 }, "end": { "line": 161, "column": 78 } },
        "64": { "start": { "line": 162, "column": 8 }, "end": { "line": 162, "column": 73 } },
        "65": { "start": { "line": 166, "column": 4 }, "end": { "line": 166, "column": 18 } },
        "66": { "start": { "line": 169, "column": 25 }, "end": { "line": 193, "column": 3 } },
        "67": { "start": { "line": 170, "column": 4 }, "end": { "line": 170, "column": 50 } },
        "68": { "start": { "line": 171, "column": 4 }, "end": { "line": 171, "column": 17 } },
        "69": { "start": { "line": 173, "column": 4 }, "end": { "line": 192, "column": 5 } },
        "70": { "start": { "line": 174, "column": 6 }, "end": { "line": 186, "column": 9 } },
        "71": { "start": { "line": 189, "column": 6 }, "end": { "line": 189, "column": 25 } },
        "72": { "start": { "line": 191, "column": 6 }, "end": { "line": 191, "column": 52 } },
        "73": { "start": { "line": 18, "column": 0 }, "end": { "line": 18, "column": 13 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_9)",
          "decl": { "start": { "line": 24, "column": 2 }, "end": { "line": 24, "column": 14 } },
          "loc": { "start": { "line": 24, "column": 76 }, "end": { "line": 63, "column": 3 } }
        },
        "1": {
          "name": "(anonymous_10)",
          "decl": { "start": { "line": 29, "column": 31 }, "end": { "line": 29, "column": 32 } },
          "loc": { "start": { "line": 29, "column": 91 }, "end": { "line": 37, "column": 5 } }
        },
        "2": {
          "name": "(anonymous_11)",
          "decl": { "start": { "line": 55, "column": 6 }, "end": { "line": 55, "column": 9 } },
          "loc": { "start": { "line": 56, "column": 8 }, "end": { "line": 60, "column": 43 } }
        },
        "3": {
          "name": "(anonymous_12)",
          "decl": { "start": { "line": 59, "column": 16 }, "end": { "line": 59, "column": 21 } },
          "loc": { "start": { "line": 59, "column": 40 }, "end": { "line": 59, "column": 79 } }
        },
        "4": {
          "name": "(anonymous_13)",
          "decl": { "start": { "line": 65, "column": 16 }, "end": { "line": 65, "column": 25 } },
          "loc": { "start": { "line": 65, "column": 27 }, "end": { "line": 68, "column": 3 } }
        },
        "5": {
          "name": "(anonymous_14)",
          "decl": { "start": { "line": 67, "column": 26 }, "end": { "line": 67, "column": 27 } },
          "loc": { "start": { "line": 67, "column": 31 }, "end": { "line": 67, "column": 78 } }
        },
        "6": {
          "name": "(anonymous_15)",
          "decl": { "start": { "line": 70, "column": 26 }, "end": { "line": 70, "column": 31 } },
          "loc": { "start": { "line": 70, "column": 64 }, "end": { "line": 107, "column": 3 } }
        },
        "7": {
          "name": "(anonymous_16)",
          "decl": { "start": { "line": 109, "column": 13 }, "end": { "line": 109, "column": 14 } },
          "loc": { "start": { "line": 109, "column": 36 }, "end": { "line": 148, "column": 3 } }
        },
        "8": {
          "name": "(anonymous_17)",
          "decl": { "start": { "line": 113, "column": 22 }, "end": { "line": 113, "column": 31 } },
          "loc": { "start": { "line": 113, "column": 33 }, "end": { "line": 143, "column": 5 } }
        },
        "9": {
          "name": "(anonymous_18)",
          "decl": { "start": { "line": 150, "column": 10 }, "end": { "line": 150, "column": 11 } },
          "loc": { "start": { "line": 150, "column": 49 }, "end": { "line": 167, "column": 3 } }
        },
        "10": {
          "name": "(anonymous_19)",
          "decl": { "start": { "line": 154, "column": 31 }, "end": { "line": 154, "column": 36 } },
          "loc": { "start": { "line": 154, "column": 83 }, "end": { "line": 156, "column": 5 } }
        },
        "11": {
          "name": "(anonymous_20)",
          "decl": { "start": { "line": 159, "column": 16 }, "end": { "line": 159, "column": 19 } },
          "loc": { "start": { "line": 159, "column": 21 }, "end": { "line": 164, "column": 5 } }
        },
        "12": {
          "name": "(anonymous_21)",
          "decl": { "start": { "line": 169, "column": 25 }, "end": { "line": 169, "column": 30 } },
          "loc": { "start": { "line": 169, "column": 61 }, "end": { "line": 193, "column": 3 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 39, "column": 4 }, "end": { "line": 52, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 39, "column": 4 }, "end": { "line": 52, "column": 5 } },
            { "start": { "line": 47, "column": 11 }, "end": { "line": 52, "column": 5 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 42, "column": 8 }, "end": { "line": 45, "column": 9 } },
          "type": "if",
          "locations": [
            { "start": { "line": 42, "column": 8 }, "end": { "line": 45, "column": 9 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 81, "column": 28 }, "end": { "line": 81, "column": 44 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 81, "column": 28 }, "end": { "line": 81, "column": 38 } },
            { "start": { "line": 81, "column": 42 }, "end": { "line": 81, "column": 44 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 91, "column": 8 }, "end": { "line": 102, "column": 9 } },
          "type": "if",
          "locations": [
            { "start": { "line": 91, "column": 8 }, "end": { "line": 102, "column": 9 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 91, "column": 12 }, "end": { "line": 91, "column": 67 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 91, "column": 12 }, "end": { "line": 91, "column": 33 } },
            { "start": { "line": 91, "column": 37 }, "end": { "line": 91, "column": 67 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 115, "column": 30 }, "end": { "line": 115, "column": 46 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 115, "column": 30 }, "end": { "line": 115, "column": 40 } },
            { "start": { "line": 115, "column": 44 }, "end": { "line": 115, "column": 46 } }
          ]
        },
        "6": {
          "loc": { "start": { "line": 128, "column": 10 }, "end": { "line": 131, "column": 11 } },
          "type": "if",
          "locations": [
            { "start": { "line": 128, "column": 10 }, "end": { "line": 131, "column": 11 } }
          ]
        },
        "7": {
          "loc": { "start": { "line": 139, "column": 6 }, "end": { "line": 142, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 139, "column": 6 }, "end": { "line": 142, "column": 7 } }
          ]
        },
        "8": {
          "loc": { "start": { "line": 147, "column": 47 }, "end": { "line": 147, "column": 89 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 147, "column": 63 }, "end": { "line": 147, "column": 64 } },
            { "start": { "line": 147, "column": 67 }, "end": { "line": 147, "column": 89 } }
          ]
        },
        "9": {
          "loc": { "start": { "line": 160, "column": 6 }, "end": { "line": 163, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 160, "column": 6 }, "end": { "line": 163, "column": 7 } }
          ]
        }
      },
      "s": {
        "0": 2,
        "1": 2,
        "2": 2,
        "3": 2,
        "4": 2,
        "5": 2,
        "6": 2,
        "7": 2,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0,
        "47": 0,
        "48": 0,
        "49": 0,
        "50": 0,
        "51": 0,
        "52": 0,
        "53": 0,
        "54": 0,
        "55": 0,
        "56": 0,
        "57": 0,
        "58": 0,
        "59": 0,
        "60": 0,
        "61": 0,
        "62": 0,
        "63": 0,
        "64": 0,
        "65": 0,
        "66": 0,
        "67": 0,
        "68": 0,
        "69": 0,
        "70": 0,
        "71": 0,
        "72": 0,
        "73": 2
      },
      "f": {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0
      },
      "b": {
        "0": [0, 0],
        "1": [0],
        "2": [0, 0],
        "3": [0],
        "4": [0, 0],
        "5": [0, 0],
        "6": [0],
        "7": [0],
        "8": [0, 0],
        "9": [0]
      }
    },
    "/Users/sam/code/work/pepr/src/lib/telemetry/logger.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/telemetry/logger.ts",
      "statementMap": {
        "0": { "start": { "line": 33, "column": 0 }, "end": { "line": 33, "column": 16 } },
        "1": { "start": { "line": 44, "column": 0 }, "end": { "line": 44, "column": 16 } },
        "2": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 46 } },
        "3": { "start": { "line": 8, "column": 20 }, "end": { "line": 8, "column": 59 } },
        "4": { "start": { "line": 9, "column": 22 }, "end": { "line": 9, "column": 36 } },
        "5": { "start": { "line": 11, "column": 15 }, "end": { "line": 16, "column": 2 } },
        "6": { "start": { "line": 18, "column": 18 }, "end": { "line": 18, "column": 50 } },
        "7": { "start": { "line": 21, "column": 2 }, "end": { "line": 23, "column": 48 } },
        "8": { "start": { "line": 22, "column": 20 }, "end": { "line": 22, "column": 46 } },
        "9": { "start": { "line": 23, "column": 20 }, "end": { "line": 23, "column": 48 } },
        "10": { "start": { "line": 24, "column": 12 }, "end": { "line": 27, "column": 2 } },
        "11": { "start": { "line": 29, "column": 0 }, "end": { "line": 31, "column": 1 } },
        "12": { "start": { "line": 30, "column": 2 }, "end": { "line": 30, "column": 36 } },
        "13": { "start": { "line": 34, "column": 19 }, "end": { "line": 34, "column": 66 } },
        "14": { "start": { "line": 35, "column": 2 }, "end": { "line": 41, "column": 4 } },
        "15": { "start": { "line": 38, "column": 6 }, "end": { "line": 38, "column": 60 } },
        "16": { "start": { "line": 39, "column": 6 }, "end": { "line": 39, "column": 17 } },
        "17": { "start": { "line": 45, "column": 19 }, "end": { "line": 45, "column": 66 } },
        "18": { "start": { "line": 47, "column": 2 }, "end": { "line": 49, "column": 3 } },
        "19": { "start": { "line": 48, "column": 4 }, "end": { "line": 48, "column": 17 } },
        "20": { "start": { "line": 51, "column": 51 }, "end": { "line": 51, "column": 53 } },
        "21": { "start": { "line": 53, "column": 2 }, "end": { "line": 65, "column": 5 } },
        "22": { "start": { "line": 54, "column": 23 }, "end": { "line": 54, "column": 40 } },
        "23": { "start": { "line": 55, "column": 22 }, "end": { "line": 55, "column": 97 } },
        "24": { "start": { "line": 57, "column": 30 }, "end": { "line": 62, "column": 17 } },
        "25": { "start": { "line": 64, "column": 4 }, "end": { "line": 64, "column": 49 } },
        "26": { "start": { "line": 67, "column": 2 }, "end": { "line": 67, "column": 23 } },
        "27": { "start": { "line": 70, "column": 0 }, "end": { "line": 70, "column": 19 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 22, "column": 6 }, "end": { "line": 22, "column": 17 } },
          "loc": { "start": { "line": 22, "column": 20 }, "end": { "line": 22, "column": 46 } }
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 23, "column": 6 }, "end": { "line": 23, "column": 17 } },
          "loc": { "start": { "line": 23, "column": 20 }, "end": { "line": 23, "column": 48 } }
        },
        "2": {
          "name": "redactedStore",
          "decl": { "start": { "line": 33, "column": 16 }, "end": { "line": 33, "column": 29 } },
          "loc": { "start": { "line": 33, "column": 42 }, "end": { "line": 42, "column": 1 } }
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 37, "column": 41 }, "end": { "line": 37, "column": 42 } },
          "loc": { "start": { "line": 37, "column": 86 }, "end": { "line": 40, "column": 5 } }
        },
        "4": {
          "name": "redactedPatch",
          "decl": { "start": { "line": 44, "column": 16 }, "end": { "line": 44, "column": 29 } },
          "loc": { "start": { "line": 44, "column": 67 }, "end": { "line": 68, "column": 1 } }
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 53, "column": 32 }, "end": { "line": 53, "column": 33 } },
          "loc": { "start": { "line": 53, "column": 53 }, "end": { "line": 65, "column": 3 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 18, "column": 18 }, "end": { "line": 18, "column": 50 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 18, "column": 32 }, "end": { "line": 18, "column": 38 } },
            { "start": { "line": 18, "column": 41 }, "end": { "line": 18, "column": 50 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 21, "column": 2 }, "end": { "line": 23, "column": 48 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 22, "column": 6 }, "end": { "line": 22, "column": 46 } },
            { "start": { "line": 23, "column": 6 }, "end": { "line": 23, "column": 48 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 29, "column": 0 }, "end": { "line": 31, "column": 1 } },
          "type": "if",
          "locations": [
            { "start": { "line": 29, "column": 0 }, "end": { "line": 31, "column": 1 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 38, "column": 17 }, "end": { "line": 38, "column": 59 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 38, "column": 28 }, "end": { "line": 38, "column": 41 } },
            { "start": { "line": 38, "column": 44 }, "end": { "line": 38, "column": 59 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 44, "column": 30 }, "end": { "line": 44, "column": 67 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 44, "column": 65 }, "end": { "line": 44, "column": 67 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 47, "column": 2 }, "end": { "line": 49, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 47, "column": 2 }, "end": { "line": 49, "column": 3 } }
          ]
        },
        "6": {
          "loc": { "start": { "line": 55, "column": 22 }, "end": { "line": 55, "column": 97 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 55, "column": 35 }, "end": { "line": 55, "column": 91 } },
            { "start": { "line": 55, "column": 94 }, "end": { "line": 55, "column": 97 } }
          ]
        },
        "7": {
          "loc": { "start": { "line": 57, "column": 30 }, "end": { "line": 62, "column": 17 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 58, "column": 8 }, "end": { "line": 61, "column": null } },
            { "start": { "line": 62, "column": 8 }, "end": { "line": 62, "column": 17 } }
          ]
        },
        "8": {
          "loc": { "start": { "line": 60, "column": 14 }, "end": { "line": 60, "column": 79 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 60, "column": 50 }, "end": { "line": 60, "column": 74 } },
            { "start": { "line": 60, "column": 77 }, "end": { "line": 60, "column": 79 } }
          ]
        }
      },
      "s": {
        "0": 18,
        "1": 18,
        "2": 18,
        "3": 18,
        "4": 18,
        "5": 18,
        "6": 18,
        "7": 18,
        "8": 0,
        "9": 50,
        "10": 18,
        "11": 18,
        "12": 1,
        "13": 400,
        "14": 400,
        "15": 1854,
        "16": 1854,
        "17": 6,
        "18": 6,
        "19": 3,
        "20": 3,
        "21": 3,
        "22": 3,
        "23": 3,
        "24": 3,
        "25": 3,
        "26": 3,
        "27": 18
      },
      "f": { "0": 0, "1": 50, "2": 400, "3": 1854, "4": 6, "5": 3 },
      "b": {
        "0": [0, 18],
        "1": [0, 18],
        "2": [1],
        "3": [889, 965],
        "4": [0],
        "5": [3],
        "6": [2, 1],
        "7": [2, 1],
        "8": [2, 0]
      }
    },
    "/Users/sam/code/work/pepr/src/lib/controller/storeCache.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/controller/storeCache.ts",
      "statementMap": {
        "0": { "start": { "line": 69, "column": 0 }, "end": { "line": 69, "column": 16 } },
        "1": { "start": { "line": 2, "column": 0 }, "end": { "line": 2, "column": 38 } },
        "2": { "start": { "line": 3, "column": 0 }, "end": { "line": 3, "column": 47 } },
        "3": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 31 } },
        "4": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 48 } },
        "5": { "start": { "line": 8, "column": 40 }, "end": { "line": 33, "column": 1 } },
        "6": { "start": { "line": 13, "column": 18 }, "end": { "line": 13, "column": 36 } },
        "7": { "start": { "line": 14, "column": 18 }, "end": { "line": 14, "column": 38 } },
        "8": { "start": { "line": 16, "column": 2 }, "end": { "line": 31, "column": 3 } },
        "9": { "start": { "line": 17, "column": 4 }, "end": { "line": 20, "column": 5 } },
        "10": { "start": { "line": 18, "column": 6 }, "end": { "line": 18, "column": 74 } },
        "11": { "start": { "line": 19, "column": 6 }, "end": { "line": 19, "column": 59 } },
        "12": { "start": { "line": 19, "column": 40 }, "end": { "line": 19, "column": 57 } },
        "13": { "start": { "line": 22, "column": 4 }, "end": { "line": 22, "column": 48 } },
        "14": { "start": { "line": 24, "column": 4 }, "end": { "line": 30, "column": 5 } },
        "15": { "start": { "line": 25, "column": 6 }, "end": { "line": 25, "column": 59 } },
        "16": { "start": { "line": 25, "column": 40 }, "end": { "line": 25, "column": 57 } },
        "17": { "start": { "line": 27, "column": 6 }, "end": { "line": 29, "column": 9 } },
        "18": { "start": { "line": 28, "column": 8 }, "end": { "line": 28, "column": 46 } },
        "19": { "start": { "line": 32, "column": 2 }, "end": { "line": 32, "column": 15 } },
        "20": { "start": { "line": 8, "column": 13 }, "end": { "line": 8, "column": 40 } },
        "21": { "start": { "line": 41, "column": 30 }, "end": { "line": 67, "column": 1 } },
        "22": { "start": { "line": 47, "column": 15 }, "end": { "line": 49, "column": 14 } },
        "23": { "start": { "line": 48, "column": 19 }, "end": { "line": 48, "column": 50 } },
        "24": { "start": { "line": 50, "column": 2 }, "end": { "line": 65, "column": 3 } },
        "25": { "start": { "line": 51, "column": 18 }, "end": { "line": 51, "column": 39 } },
        "26": { "start": { "line": 52, "column": 21 }, "end": { "line": 52, "column": 48 } },
        "27": { "start": { "line": 55, "column": 4 }, "end": { "line": 55, "column": 42 } },
        "28": { "start": { "line": 56, "column": 9 }, "end": { "line": 65, "column": 3 } },
        "29": { "start": { "line": 57, "column": 4 }, "end": { "line": 59, "column": 5 } },
        "30": { "start": { "line": 58, "column": 6 }, "end": { "line": 58, "column": 62 } },
        "31": { "start": { "line": 60, "column": 23 }, "end": { "line": 60, "column": 43 } },
        "32": { "start": { "line": 62, "column": 4 }, "end": { "line": 62, "column": 37 } },
        "33": { "start": { "line": 64, "column": 4 }, "end": { "line": 64, "column": 52 } },
        "34": { "start": { "line": 66, "column": 2 }, "end": { "line": 66, "column": 15 } },
        "35": { "start": { "line": 41, "column": 13 }, "end": { "line": 41, "column": 30 } },
        "36": { "start": { "line": 70, "column": 2 }, "end": { "line": 74, "column": 5 } },
        "37": { "start": { "line": 75, "column": 2 }, "end": { "line": 75, "column": 17 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 8, "column": 40 }, "end": { "line": 8, "column": 45 } },
          "loc": { "start": { "line": 12, "column": 40 }, "end": { "line": 33, "column": 1 } }
        },
        "1": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 19, "column": 33 }, "end": { "line": 19, "column": 36 } },
          "loc": { "start": { "line": 19, "column": 40 }, "end": { "line": 19, "column": 57 } }
        },
        "2": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 25, "column": 33 }, "end": { "line": 25, "column": 36 } },
          "loc": { "start": { "line": 25, "column": 40 }, "end": { "line": 25, "column": 57 } }
        },
        "3": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 27, "column": 22 }, "end": { "line": 27, "column": 27 } },
          "loc": { "start": { "line": 27, "column": 30 }, "end": { "line": 29, "column": 7 } }
        },
        "4": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 41, "column": 30 }, "end": { "line": 41, "column": null } },
          "loc": { "start": { "line": 46, "column": 31 }, "end": { "line": 67, "column": 1 } }
        },
        "5": {
          "name": "(anonymous_6)",
          "decl": { "start": { "line": 48, "column": 12 }, "end": { "line": 48, "column": 15 } },
          "loc": { "start": { "line": 48, "column": 19 }, "end": { "line": 48, "column": 50 } }
        },
        "6": {
          "name": "updateCacheID",
          "decl": { "start": { "line": 69, "column": 16 }, "end": { "line": 69, "column": 29 } },
          "loc": { "start": { "line": 69, "column": 50 }, "end": { "line": 76, "column": 1 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 17, "column": 4 }, "end": { "line": 20, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 17, "column": 4 }, "end": { "line": 20, "column": 5 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 24, "column": 4 }, "end": { "line": 30, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 24, "column": 4 }, "end": { "line": 30, "column": 5 } },
            { "start": { "line": 26, "column": 11 }, "end": { "line": 30, "column": 5 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 48, "column": 19 }, "end": { "line": 48, "column": 50 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 48, "column": 19 }, "end": { "line": 48, "column": 29 } },
            { "start": { "line": 48, "column": 33 }, "end": { "line": 48, "column": 50 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 50, "column": 2 }, "end": { "line": 65, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 50, "column": 2 }, "end": { "line": 65, "column": 3 } },
            { "start": { "line": 56, "column": 9 }, "end": { "line": 65, "column": 3 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 51, "column": 18 }, "end": { "line": 51, "column": 39 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 51, "column": 18 }, "end": { "line": 51, "column": 33 } },
            { "start": { "line": 51, "column": 37 }, "end": { "line": 51, "column": 39 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 56, "column": 9 }, "end": { "line": 65, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 56, "column": 9 }, "end": { "line": 65, "column": 3 } },
            { "start": { "line": 63, "column": 9 }, "end": { "line": 65, "column": 3 } }
          ]
        },
        "6": {
          "loc": { "start": { "line": 57, "column": 4 }, "end": { "line": 59, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 57, "column": 4 }, "end": { "line": 59, "column": 5 } }
          ]
        }
      },
      "s": {
        "0": 3,
        "1": 3,
        "2": 3,
        "3": 3,
        "4": 3,
        "5": 3,
        "6": 3,
        "7": 3,
        "8": 3,
        "9": 3,
        "10": 3,
        "11": 1,
        "12": 2,
        "13": 2,
        "14": 2,
        "15": 1,
        "16": 2,
        "17": 1,
        "18": 2,
        "19": 3,
        "20": 3,
        "21": 3,
        "22": 5,
        "23": 15,
        "24": 5,
        "25": 2,
        "26": 2,
        "27": 2,
        "28": 3,
        "29": 2,
        "30": 1,
        "31": 1,
        "32": 1,
        "33": 1,
        "34": 3,
        "35": 3,
        "36": 4,
        "37": 4
      },
      "f": { "0": 3, "1": 2, "2": 2, "3": 2, "4": 5, "5": 15, "6": 4 },
      "b": { "0": [3], "1": [1, 1], "2": [15, 13], "3": [2, 3], "4": [2, 1], "5": [2, 1], "6": [1] }
    },
    "/Users/sam/code/work/pepr/src/lib/core/capability.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/core/capability.ts",
      "statementMap": {
        "0": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 99 } },
        "1": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 31 } },
        "2": { "start": { "line": 6, "column": 0 }, "end": { "line": 6, "column": 38 } },
        "3": { "start": { "line": 7, "column": 0 }, "end": { "line": 7, "column": 63 } },
        "4": { "start": { "line": 8, "column": 0 }, "end": { "line": 8, "column": 47 } },
        "5": { "start": { "line": 9, "column": 0 }, "end": { "line": 9, "column": 50 } },
        "6": { "start": { "line": 10, "column": 0 }, "end": { "line": 10, "column": 33 } },
        "7": { "start": { "line": 26, "column": 0 }, "end": { "line": 26, "column": 44 } },
        "8": { "start": { "line": 28, "column": 26 }, "end": { "line": 28, "column": 57 } },
        "9": { "start": { "line": 29, "column": 22 }, "end": { "line": 29, "column": 67 } },
        "10": { "start": { "line": 38, "column": 25 }, "end": { "line": 38, "column": 27 } },
        "11": { "start": { "line": 39, "column": 11 }, "end": { "line": 39, "column": 24 } },
        "12": { "start": { "line": 40, "column": 19 }, "end": { "line": 40, "column": 32 } },
        "13": { "start": { "line": 41, "column": 16 }, "end": { "line": 41, "column": 21 } },
        "14": { "start": { "line": 42, "column": 24 }, "end": { "line": 42, "column": 29 } },
        "15": { "start": { "line": 51, "column": 45 }, "end": { "line": 72, "column": 3 } },
        "16": { "start": { "line": 52, "column": 63 }, "end": { "line": 52, "column": 71 } },
        "17": { "start": { "line": 53, "column": 4 }, "end": { "line": 53, "column": 28 } },
        "18": { "start": { "line": 55, "column": 4 }, "end": { "line": 71, "column": 5 } },
        "19": { "start": { "line": 59, "column": 36 }, "end": { "line": 66, "column": 8 } },
        "20": { "start": { "line": 68, "column": 6 }, "end": { "line": 70, "column": 9 } },
        "21": { "start": { "line": 69, "column": 8 }, "end": { "line": 69, "column": 66 } },
        "22": { "start": { "line": 75, "column": 4 }, "end": { "line": 75, "column": 31 } },
        "23": { "start": { "line": 85, "column": 21 }, "end": { "line": 94, "column": 4 } },
        "24": { "start": { "line": 103, "column": 29 }, "end": { "line": 112, "column": 4 } },
        "25": { "start": { "line": 115, "column": 4 }, "end": { "line": 115, "column": 26 } },
        "26": { "start": { "line": 119, "column": 4 }, "end": { "line": 119, "column": 22 } },
        "27": { "start": { "line": 123, "column": 4 }, "end": { "line": 123, "column": 29 } },
        "28": { "start": { "line": 127, "column": 4 }, "end": { "line": 127, "column": 34 } },
        "29": { "start": { "line": 131, "column": 4 }, "end": { "line": 131, "column": 26 } },
        "30": { "start": { "line": 132, "column": 4 }, "end": { "line": 132, "column": 40 } },
        "31": { "start": { "line": 133, "column": 4 }, "end": { "line": 133, "column": 38 } },
        "32": { "start": { "line": 134, "column": 4 }, "end": { "line": 134, "column": 29 } },
        "33": { "start": { "line": 136, "column": 4 }, "end": { "line": 136, "column": 52 } },
        "34": { "start": { "line": 137, "column": 4 }, "end": { "line": 137, "column": 19 } },
        "35": { "start": { "line": 143, "column": 26 }, "end": { "line": 154, "column": 3 } },
        "36": { "start": { "line": 144, "column": 4 }, "end": { "line": 144, "column": 61 } },
        "37": { "start": { "line": 146, "column": 4 }, "end": { "line": 148, "column": 5 } },
        "38": { "start": { "line": 147, "column": 6 }, "end": { "line": 147, "column": 77 } },
        "39": { "start": { "line": 150, "column": 4 }, "end": { "line": 150, "column": 36 } },
        "40": { "start": { "line": 153, "column": 4 }, "end": { "line": 153, "column": 31 } },
        "41": { "start": { "line": 161, "column": 18 }, "end": { "line": 172, "column": 3 } },
        "42": { "start": { "line": 162, "column": 4 }, "end": { "line": 162, "column": 52 } },
        "43": { "start": { "line": 164, "column": 4 }, "end": { "line": 166, "column": 5 } },
        "44": { "start": { "line": 165, "column": 6 }, "end": { "line": 165, "column": 68 } },
        "45": { "start": { "line": 168, "column": 4 }, "end": { "line": 168, "column": 28 } },
        "46": { "start": { "line": 171, "column": 4 }, "end": { "line": 171, "column": 23 } },
        "47": { "start": { "line": 183, "column": 9 }, "end": { "line": 419, "column": 3 } },
        "48": { "start": { "line": 184, "column": 24 }, "end": { "line": 184, "column": 59 } },
        "49": { "start": { "line": 187, "column": 4 }, "end": { "line": 189, "column": 5 } },
        "50": { "start": { "line": 188, "column": 6 }, "end": { "line": 188, "column": 62 } },
        "51": { "start": { "line": 191, "column": 29 }, "end": { "line": 205, "column": 6 } },
        "52": { "start": { "line": 207, "column": 21 }, "end": { "line": 207, "column": 35 } },
        "53": { "start": { "line": 208, "column": 19 }, "end": { "line": 208, "column": 49 } },
        "54": { "start": { "line": 209, "column": 24 }, "end": { "line": 209, "column": 119 } },
        "55": { "start": { "line": 221, "column": 23 }, "end": { "line": 221, "column": 80 } },
        "56": { "start": { "line": 221, "column": 51 }, "end": { "line": 221, "column": 80 } },
        "57": { "start": { "line": 222, "column": 16 }, "end": { "line": 228, "column": 5 } },
        "58": { "start": { "line": 223, "column": 26 }, "end": { "line": 223, "column": 61 } },
        "59": { "start": { "line": 225, "column": 6 }, "end": { "line": 225, "column": 69 } },
        "60": { "start": { "line": 226, "column": 6 }, "end": { "line": 226, "column": 36 } },
        "61": { "start": { "line": 227, "column": 6 }, "end": { "line": 227, "column": 34 } },
        "62": { "start": { "line": 231, "column": 6 }, "end": { "line": 247, "column": 7 } },
        "63": { "start": { "line": 232, "column": 8 }, "end": { "line": 232, "column": 60 } },
        "64": { "start": { "line": 235, "column": 28 }, "end": { "line": 235, "column": 86 } },
        "65": { "start": { "line": 239, "column": 8 }, "end": { "line": 246, "column": 11 } },
        "66": { "start": { "line": 243, "column": 12 }, "end": { "line": 243, "column": 102 } },
        "67": { "start": { "line": 244, "column": 12 }, "end": { "line": 244, "column": 55 } },
        "68": { "start": { "line": 249, "column": 6 }, "end": { "line": 249, "column": 34 } },
        "69": { "start": { "line": 253, "column": 6 }, "end": { "line": 269, "column": 7 } },
        "70": { "start": { "line": 254, "column": 8 }, "end": { "line": 254, "column": 56 } },
        "71": { "start": { "line": 257, "column": 28 }, "end": { "line": 257, "column": 86 } },
        "72": { "start": { "line": 261, "column": 8 }, "end": { "line": 268, "column": 11 } },
        "73": { "start": { "line": 265, "column": 12 }, "end": { "line": 265, "column": 102 } },
        "74": { "start": { "line": 266, "column": 12 }, "end": { "line": 266, "column": 46 } },
        "75": { "start": { "line": 272, "column": 6 }, "end": { "line": 272, "column": 44 } },
        "76": { "start": { "line": 276, "column": 6 }, "end": { "line": 292, "column": 7 } },
        "77": { "start": { "line": 277, "column": 8 }, "end": { "line": 277, "column": 54 } },
        "78": { "start": { "line": 280, "column": 28 }, "end": { "line": 280, "column": 100 } },
        "79": { "start": { "line": 284, "column": 8 }, "end": { "line": 291, "column": 11 } },
        "80": { "start": { "line": 288, "column": 12 }, "end": { "line": 288, "column": 99 } },
        "81": { "start": { "line": 289, "column": 12 }, "end": { "line": 289, "column": 55 } },
        "82": { "start": { "line": 293, "column": 6 }, "end": { "line": 293, "column": 26 } },
        "83": { "start": { "line": 297, "column": 6 }, "end": { "line": 314, "column": 7 } },
        "84": { "start": { "line": 298, "column": 8 }, "end": { "line": 298, "column": 62 } },
        "85": { "start": { "line": 301, "column": 28 }, "end": { "line": 301, "column": 100 } },
        "86": { "start": { "line": 305, "column": 8 }, "end": { "line": 313, "column": 11 } },
        "87": { "start": { "line": 310, "column": 12 }, "end": { "line": 310, "column": 103 } },
        "88": { "start": { "line": 311, "column": 12 }, "end": { "line": 311, "column": 59 } },
        "89": { "start": { "line": 315, "column": 6 }, "end": { "line": 315, "column": 26 } },
        "90": { "start": { "line": 319, "column": 6 }, "end": { "line": 319, "column": 58 } },
        "91": { "start": { "line": 322, "column": 26 }, "end": { "line": 322, "column": 98 } },
        "92": { "start": { "line": 325, "column": 6 }, "end": { "line": 334, "column": 7 } },
        "93": { "start": { "line": 326, "column": 30 }, "end": { "line": 332, "column": 10 } },
        "94": { "start": { "line": 333, "column": 8 }, "end": { "line": 333, "column": 37 } },
        "95": { "start": { "line": 337, "column": 6 }, "end": { "line": 349, "column": 7 } },
        "96": { "start": { "line": 338, "column": 29 }, "end": { "line": 347, "column": 10 } },
        "97": { "start": { "line": 344, "column": 12 }, "end": { "line": 344, "column": 102 } },
        "98": { "start": { "line": 345, "column": 12 }, "end": { "line": 345, "column": 58 } },
        "99": { "start": { "line": 348, "column": 8 }, "end": { "line": 348, "column": 36 } },
        "100": { "start": { "line": 353, "column": 6 }, "end": { "line": 353, "column": 63 } },
        "101": { "start": { "line": 354, "column": 6 }, "end": { "line": 354, "column": 53 } },
        "102": { "start": { "line": 355, "column": 6 }, "end": { "line": 355, "column": 57 } },
        "103": { "start": { "line": 359, "column": 6 }, "end": { "line": 359, "column": 69 } },
        "104": { "start": { "line": 360, "column": 6 }, "end": { "line": 360, "column": 85 } },
        "105": { "start": { "line": 360, "column": 70 }, "end": { "line": 360, "column": 82 } },
        "106": { "start": { "line": 361, "column": 6 }, "end": { "line": 361, "column": 57 } },
        "107": { "start": { "line": 365, "column": 6 }, "end": { "line": 365, "column": 48 } },
        "108": { "start": { "line": 366, "column": 6 }, "end": { "line": 366, "column": 47 } },
        "109": { "start": { "line": 367, "column": 6 }, "end": { "line": 367, "column": 25 } },
        "110": { "start": { "line": 371, "column": 6 }, "end": { "line": 371, "column": 62 } },
        "111": { "start": { "line": 372, "column": 6 }, "end": { "line": 372, "column": 51 } },
        "112": { "start": { "line": 373, "column": 6 }, "end": { "line": 373, "column": 25 } },
        "113": { "start": { "line": 377, "column": 6 }, "end": { "line": 377, "column": 51 } },
        "114": { "start": { "line": 378, "column": 6 }, "end": { "line": 378, "column": 34 } },
        "115": { "start": { "line": 379, "column": 6 }, "end": { "line": 379, "column": 25 } },
        "116": { "start": { "line": 383, "column": 6 }, "end": { "line": 383, "column": 60 } },
        "117": { "start": { "line": 384, "column": 6 }, "end": { "line": 384, "column": 42 } },
        "118": { "start": { "line": 385, "column": 6 }, "end": { "line": 385, "column": 25 } },
        "119": { "start": { "line": 389, "column": 6 }, "end": { "line": 389, "column": 65 } },
        "120": { "start": { "line": 390, "column": 6 }, "end": { "line": 390, "column": 47 } },
        "121": { "start": { "line": 391, "column": 6 }, "end": { "line": 391, "column": 25 } },
        "122": { "start": { "line": 395, "column": 6 }, "end": { "line": 395, "column": 56 } },
        "123": { "start": { "line": 396, "column": 6 }, "end": { "line": 396, "column": 28 } },
        "124": { "start": { "line": 397, "column": 6 }, "end": { "line": 397, "column": 25 } },
        "125": { "start": { "line": 401, "column": 6 }, "end": { "line": 401, "column": 28 } },
        "126": { "start": { "line": 402, "column": 6 }, "end": { "line": 410, "column": 8 } },
        "127": { "start": { "line": 413, "column": 4 }, "end": { "line": 418, "column": 6 } },
        "128": { "start": { "line": 414, "column": 32 }, "end": { "line": 414, "column": 65 } },
        "129": { "start": { "line": 415, "column": 23 }, "end": { "line": 415, "column": 46 } },
        "130": { "start": { "line": 416, "column": 23 }, "end": { "line": 416, "column": 46 } },
        "131": { "start": { "line": 417, "column": 23 }, "end": { "line": 417, "column": 46 } },
        "132": { "start": { "line": 34, "column": 0 }, "end": { "line": 34, "column": 13 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 51, "column": 45 }, "end": { "line": 51, "column": 46 } },
          "loc": { "start": { "line": 51, "column": 68 }, "end": { "line": 72, "column": 3 } }
        },
        "1": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 68, "column": 34 }, "end": { "line": 68, "column": 37 } },
          "loc": { "start": { "line": 68, "column": 39 }, "end": { "line": 70, "column": 7 } }
        },
        "2": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 74, "column": 9 }, "end": { "line": 74, "column": 25 } },
          "loc": { "start": { "line": 74, "column": 25 }, "end": { "line": 76, "column": 3 } }
        },
        "3": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 114, "column": 2 }, "end": { "line": 114, "column": 6 } },
          "loc": { "start": { "line": 114, "column": 14 }, "end": { "line": 116, "column": 3 } }
        },
        "4": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 118, "column": 2 }, "end": { "line": 118, "column": 6 } },
          "loc": { "start": { "line": 118, "column": 10 }, "end": { "line": 120, "column": 3 } }
        },
        "5": {
          "name": "(anonymous_6)",
          "decl": { "start": { "line": 122, "column": 2 }, "end": { "line": 122, "column": 6 } },
          "loc": { "start": { "line": 122, "column": 17 }, "end": { "line": 124, "column": 3 } }
        },
        "6": {
          "name": "(anonymous_7)",
          "decl": { "start": { "line": 126, "column": 2 }, "end": { "line": 126, "column": 6 } },
          "loc": { "start": { "line": 126, "column": 16 }, "end": { "line": 128, "column": 3 } }
        },
        "7": {
          "name": "(anonymous_8)",
          "decl": { "start": { "line": 130, "column": 2 }, "end": { "line": 130, "column": 14 } },
          "loc": { "start": { "line": 130, "column": 32 }, "end": { "line": 138, "column": 3 } }
        },
        "8": {
          "name": "(anonymous_9)",
          "decl": { "start": { "line": 143, "column": 26 }, "end": { "line": 143, "column": 38 } },
          "loc": { "start": { "line": 143, "column": 40 }, "end": { "line": 154, "column": 3 } }
        },
        "9": {
          "name": "(anonymous_10)",
          "decl": { "start": { "line": 161, "column": 18 }, "end": { "line": 161, "column": 30 } },
          "loc": { "start": { "line": 161, "column": 32 }, "end": { "line": 172, "column": 3 } }
        },
        "10": {
          "name": "(anonymous_11)",
          "decl": { "start": { "line": 183, "column": 9 }, "end": { "line": 183, "column": 34 } },
          "loc": { "start": { "line": 183, "column": 88 }, "end": { "line": 419, "column": 3 } }
        },
        "11": {
          "name": "(anonymous_12)",
          "decl": { "start": { "line": 221, "column": 23 }, "end": { "line": 221, "column": 24 } },
          "loc": { "start": { "line": 221, "column": 51 }, "end": { "line": 221, "column": 80 } }
        },
        "12": {
          "name": "(anonymous_13)",
          "decl": { "start": { "line": 222, "column": 16 }, "end": { "line": 222, "column": 17 } },
          "loc": { "start": { "line": 222, "column": 60 }, "end": { "line": 228, "column": 5 } }
        },
        "13": {
          "name": "Validate",
          "decl": { "start": { "line": 230, "column": 13 }, "end": { "line": 230, "column": 21 } },
          "loc": { "start": { "line": 230, "column": 57 }, "end": { "line": 250, "column": 5 } }
        },
        "14": {
          "name": "(anonymous_15)",
          "decl": { "start": { "line": 242, "column": 28 }, "end": { "line": 242, "column": 33 } },
          "loc": { "start": { "line": 242, "column": 64 }, "end": { "line": 245, "column": 11 } }
        },
        "15": {
          "name": "Mutate",
          "decl": { "start": { "line": 252, "column": 13 }, "end": { "line": 252, "column": 19 } },
          "loc": { "start": { "line": 252, "column": 51 }, "end": { "line": 273, "column": 5 } }
        },
        "16": {
          "name": "(anonymous_17)",
          "decl": { "start": { "line": 264, "column": 26 }, "end": { "line": 264, "column": 31 } },
          "loc": { "start": { "line": 264, "column": 62 }, "end": { "line": 267, "column": 11 } }
        },
        "17": {
          "name": "Watch",
          "decl": { "start": { "line": 275, "column": 13 }, "end": { "line": 275, "column": 18 } },
          "loc": { "start": { "line": 275, "column": 51 }, "end": { "line": 294, "column": 5 } }
        },
        "18": {
          "name": "(anonymous_19)",
          "decl": { "start": { "line": 287, "column": 25 }, "end": { "line": 287, "column": 30 } },
          "loc": { "start": { "line": 287, "column": 71 }, "end": { "line": 290, "column": 11 } }
        },
        "19": {
          "name": "Reconcile",
          "decl": { "start": { "line": 296, "column": 13 }, "end": { "line": 296, "column": 22 } },
          "loc": { "start": { "line": 296, "column": 59 }, "end": { "line": 316, "column": 5 } }
        },
        "20": {
          "name": "(anonymous_21)",
          "decl": { "start": { "line": 309, "column": 25 }, "end": { "line": 309, "column": 30 } },
          "loc": { "start": { "line": 309, "column": 71 }, "end": { "line": 312, "column": 11 } }
        },
        "21": {
          "name": "Finalize",
          "decl": { "start": { "line": 318, "column": 13 }, "end": { "line": 318, "column": 21 } },
          "loc": { "start": { "line": 318, "column": 57 }, "end": { "line": 350, "column": 5 } }
        },
        "22": {
          "name": "(anonymous_23)",
          "decl": { "start": { "line": 343, "column": 28 }, "end": { "line": 343, "column": 33 } },
          "loc": { "start": { "line": 343, "column": 109 }, "end": { "line": 346, "column": 11 } }
        },
        "23": {
          "name": "InNamespace",
          "decl": { "start": { "line": 352, "column": 13 }, "end": { "line": 352, "column": 24 } },
          "loc": { "start": { "line": 352, "column": 48 }, "end": { "line": 356, "column": 5 } }
        },
        "24": {
          "name": "InNamespaceRegex",
          "decl": { "start": { "line": 358, "column": 13 }, "end": { "line": 358, "column": 29 } },
          "loc": { "start": { "line": 358, "column": 53 }, "end": { "line": 362, "column": 5 } }
        },
        "25": {
          "name": "(anonymous_26)",
          "decl": { "start": { "line": 360, "column": 61 }, "end": { "line": 360, "column": 66 } },
          "loc": { "start": { "line": 360, "column": 70 }, "end": { "line": 360, "column": 82 } }
        },
        "26": {
          "name": "WithDeletionTimestamp",
          "decl": { "start": { "line": 364, "column": 13 }, "end": { "line": 364, "column": 34 } },
          "loc": { "start": { "line": 364, "column": 34 }, "end": { "line": 368, "column": 5 } }
        },
        "27": {
          "name": "WithNameRegex",
          "decl": { "start": { "line": 370, "column": 13 }, "end": { "line": 370, "column": 26 } },
          "loc": { "start": { "line": 370, "column": 44 }, "end": { "line": 374, "column": 5 } }
        },
        "28": {
          "name": "WithName",
          "decl": { "start": { "line": 376, "column": 13 }, "end": { "line": 376, "column": 21 } },
          "loc": { "start": { "line": 376, "column": 34 }, "end": { "line": 380, "column": 5 } }
        },
        "29": {
          "name": "WithLabel",
          "decl": { "start": { "line": 382, "column": 13 }, "end": { "line": 382, "column": 22 } },
          "loc": { "start": { "line": 382, "column": 46 }, "end": { "line": 386, "column": 5 } }
        },
        "30": {
          "name": "WithAnnotation",
          "decl": { "start": { "line": 388, "column": 13 }, "end": { "line": 388, "column": 27 } },
          "loc": { "start": { "line": 388, "column": 51 }, "end": { "line": 392, "column": 5 } }
        },
        "31": {
          "name": "Alias",
          "decl": { "start": { "line": 394, "column": 13 }, "end": { "line": 394, "column": 18 } },
          "loc": { "start": { "line": 394, "column": 32 }, "end": { "line": 398, "column": 5 } }
        },
        "32": {
          "name": "bindEvent",
          "decl": { "start": { "line": 400, "column": 13 }, "end": { "line": 400, "column": 22 } },
          "loc": { "start": { "line": 400, "column": 35 }, "end": { "line": 411, "column": 5 } }
        },
        "33": {
          "name": "(anonymous_34)",
          "decl": { "start": { "line": 414, "column": 26 }, "end": { "line": 414, "column": 29 } },
          "loc": { "start": { "line": 414, "column": 32 }, "end": { "line": 414, "column": 65 } }
        },
        "34": {
          "name": "(anonymous_35)",
          "decl": { "start": { "line": 415, "column": 17 }, "end": { "line": 415, "column": 20 } },
          "loc": { "start": { "line": 415, "column": 23 }, "end": { "line": 415, "column": 46 } }
        },
        "35": {
          "name": "(anonymous_36)",
          "decl": { "start": { "line": 416, "column": 17 }, "end": { "line": 416, "column": 20 } },
          "loc": { "start": { "line": 416, "column": 23 }, "end": { "line": 416, "column": 46 } }
        },
        "36": {
          "name": "(anonymous_37)",
          "decl": { "start": { "line": 417, "column": 17 }, "end": { "line": 417, "column": 20 } },
          "loc": { "start": { "line": 417, "column": 23 }, "end": { "line": 417, "column": 46 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 28, "column": 26 }, "end": { "line": 28, "column": 57 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 28, "column": 26 }, "end": { "line": 28, "column": 39 } },
            { "start": { "line": 28, "column": 43 }, "end": { "line": 28, "column": 57 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 29, "column": 22 }, "end": { "line": 29, "column": 67 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 29, "column": 22 }, "end": { "line": 29, "column": 35 } },
            { "start": { "line": 29, "column": 39 }, "end": { "line": 29, "column": 52 } },
            { "start": { "line": 29, "column": 56 }, "end": { "line": 29, "column": 67 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 55, "column": 4 }, "end": { "line": 71, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 55, "column": 4 }, "end": { "line": 71, "column": 5 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 55, "column": 8 }, "end": { "line": 55, "column": 81 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 55, "column": 8 }, "end": { "line": 55, "column": 46 } },
            { "start": { "line": 55, "column": 50 }, "end": { "line": 55, "column": 81 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 127, "column": 11 }, "end": { "line": 127, "column": 33 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 127, "column": 11 }, "end": { "line": 127, "column": 27 } },
            { "start": { "line": 127, "column": 31 }, "end": { "line": 127, "column": 33 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 146, "column": 4 }, "end": { "line": 148, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 146, "column": 4 }, "end": { "line": 148, "column": 5 } }
          ]
        },
        "6": {
          "loc": { "start": { "line": 164, "column": 4 }, "end": { "line": 166, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 164, "column": 4 }, "end": { "line": 166, "column": 5 } }
          ]
        },
        "7": {
          "loc": { "start": { "line": 187, "column": 4 }, "end": { "line": 189, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 187, "column": 4 }, "end": { "line": 189, "column": 5 } }
          ]
        },
        "8": {
          "loc": { "start": { "line": 187, "column": 8 }, "end": { "line": 187, "column": 29 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 187, "column": 8 }, "end": { "line": 187, "column": 20 } },
            { "start": { "line": 187, "column": 24 }, "end": { "line": 187, "column": 29 } }
          ]
        },
        "9": {
          "loc": { "start": { "line": 194, "column": 12 }, "end": { "line": 194, "column": 31 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 194, "column": 12 }, "end": { "line": 194, "column": 16 } },
            { "start": { "line": 194, "column": 20 }, "end": { "line": 194, "column": 31 } }
          ]
        },
        "10": {
          "loc": { "start": { "line": 231, "column": 6 }, "end": { "line": 247, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 231, "column": 6 }, "end": { "line": 247, "column": 7 } }
          ]
        },
        "11": {
          "loc": { "start": { "line": 235, "column": 47 }, "end": { "line": 235, "column": 83 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 235, "column": 47 }, "end": { "line": 235, "column": 60 } },
            { "start": { "line": 235, "column": 64 }, "end": { "line": 235, "column": 83 } }
          ]
        },
        "12": {
          "loc": { "start": { "line": 242, "column": 40 }, "end": { "line": 242, "column": 60 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 242, "column": 49 }, "end": { "line": 242, "column": 60 } }
          ]
        },
        "13": {
          "loc": { "start": { "line": 243, "column": 62 }, "end": { "line": 243, "column": 98 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 243, "column": 62 }, "end": { "line": 243, "column": 75 } },
            { "start": { "line": 243, "column": 79 }, "end": { "line": 243, "column": 98 } }
          ]
        },
        "14": {
          "loc": { "start": { "line": 253, "column": 6 }, "end": { "line": 269, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 253, "column": 6 }, "end": { "line": 269, "column": 7 } }
          ]
        },
        "15": {
          "loc": { "start": { "line": 257, "column": 47 }, "end": { "line": 257, "column": 83 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 257, "column": 47 }, "end": { "line": 257, "column": 60 } },
            { "start": { "line": 257, "column": 64 }, "end": { "line": 257, "column": 83 } }
          ]
        },
        "16": {
          "loc": { "start": { "line": 264, "column": 38 }, "end": { "line": 264, "column": 58 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 264, "column": 47 }, "end": { "line": 264, "column": 58 } }
          ]
        },
        "17": {
          "loc": { "start": { "line": 265, "column": 62 }, "end": { "line": 265, "column": 98 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 265, "column": 62 }, "end": { "line": 265, "column": 75 } },
            { "start": { "line": 265, "column": 79 }, "end": { "line": 265, "column": 98 } }
          ]
        },
        "18": {
          "loc": { "start": { "line": 276, "column": 6 }, "end": { "line": 292, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 276, "column": 6 }, "end": { "line": 292, "column": 7 } }
          ]
        },
        "19": {
          "loc": { "start": { "line": 280, "column": 47 }, "end": { "line": 280, "column": 83 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 280, "column": 47 }, "end": { "line": 280, "column": 60 } },
            { "start": { "line": 280, "column": 64 }, "end": { "line": 280, "column": 83 } }
          ]
        },
        "20": {
          "loc": { "start": { "line": 287, "column": 47 }, "end": { "line": 287, "column": 67 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 287, "column": 56 }, "end": { "line": 287, "column": 67 } }
          ]
        },
        "21": {
          "loc": { "start": { "line": 288, "column": 59 }, "end": { "line": 288, "column": 95 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 288, "column": 59 }, "end": { "line": 288, "column": 72 } },
            { "start": { "line": 288, "column": 76 }, "end": { "line": 288, "column": 95 } }
          ]
        },
        "22": {
          "loc": { "start": { "line": 297, "column": 6 }, "end": { "line": 314, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 297, "column": 6 }, "end": { "line": 314, "column": 7 } }
          ]
        },
        "23": {
          "loc": { "start": { "line": 301, "column": 47 }, "end": { "line": 301, "column": 83 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 301, "column": 47 }, "end": { "line": 301, "column": 60 } },
            { "start": { "line": 301, "column": 64 }, "end": { "line": 301, "column": 83 } }
          ]
        },
        "24": {
          "loc": { "start": { "line": 309, "column": 47 }, "end": { "line": 309, "column": 67 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 309, "column": 56 }, "end": { "line": 309, "column": 67 } }
          ]
        },
        "25": {
          "loc": { "start": { "line": 310, "column": 63 }, "end": { "line": 310, "column": 99 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 310, "column": 63 }, "end": { "line": 310, "column": 76 } },
            { "start": { "line": 310, "column": 80 }, "end": { "line": 310, "column": 99 } }
          ]
        },
        "26": {
          "loc": { "start": { "line": 322, "column": 45 }, "end": { "line": 322, "column": 81 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 322, "column": 45 }, "end": { "line": 322, "column": 58 } },
            { "start": { "line": 322, "column": 62 }, "end": { "line": 322, "column": 81 } }
          ]
        },
        "27": {
          "loc": { "start": { "line": 325, "column": 6 }, "end": { "line": 334, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 325, "column": 6 }, "end": { "line": 334, "column": 7 } }
          ]
        },
        "28": {
          "loc": { "start": { "line": 337, "column": 6 }, "end": { "line": 349, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 337, "column": 6 }, "end": { "line": 349, "column": 7 } }
          ]
        },
        "29": {
          "loc": { "start": { "line": 343, "column": 60 }, "end": { "line": 343, "column": 80 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 343, "column": 69 }, "end": { "line": 343, "column": 80 } }
          ]
        },
        "30": {
          "loc": { "start": { "line": 344, "column": 62 }, "end": { "line": 344, "column": 98 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 344, "column": 62 }, "end": { "line": 344, "column": 75 } },
            { "start": { "line": 344, "column": 79 }, "end": { "line": 344, "column": 98 } }
          ]
        },
        "31": {
          "loc": { "start": { "line": 382, "column": 36 }, "end": { "line": 382, "column": 46 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 382, "column": 44 }, "end": { "line": 382, "column": 46 } }
          ]
        },
        "32": {
          "loc": { "start": { "line": 388, "column": 41 }, "end": { "line": 388, "column": 51 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 388, "column": 49 }, "end": { "line": 388, "column": 51 } }
          ]
        }
      },
      "s": {
        "0": 4,
        "1": 4,
        "2": 4,
        "3": 4,
        "4": 4,
        "5": 4,
        "6": 4,
        "7": 4,
        "8": 4,
        "9": 4,
        "10": 31,
        "11": 31,
        "12": 31,
        "13": 31,
        "14": 31,
        "15": 31,
        "16": 3,
        "17": 3,
        "18": 3,
        "19": 1,
        "20": 1,
        "21": 1,
        "22": 2,
        "23": 31,
        "24": 31,
        "25": 40,
        "26": 5,
        "27": 5,
        "28": 5,
        "29": 31,
        "30": 31,
        "31": 31,
        "32": 31,
        "33": 31,
        "34": 31,
        "35": 31,
        "36": 3,
        "37": 3,
        "38": 1,
        "39": 2,
        "40": 2,
        "41": 31,
        "42": 3,
        "43": 3,
        "44": 1,
        "45": 2,
        "46": 2,
        "47": 31,
        "48": 21,
        "49": 21,
        "50": 1,
        "51": 20,
        "52": 20,
        "53": 20,
        "54": 20,
        "55": 20,
        "56": 154,
        "57": 20,
        "58": 22,
        "59": 22,
        "60": 22,
        "61": 22,
        "62": 7,
        "63": 7,
        "64": 7,
        "65": 7,
        "66": 2,
        "67": 2,
        "68": 7,
        "69": 5,
        "70": 5,
        "71": 5,
        "72": 5,
        "73": 5,
        "74": 5,
        "75": 5,
        "76": 5,
        "77": 5,
        "78": 5,
        "79": 5,
        "80": 3,
        "81": 3,
        "82": 5,
        "83": 2,
        "84": 2,
        "85": 2,
        "86": 2,
        "87": 1,
        "88": 1,
        "89": 2,
        "90": 3,
        "91": 3,
        "92": 3,
        "93": 3,
        "94": 3,
        "95": 3,
        "96": 3,
        "97": 3,
        "98": 3,
        "99": 3,
        "100": 8,
        "101": 8,
        "102": 8,
        "103": 0,
        "104": 0,
        "105": 0,
        "106": 0,
        "107": 1,
        "108": 1,
        "109": 1,
        "110": 0,
        "111": 0,
        "112": 0,
        "113": 1,
        "114": 1,
        "115": 1,
        "116": 3,
        "117": 3,
        "118": 3,
        "119": 2,
        "120": 2,
        "121": 2,
        "122": 7,
        "123": 7,
        "124": 7,
        "125": 20,
        "126": 20,
        "127": 20,
        "128": 16,
        "129": 2,
        "130": 1,
        "131": 1,
        "132": 4
      },
      "f": {
        "0": 3,
        "1": 1,
        "2": 2,
        "3": 40,
        "4": 5,
        "5": 5,
        "6": 5,
        "7": 31,
        "8": 3,
        "9": 3,
        "10": 21,
        "11": 154,
        "12": 22,
        "13": 7,
        "14": 2,
        "15": 5,
        "16": 5,
        "17": 5,
        "18": 3,
        "19": 2,
        "20": 1,
        "21": 3,
        "22": 3,
        "23": 8,
        "24": 0,
        "25": 0,
        "26": 1,
        "27": 0,
        "28": 1,
        "29": 3,
        "30": 2,
        "31": 7,
        "32": 20,
        "33": 16,
        "34": 2,
        "35": 1,
        "36": 1
      },
      "b": {
        "0": [4, 3],
        "1": [4, 3, 3],
        "2": [1],
        "3": [3, 2],
        "4": [5, 4],
        "5": [1],
        "6": [1],
        "7": [1],
        "8": [21, 1],
        "9": [20, 20],
        "10": [7],
        "11": [7, 6],
        "12": [2],
        "13": [2, 1],
        "14": [5],
        "15": [5, 1],
        "16": [5],
        "17": [5, 1],
        "18": [5],
        "19": [5, 4],
        "20": [1],
        "21": [3, 3],
        "22": [2],
        "23": [2, 1],
        "24": [1],
        "25": [1, 1],
        "26": [3, 1],
        "27": [3],
        "28": [3],
        "29": [3],
        "30": [3, 1],
        "31": [1],
        "32": [1]
      }
    },
    "/Users/sam/code/work/pepr/src/lib/core/module.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/core/module.ts",
      "statementMap": {
        "0": { "start": { "line": 3, "column": 0 }, "end": { "line": 3, "column": 30 } },
        "1": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 43 } },
        "2": { "start": { "line": 6, "column": 0 }, "end": { "line": 6, "column": 42 } },
        "3": { "start": { "line": 9, "column": 0 }, "end": { "line": 9, "column": 59 } },
        "4": { "start": { "line": 10, "column": 0 }, "end": { "line": 10, "column": 32 } },
        "5": { "start": { "line": 12, "column": 0 }, "end": { "line": 12, "column": 61 } },
        "6": { "start": { "line": 62, "column": 27 }, "end": { "line": 62, "column": 80 } },
        "7": { "start": { "line": 62, "column": 42 }, "end": { "line": 62, "column": 80 } },
        "8": { "start": { "line": 62, "column": 13 }, "end": { "line": 62, "column": 27 } },
        "9": { "start": { "line": 65, "column": 27 }, "end": { "line": 65, "column": 75 } },
        "10": { "start": { "line": 65, "column": 42 }, "end": { "line": 65, "column": 75 } },
        "11": { "start": { "line": 65, "column": 13 }, "end": { "line": 65, "column": 27 } },
        "12": { "start": { "line": 67, "column": 25 }, "end": { "line": 67, "column": 71 } },
        "13": { "start": { "line": 67, "column": 40 }, "end": { "line": 67, "column": 71 } },
        "14": { "start": { "line": 67, "column": 13 }, "end": { "line": 67, "column": 25 } },
        "15": { "start": { "line": 80, "column": 33 }, "end": { "line": 80, "column": 44 } },
        "16": { "start": { "line": 81, "column": 4 }, "end": { "line": 81, "column": 37 } },
        "17": { "start": { "line": 84, "column": 4 }, "end": { "line": 84, "column": 34 } },
        "18": { "start": { "line": 87, "column": 4 }, "end": { "line": 111, "column": 5 } },
        "19": { "start": { "line": 89, "column": 6 }, "end": { "line": 91, "column": 7 } },
        "20": { "start": { "line": 90, "column": 8 }, "end": { "line": 90, "column": 55 } },
        "21": { "start": { "line": 93, "column": 55 }, "end": { "line": 93, "column": 57 } },
        "22": { "start": { "line": 96, "column": 6 }, "end": { "line": 105, "column": 7 } },
        "23": { "start": { "line": 98, "column": 8 }, "end": { "line": 104, "column": 11 } },
        "24": { "start": { "line": 108, "column": 6 }, "end": { "line": 108, "column": 41 } },
        "25": { "start": { "line": 110, "column": 6 }, "end": { "line": 110, "column": 13 } },
        "26": { "start": { "line": 113, "column": 4 }, "end": { "line": 123, "column": 7 } },
        "27": { "start": { "line": 115, "column": 6 }, "end": { "line": 122, "column": 7 } },
        "28": { "start": { "line": 116, "column": 8 }, "end": { "line": 121, "column": 9 } },
        "29": { "start": { "line": 117, "column": 10 }, "end": { "line": 117, "column": 92 } },
        "30": { "start": { "line": 119, "column": 10 }, "end": { "line": 119, "column": 49 } },
        "31": { "start": { "line": 120, "column": 10 }, "end": { "line": 120, "column": 26 } },
        "32": { "start": { "line": 126, "column": 4 }, "end": { "line": 128, "column": 5 } },
        "33": { "start": { "line": 127, "column": 6 }, "end": { "line": 127, "column": 13 } },
        "34": { "start": { "line": 130, "column": 4 }, "end": { "line": 130, "column": 17 } },
        "35": { "start": { "line": 139, "column": 10 }, "end": { "line": 141, "column": 3 } },
        "36": { "start": { "line": 140, "column": 4 }, "end": { "line": 140, "column": 39 } },
        "37": { "start": { "line": 69, "column": 0 }, "end": { "line": 69, "column": 13 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 62, "column": 27 }, "end": { "line": 62, "column": 39 } },
          "loc": { "start": { "line": 62, "column": 42 }, "end": { "line": 62, "column": 80 } }
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 65, "column": 27 }, "end": { "line": 65, "column": 39 } },
          "loc": { "start": { "line": 65, "column": 42 }, "end": { "line": 65, "column": 75 } }
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 67, "column": 25 }, "end": { "line": 67, "column": 37 } },
          "loc": { "start": { "line": 67, "column": 40 }, "end": { "line": 67, "column": 71 } }
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 79, "column": 2 }, "end": { "line": 79, "column": 14 } },
          "loc": { "start": { "line": 79, "column": 111 }, "end": { "line": 131, "column": 3 } }
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 113, "column": 93 }, "end": { "line": 113, "column": 96 } },
          "loc": { "start": { "line": 113, "column": 98 }, "end": { "line": 123, "column": 5 } }
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 139, "column": 10 }, "end": { "line": 139, "column": 11 } },
          "loc": { "start": { "line": 139, "column": 32 }, "end": { "line": 141, "column": 3 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 79, "column": 50 }, "end": { "line": 79, "column": 81 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 79, "column": 79 }, "end": { "line": 79, "column": 81 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 79, "column": 83 }, "end": { "line": 79, "column": 111 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 79, "column": 109 }, "end": { "line": 79, "column": 111 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 87, "column": 4 }, "end": { "line": 111, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 87, "column": 4 }, "end": { "line": 111, "column": 5 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 89, "column": 6 }, "end": { "line": 91, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 89, "column": 6 }, "end": { "line": 91, "column": 7 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 115, "column": 6 }, "end": { "line": 122, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 115, "column": 6 }, "end": { "line": 122, "column": 7 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 115, "column": 10 }, "end": { "line": 115, "column": 38 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 115, "column": 10 }, "end": { "line": 115, "column": 23 } },
            { "start": { "line": 115, "column": 27 }, "end": { "line": 115, "column": 38 } }
          ]
        },
        "6": {
          "loc": { "start": { "line": 126, "column": 4 }, "end": { "line": 128, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 126, "column": 4 }, "end": { "line": 128, "column": 5 } }
          ]
        },
        "7": {
          "loc": { "start": { "line": 139, "column": 11 }, "end": { "line": 139, "column": 22 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 139, "column": 18 }, "end": { "line": 139, "column": 22 } }
          ]
        }
      },
      "s": {
        "0": 3,
        "1": 3,
        "2": 3,
        "3": 3,
        "4": 3,
        "5": 3,
        "6": 3,
        "7": 6,
        "8": 3,
        "9": 3,
        "10": 14,
        "11": 3,
        "12": 3,
        "13": 3,
        "14": 3,
        "15": 9,
        "16": 9,
        "17": 9,
        "18": 8,
        "19": 2,
        "20": 0,
        "21": 2,
        "22": 2,
        "23": 1,
        "24": 2,
        "25": 2,
        "26": 6,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 6,
        "33": 2,
        "34": 4,
        "35": 9,
        "36": 5,
        "37": 3
      },
      "f": { "0": 6, "1": 14, "2": 3, "3": 9, "4": 0, "5": 5 },
      "b": { "0": [6], "1": [7], "2": [2], "3": [0], "4": [0], "5": [0, 0], "6": [2], "7": [4] }
    },
    "/Users/sam/code/work/pepr/src/lib/controller/index.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/controller/index.ts",
      "statementMap": {
        "0": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 48 } },
        "1": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 20 } },
        "2": { "start": { "line": 6, "column": 0 }, "end": { "line": 6, "column": 26 } },
        "3": { "start": { "line": 10, "column": 0 }, "end": { "line": 10, "column": 38 } },
        "4": { "start": { "line": 11, "column": 0 }, "end": { "line": 11, "column": 74 } },
        "5": { "start": { "line": 12, "column": 0 }, "end": { "line": 12, "column": 59 } },
        "6": { "start": { "line": 13, "column": 0 }, "end": { "line": 13, "column": 65 } },
        "7": { "start": { "line": 14, "column": 0 }, "end": { "line": 14, "column": 69 } },
        "8": { "start": { "line": 15, "column": 0 }, "end": { "line": 15, "column": 42 } },
        "9": { "start": { "line": 17, "column": 0 }, "end": { "line": 17, "column": 81 } },
        "10": { "start": { "line": 19, "column": 0 }, "end": { "line": 21, "column": 1 } },
        "11": { "start": { "line": 20, "column": 2 }, "end": { "line": 20, "column": 40 } },
        "12": { "start": { "line": 25, "column": 13 }, "end": { "line": 25, "column": 18 } },
        "13": { "start": { "line": 28, "column": 22 }, "end": { "line": 28, "column": 38 } },
        "14": { "start": { "line": 31, "column": 11 }, "end": { "line": 31, "column": 13 } },
        "15": { "start": { "line": 34, "column": 18 }, "end": { "line": 34, "column": 27 } },
        "16": { "start": { "line": 49, "column": 4 }, "end": { "line": 49, "column": 26 } },
        "17": { "start": { "line": 50, "column": 4 }, "end": { "line": 50, "column": 38 } },
        "18": { "start": { "line": 53, "column": 4 }, "end": { "line": 61, "column": 7 } },
        "19": { "start": { "line": 54, "column": 6 }, "end": { "line": 54, "column": 28 } },
        "20": { "start": { "line": 55, "column": 6 }, "end": { "line": 55, "column": 27 } },
        "21": { "start": { "line": 56, "column": 6 }, "end": { "line": 56, "column": 48 } },
        "22": { "start": { "line": 58, "column": 6 }, "end": { "line": 60, "column": 9 } },
        "23": { "start": { "line": 59, "column": 8 }, "end": { "line": 59, "column": 43 } },
        "24": { "start": { "line": 64, "column": 4 }, "end": { "line": 64, "column": 38 } },
        "25": { "start": { "line": 67, "column": 4 }, "end": { "line": 67, "column": 50 } },
        "26": { "start": { "line": 69, "column": 4 }, "end": { "line": 72, "column": 5 } },
        "27": { "start": { "line": 70, "column": 6 }, "end": { "line": 70, "column": 50 } },
        "28": { "start": { "line": 71, "column": 6 }, "end": { "line": 71, "column": 36 } },
        "29": { "start": { "line": 74, "column": 4 }, "end": { "line": 77, "column": 5 } },
        "30": { "start": { "line": 75, "column": 6 }, "end": { "line": 75, "column": 48 } },
        "31": { "start": { "line": 76, "column": 6 }, "end": { "line": 76, "column": 34 } },
        "32": { "start": { "line": 81, "column": 16 }, "end": { "line": 134, "column": 3 } },
        "33": { "start": { "line": 82, "column": 4 }, "end": { "line": 84, "column": 5 } },
        "34": { "start": { "line": 83, "column": 6 }, "end": { "line": 83, "column": 105 } },
        "35": { "start": { "line": 87, "column": 20 }, "end": { "line": 90, "column": 6 } },
        "36": { "start": { "line": 93, "column": 4 }, "end": { "line": 101, "column": 5 } },
        "37": { "start": { "line": 95, "column": 6 }, "end": { "line": 95, "column": 108 } },
        "38": { "start": { "line": 96, "column": 6 }, "end": { "line": 96, "column": 50 } },
        "39": { "start": { "line": 98, "column": 6 }, "end": { "line": 100, "column": 7 } },
        "40": { "start": { "line": 99, "column": 8 }, "end": { "line": 99, "column": 47 } },
        "41": { "start": { "line": 104, "column": 19 }, "end": { "line": 104, "column": 70 } },
        "42": { "start": { "line": 107, "column": 4 }, "end": { "line": 111, "column": 7 } },
        "43": { "start": { "line": 108, "column": 6 }, "end": { "line": 108, "column": 51 } },
        "44": { "start": { "line": 110, "column": 6 }, "end": { "line": 110, "column": 27 } },
        "45": { "start": { "line": 114, "column": 4 }, "end": { "line": 124, "column": 7 } },
        "46": { "start": { "line": 115, "column": 6 }, "end": { "line": 123, "column": 7 } },
        "47": { "start": { "line": 116, "column": 8 }, "end": { "line": 118, "column": 10 } },
        "48": { "start": { "line": 119, "column": 8 }, "end": { "line": 122, "column": 17 } },
        "49": { "start": { "line": 120, "column": 10 }, "end": { "line": 120, "column": 25 } },
        "50": { "start": { "line": 121, "column": 10 }, "end": { "line": 121, "column": 30 } },
        "51": { "start": { "line": 127, "column": 4 }, "end": { "line": 133, "column": 7 } },
        "52": { "start": { "line": 128, "column": 6 }, "end": { "line": 128, "column": 51 } },
        "53": { "start": { "line": 129, "column": 6 }, "end": { "line": 132, "column": 9 } },
        "54": { "start": { "line": 130, "column": 8 }, "end": { "line": 130, "column": 34 } },
        "55": { "start": { "line": 131, "column": 8 }, "end": { "line": 131, "column": 24 } },
        "56": { "start": { "line": 136, "column": 19 }, "end": { "line": 155, "column": 3 } },
        "57": { "start": { "line": 138, "column": 4 }, "end": { "line": 138, "column": 51 } },
        "58": { "start": { "line": 141, "column": 4 }, "end": { "line": 141, "column": 45 } },
        "59": { "start": { "line": 143, "column": 4 }, "end": { "line": 145, "column": 5 } },
        "60": { "start": { "line": 144, "column": 6 }, "end": { "line": 144, "column": 13 } },
        "61": { "start": { "line": 148, "column": 4 }, "end": { "line": 148, "column": 79 } },
        "62": { "start": { "line": 151, "column": 4 }, "end": { "line": 151, "column": 67 } },
        "63": { "start": { "line": 154, "column": 4 }, "end": { "line": 154, "column": 71 } },
        "64": { "start": { "line": 165, "column": 19 }, "end": { "line": 178, "column": 3 } },
        "65": { "start": { "line": 167, "column": 22 }, "end": { "line": 167, "column": 32 } },
        "66": { "start": { "line": 168, "column": 4 }, "end": { "line": 174, "column": 5 } },
        "67": { "start": { "line": 169, "column": 18 }, "end": { "line": 169, "column": 81 } },
        "68": { "start": { "line": 170, "column": 6 }, "end": { "line": 170, "column": 20 } },
        "69": { "start": { "line": 171, "column": 6 }, "end": { "line": 171, "column": 32 } },
        "70": { "start": { "line": 172, "column": 6 }, "end": { "line": 172, "column": 37 } },
        "71": { "start": { "line": 173, "column": 6 }, "end": { "line": 173, "column": 13 } },
        "72": { "start": { "line": 177, "column": 4 }, "end": { "line": 177, "column": 11 } },
        "73": { "start": { "line": 186, "column": 13 }, "end": { "line": 195, "column": 3 } },
        "74": { "start": { "line": 187, "column": 4 }, "end": { "line": 194, "column": 5 } },
        "75": { "start": { "line": 189, "column": 6 }, "end": { "line": 189, "column": 59 } },
        "76": { "start": { "line": 190, "column": 6 }, "end": { "line": 190, "column": 58 } },
        "77": { "start": { "line": 192, "column": 6 }, "end": { "line": 192, "column": 46 } },
        "78": { "start": { "line": 193, "column": 6 }, "end": { "line": 193, "column": 52 } },
        "79": { "start": { "line": 203, "column": 18 }, "end": { "line": 255, "column": 3 } },
        "80": { "start": { "line": 207, "column": 4 }, "end": { "line": 254, "column": 6 } },
        "81": { "start": { "line": 209, "column": 24 }, "end": { "line": 209, "column": 55 } },
        "82": { "start": { "line": 211, "column": 6 }, "end": { "line": 253, "column": 7 } },
        "83": { "start": { "line": 213, "column": 42 }, "end": { "line": 213, "column": 87 } },
        "84": { "start": { "line": 215, "column": 41 }, "end": { "line": 219, "column": 10 } },
        "85": { "start": { "line": 221, "column": 28 }, "end": { "line": 221, "column": 65 } },
        "86": { "start": { "line": 222, "column": 8 }, "end": { "line": 222, "column": 107 } },
        "87": { "start": { "line": 223, "column": 8 }, "end": { "line": 223, "column": 72 } },
        "88": { "start": { "line": 226, "column": 8 }, "end": { "line": 226, "column": 60 } },
        "89": { "start": { "line": 230, "column": 10 }, "end": { "line": 232, "column": 93 } },
        "90": { "start": { "line": 235, "column": 8 }, "end": { "line": 238, "column": 11 } },
        "91": { "start": { "line": 236, "column": 10 }, "end": { "line": 236, "column": 50 } },
        "92": { "start": { "line": 237, "column": 10 }, "end": { "line": 237, "column": 62 } },
        "93": { "start": { "line": 241, "column": 10 }, "end": { "line": 243, "column": 69 } },
        "94": { "start": { "line": 245, "column": 8 }, "end": { "line": 245, "column": 96 } },
        "95": { "start": { "line": 246, "column": 8 }, "end": { "line": 246, "column": 22 } },
        "96": { "start": { "line": 248, "column": 8 }, "end": { "line": 248, "column": 68 } },
        "97": { "start": { "line": 250, "column": 8 }, "end": { "line": 250, "column": 68 } },
        "98": { "start": { "line": 251, "column": 8 }, "end": { "line": 251, "column": 54 } },
        "99": { "start": { "line": 252, "column": 8 }, "end": { "line": 252, "column": 39 } },
        "100": { "start": { "line": 265, "column": 22 }, "end": { "line": 265, "column": 32 } },
        "101": { "start": { "line": 267, "column": 4 }, "end": { "line": 283, "column": 7 } },
        "102": { "start": { "line": 268, "column": 29 }, "end": { "line": 268, "column": 53 } },
        "103": { "start": { "line": 269, "column": 6 }, "end": { "line": 271, "column": 7 } },
        "104": { "start": { "line": 270, "column": 8 }, "end": { "line": 270, "column": 15 } },
        "105": { "start": { "line": 273, "column": 26 }, "end": { "line": 273, "column": 48 } },
        "106": { "start": { "line": 274, "column": 22 }, "end": { "line": 280, "column": 8 } },
        "107": { "start": { "line": 282, "column": 6 }, "end": { "line": 282, "column": 24 } },
        "108": { "start": { "line": 285, "column": 4 }, "end": { "line": 285, "column": 11 } },
        "109": { "start": { "line": 294, "column": 4 }, "end": { "line": 299, "column": 5 } },
        "110": { "start": { "line": 295, "column": 6 }, "end": { "line": 295, "column": 21 } },
        "111": { "start": { "line": 297, "column": 6 }, "end": { "line": 297, "column": 54 } },
        "112": { "start": { "line": 298, "column": 6 }, "end": { "line": 298, "column": 52 } },
        "113": { "start": { "line": 23, "column": 0 }, "end": { "line": 23, "column": 13 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 42, "column": 2 }, "end": { "line": 42, "column": null } },
          "loc": { "start": { "line": 47, "column": 24 }, "end": { "line": 78, "column": 3 } }
        },
        "1": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 53, "column": 67 }, "end": { "line": 53, "column": 70 } },
          "loc": { "start": { "line": 53, "column": 72 }, "end": { "line": 61, "column": 5 } }
        },
        "2": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 58, "column": 72 }, "end": { "line": 58, "column": 75 } },
          "loc": { "start": { "line": 58, "column": 77 }, "end": { "line": 60, "column": 7 } }
        },
        "3": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 81, "column": 16 }, "end": { "line": 81, "column": 17 } },
          "loc": { "start": { "line": 81, "column": 39 }, "end": { "line": 134, "column": 3 } }
        },
        "4": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 107, "column": 27 }, "end": { "line": 107, "column": 30 } },
          "loc": { "start": { "line": 107, "column": 32 }, "end": { "line": 111, "column": 5 } }
        },
        "5": {
          "name": "(anonymous_6)",
          "decl": { "start": { "line": 114, "column": 23 }, "end": { "line": 114, "column": 24 } },
          "loc": { "start": { "line": 114, "column": 47 }, "end": { "line": 124, "column": 5 } }
        },
        "6": {
          "name": "(anonymous_7)",
          "decl": { "start": { "line": 119, "column": 19 }, "end": { "line": 119, "column": 22 } },
          "loc": { "start": { "line": 119, "column": 24 }, "end": { "line": 122, "column": 9 } }
        },
        "7": {
          "name": "(anonymous_8)",
          "decl": { "start": { "line": 127, "column": 26 }, "end": { "line": 127, "column": 29 } },
          "loc": { "start": { "line": 127, "column": 31 }, "end": { "line": 133, "column": 5 } }
        },
        "8": {
          "name": "(anonymous_9)",
          "decl": { "start": { "line": 129, "column": 19 }, "end": { "line": 129, "column": 22 } },
          "loc": { "start": { "line": 129, "column": 24 }, "end": { "line": 132, "column": 7 } }
        },
        "9": {
          "name": "(anonymous_10)",
          "decl": { "start": { "line": 136, "column": 19 }, "end": { "line": 136, "column": 28 } },
          "loc": { "start": { "line": 136, "column": 30 }, "end": { "line": 155, "column": 3 } }
        },
        "10": {
          "name": "(anonymous_11)",
          "decl": { "start": { "line": 165, "column": 19 }, "end": { "line": 165, "column": 20 } },
          "loc": { "start": { "line": 165, "column": 93 }, "end": { "line": 178, "column": 3 } }
        },
        "11": {
          "name": "(anonymous_12)",
          "decl": { "start": { "line": 186, "column": 13 }, "end": { "line": 186, "column": 18 } },
          "loc": { "start": { "line": 186, "column": 82 }, "end": { "line": 195, "column": 3 } }
        },
        "12": {
          "name": "(anonymous_13)",
          "decl": {
            "start": { "line": 203, "column": 18 },
            "end": { "line": 203, "column": null }
          },
          "loc": { "start": { "line": 205, "column": 72 }, "end": { "line": 255, "column": 3 } }
        },
        "13": {
          "name": "(anonymous_14)",
          "decl": { "start": { "line": 207, "column": 11 }, "end": { "line": 207, "column": 16 } },
          "loc": { "start": { "line": 207, "column": 65 }, "end": { "line": 254, "column": 5 } }
        },
        "14": {
          "name": "(anonymous_15)",
          "decl": { "start": { "line": 235, "column": 30 }, "end": { "line": 235, "column": 33 } },
          "loc": { "start": { "line": 235, "column": 36 }, "end": { "line": 238, "column": 9 } }
        },
        "15": {
          "name": "(anonymous_16)",
          "decl": { "start": { "line": 267, "column": 21 }, "end": { "line": 267, "column": 24 } },
          "loc": { "start": { "line": 267, "column": 26 }, "end": { "line": 283, "column": 5 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 19, "column": 0 }, "end": { "line": 21, "column": 1 } },
          "type": "if",
          "locations": [
            { "start": { "line": 19, "column": 0 }, "end": { "line": 21, "column": 1 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 55, "column": 6 }, "end": { "line": 55, "column": 26 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 55, "column": 6 }, "end": { "line": 55, "column": 13 } },
            { "start": { "line": 55, "column": 17 }, "end": { "line": 55, "column": 26 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 69, "column": 4 }, "end": { "line": 72, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 69, "column": 4 }, "end": { "line": 72, "column": 5 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 74, "column": 4 }, "end": { "line": 77, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 74, "column": 4 }, "end": { "line": 77, "column": 5 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 82, "column": 4 }, "end": { "line": 84, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 82, "column": 4 }, "end": { "line": 84, "column": 5 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 88, "column": 27 }, "end": { "line": 88, "column": 75 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 88, "column": 27 }, "end": { "line": 88, "column": 51 } },
            { "start": { "line": 88, "column": 55 }, "end": { "line": 88, "column": 75 } }
          ]
        },
        "6": {
          "loc": { "start": { "line": 89, "column": 28 }, "end": { "line": 89, "column": 77 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 89, "column": 28 }, "end": { "line": 89, "column": 53 } },
            { "start": { "line": 89, "column": 57 }, "end": { "line": 89, "column": 77 } }
          ]
        },
        "7": {
          "loc": { "start": { "line": 93, "column": 4 }, "end": { "line": 101, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 93, "column": 4 }, "end": { "line": 101, "column": 5 } }
          ]
        },
        "8": {
          "loc": { "start": { "line": 95, "column": 20 }, "end": { "line": 95, "column": 107 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 95, "column": 20 }, "end": { "line": 95, "column": 46 } },
            { "start": { "line": 95, "column": 50 }, "end": { "line": 95, "column": 107 } }
          ]
        },
        "9": {
          "loc": { "start": { "line": 98, "column": 6 }, "end": { "line": 100, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 98, "column": 6 }, "end": { "line": 100, "column": 7 } }
          ]
        },
        "10": {
          "loc": { "start": { "line": 115, "column": 6 }, "end": { "line": 123, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 115, "column": 6 }, "end": { "line": 123, "column": 7 } }
          ]
        },
        "11": {
          "loc": { "start": { "line": 143, "column": 4 }, "end": { "line": 145, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 143, "column": 4 }, "end": { "line": 145, "column": 5 } }
          ]
        },
        "12": {
          "loc": { "start": { "line": 168, "column": 4 }, "end": { "line": 174, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 168, "column": 4 }, "end": { "line": 174, "column": 5 } }
          ]
        },
        "13": {
          "loc": { "start": { "line": 213, "column": 42 }, "end": { "line": 213, "column": 87 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 213, "column": 42 }, "end": { "line": 213, "column": 59 } },
            { "start": { "line": 213, "column": 64 }, "end": { "line": 213, "column": 87 } }
          ]
        },
        "14": {
          "loc": { "start": { "line": 216, "column": 16 }, "end": { "line": 216, "column": 55 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 216, "column": 32 }, "end": { "line": 216, "column": 50 } },
            { "start": { "line": 216, "column": 53 }, "end": { "line": 216, "column": 55 } }
          ]
        },
        "15": {
          "loc": { "start": { "line": 217, "column": 21 }, "end": { "line": 217, "column": 45 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 217, "column": 21 }, "end": { "line": 217, "column": 39 } },
            { "start": { "line": 217, "column": 43 }, "end": { "line": 217, "column": 45 } }
          ]
        },
        "16": {
          "loc": { "start": { "line": 218, "column": 15 }, "end": { "line": 218, "column": 68 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 218, "column": 15 }, "end": { "line": 218, "column": 28 } },
            { "start": { "line": 218, "column": 32 }, "end": { "line": 218, "column": 68 } }
          ]
        },
        "17": {
          "loc": { "start": { "line": 226, "column": 8 }, "end": { "line": 226, "column": 59 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 226, "column": 8 }, "end": { "line": 226, "column": 24 } },
            { "start": { "line": 226, "column": 28 }, "end": { "line": 226, "column": 59 } }
          ]
        },
        "18": {
          "loc": { "start": { "line": 226, "column": 45 }, "end": { "line": 226, "column": 58 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 226, "column": 45 }, "end": { "line": 226, "column": 52 } },
            { "start": { "line": 226, "column": 56 }, "end": { "line": 226, "column": 58 } }
          ]
        },
        "19": {
          "loc": { "start": { "line": 230, "column": 10 }, "end": { "line": 232, "column": 93 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 231, "column": 14 }, "end": { "line": 231, "column": 91 } },
            { "start": { "line": 232, "column": 14 }, "end": { "line": 232, "column": 93 } }
          ]
        },
        "20": {
          "loc": { "start": { "line": 236, "column": 10 }, "end": { "line": 236, "column": 49 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 236, "column": 10 }, "end": { "line": 236, "column": 25 } },
            { "start": { "line": 236, "column": 29 }, "end": { "line": 236, "column": 49 } }
          ]
        },
        "21": {
          "loc": { "start": { "line": 241, "column": 10 }, "end": { "line": 243, "column": 69 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 242, "column": 14 }, "end": { "line": 242, "column": 54 } },
            { "start": { "line": 243, "column": 14 }, "end": { "line": 243, "column": 69 } }
          ]
        },
        "22": {
          "loc": { "start": { "line": 269, "column": 6 }, "end": { "line": 271, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 269, "column": 6 }, "end": { "line": 271, "column": 7 } }
          ]
        }
      },
      "s": {
        "0": 2,
        "1": 2,
        "2": 2,
        "3": 2,
        "4": 2,
        "5": 2,
        "6": 2,
        "7": 2,
        "8": 2,
        "9": 2,
        "10": 2,
        "11": 2,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0,
        "47": 0,
        "48": 0,
        "49": 0,
        "50": 0,
        "51": 0,
        "52": 0,
        "53": 0,
        "54": 0,
        "55": 0,
        "56": 0,
        "57": 0,
        "58": 0,
        "59": 0,
        "60": 0,
        "61": 0,
        "62": 0,
        "63": 0,
        "64": 0,
        "65": 0,
        "66": 0,
        "67": 0,
        "68": 0,
        "69": 0,
        "70": 0,
        "71": 0,
        "72": 0,
        "73": 0,
        "74": 0,
        "75": 0,
        "76": 0,
        "77": 0,
        "78": 0,
        "79": 0,
        "80": 0,
        "81": 0,
        "82": 0,
        "83": 0,
        "84": 0,
        "85": 0,
        "86": 0,
        "87": 0,
        "88": 0,
        "89": 0,
        "90": 0,
        "91": 0,
        "92": 0,
        "93": 0,
        "94": 0,
        "95": 0,
        "96": 0,
        "97": 0,
        "98": 0,
        "99": 0,
        "100": 0,
        "101": 0,
        "102": 0,
        "103": 0,
        "104": 0,
        "105": 0,
        "106": 0,
        "107": 0,
        "108": 0,
        "109": 0,
        "110": 0,
        "111": 0,
        "112": 0,
        "113": 2
      },
      "f": {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0
      },
      "b": {
        "0": [2],
        "1": [0, 0],
        "2": [0],
        "3": [0],
        "4": [0],
        "5": [0, 0],
        "6": [0, 0],
        "7": [0],
        "8": [0, 0],
        "9": [0],
        "10": [0],
        "11": [0],
        "12": [0],
        "13": [0, 0],
        "14": [0, 0],
        "15": [0, 0],
        "16": [0, 0],
        "17": [0, 0],
        "18": [0, 0],
        "19": [0, 0],
        "20": [0, 0],
        "21": [0, 0],
        "22": [0]
      }
    },
    "/Users/sam/code/work/pepr/src/lib/telemetry/metrics.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/telemetry/metrics.ts",
      "statementMap": {
        "0": { "start": { "line": 6, "column": 0 }, "end": { "line": 6, "column": 41 } },
        "1": { "start": { "line": 7, "column": 0 }, "end": { "line": 7, "column": 76 } },
        "2": { "start": { "line": 8, "column": 0 }, "end": { "line": 8, "column": 27 } },
        "3": { "start": { "line": 10, "column": 22 }, "end": { "line": 10, "column": 40 } },
        "4": { "start": { "line": 34, "column": 44 }, "end": { "line": 34, "column": 53 } },
        "5": { "start": { "line": 35, "column": 40 }, "end": { "line": 35, "column": 49 } },
        "6": { "start": { "line": 36, "column": 45 }, "end": { "line": 36, "column": 54 } },
        "7": { "start": { "line": 38, "column": 43 }, "end": { "line": 38, "column": 52 } },
        "8": { "start": { "line": 40, "column": 30 }, "end": { "line": 47, "column": 4 } },
        "9": { "start": { "line": 54, "column": 4 }, "end": { "line": 54, "column": 36 } },
        "10": { "start": { "line": 55, "column": 4 }, "end": { "line": 55, "column": 26 } },
        "11": { "start": { "line": 56, "column": 4 }, "end": { "line": 56, "column": 86 } },
        "12": { "start": { "line": 57, "column": 4 }, "end": { "line": 57, "column": 90 } },
        "13": { "start": { "line": 58, "column": 4 }, "end": { "line": 58, "column": 76 } },
        "14": { "start": { "line": 59, "column": 4 }, "end": { "line": 59, "column": 80 } },
        "15": { "start": { "line": 60, "column": 4 }, "end": { "line": 60, "column": 96 } },
        "16": { "start": { "line": 61, "column": 4 }, "end": { "line": 61, "column": 110 } },
        "17": { "start": { "line": 64, "column": 19 }, "end": { "line": 64, "column": 70 } },
        "18": { "start": { "line": 64, "column": 45 }, "end": { "line": 64, "column": 70 } },
        "19": { "start": { "line": 66, "column": 15 }, "end": { "line": 86, "column": 3 } },
        "20": { "start": { "line": 73, "column": 4 }, "end": { "line": 76, "column": 5 } },
        "21": { "start": { "line": 74, "column": 6 }, "end": { "line": 74, "column": 68 } },
        "22": { "start": { "line": 75, "column": 6 }, "end": { "line": 75, "column": 13 } },
        "23": { "start": { "line": 78, "column": 19 }, "end": { "line": 83, "column": 6 } },
        "24": { "start": { "line": 85, "column": 4 }, "end": { "line": 85, "column": 54 } },
        "25": { "start": { "line": 88, "column": 15 }, "end": { "line": 90, "column": 3 } },
        "26": { "start": { "line": 89, "column": 4 }, "end": { "line": 89, "column": 72 } },
        "27": { "start": { "line": 92, "column": 15 }, "end": { "line": 94, "column": 3 } },
        "28": { "start": { "line": 93, "column": 4 }, "end": { "line": 93, "column": 73 } },
        "29": { "start": { "line": 96, "column": 13 }, "end": { "line": 98, "column": 3 } },
        "30": { "start": { "line": 97, "column": 4 }, "end": { "line": 97, "column": 76 } },
        "31": { "start": { "line": 100, "column": 15 }, "end": { "line": 102, "column": 3 } },
        "32": { "start": { "line": 101, "column": 4 }, "end": { "line": 101, "column": 57 } },
        "33": { "start": { "line": 104, "column": 13 }, "end": { "line": 106, "column": 3 } },
        "34": { "start": { "line": 105, "column": 4 }, "end": { "line": 105, "column": 74 } },
        "35": { "start": { "line": 111, "column": 10 }, "end": { "line": 111, "column": 63 } },
        "36": { "start": { "line": 111, "column": 22 }, "end": { "line": 111, "column": 63 } },
        "37": { "start": { "line": 116, "column": 10 }, "end": { "line": 116, "column": 63 } },
        "38": { "start": { "line": 116, "column": 22 }, "end": { "line": 116, "column": 63 } },
        "39": { "start": { "line": 123, "column": 15 }, "end": { "line": 125, "column": 3 } },
        "40": { "start": { "line": 124, "column": 4 }, "end": { "line": 124, "column": 91 } },
        "41": { "start": { "line": 131, "column": 15 }, "end": { "line": 131, "column": 62 } },
        "42": { "start": { "line": 131, "column": 38 }, "end": { "line": 131, "column": 62 } },
        "43": { "start": { "line": 138, "column": 4 }, "end": { "line": 138, "column": 29 } },
        "44": { "start": { "line": 145, "column": 17 }, "end": { "line": 147, "column": 3 } },
        "45": { "start": { "line": 146, "column": 4 }, "end": { "line": 146, "column": 59 } },
        "46": { "start": { "line": 153, "column": 18 }, "end": { "line": 155, "column": 3 } },
        "47": { "start": { "line": 154, "column": 4 }, "end": { "line": 154, "column": 67 } },
        "48": { "start": { "line": 161, "column": 24 }, "end": { "line": 165, "column": 3 } },
        "49": { "start": { "line": 162, "column": 4 }, "end": { "line": 162, "column": 33 } },
        "50": { "start": { "line": 163, "column": 4 }, "end": { "line": 163, "column": 91 } },
        "51": { "start": { "line": 164, "column": 4 }, "end": { "line": 164, "column": 42 } },
        "52": { "start": { "line": 170, "column": 26 }, "end": { "line": 182, "column": 3 } },
        "53": { "start": { "line": 171, "column": 32 }, "end": { "line": 173, "column": 17 } },
        "54": { "start": { "line": 175, "column": 4 }, "end": { "line": 181, "column": 5 } },
        "55": { "start": { "line": 176, "column": 23 }, "end": { "line": 176, "column": 65 } },
        "56": { "start": { "line": 177, "column": 6 }, "end": { "line": 179, "column": 7 } },
        "57": { "start": { "line": 178, "column": 8 }, "end": { "line": 178, "column": 48 } },
        "58": { "start": { "line": 180, "column": 6 }, "end": { "line": 180, "column": 103 } },
        "59": { "start": { "line": 32, "column": 0 }, "end": { "line": 32, "column": 13 } },
        "60": { "start": { "line": 185, "column": 13 }, "end": { "line": 185, "column": 87 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_10)",
          "decl": { "start": { "line": 53, "column": 2 }, "end": { "line": 53, "column": 14 } },
          "loc": { "start": { "line": 53, "column": 29 }, "end": { "line": 62, "column": 3 } }
        },
        "1": {
          "name": "(anonymous_11)",
          "decl": { "start": { "line": 64, "column": 19 }, "end": { "line": 64, "column": 20 } },
          "loc": { "start": { "line": 64, "column": 45 }, "end": { "line": 64, "column": 70 } }
        },
        "2": {
          "name": "(anonymous_12)",
          "decl": { "start": { "line": 66, "column": 15 }, "end": { "line": 66, "column": null } },
          "loc": { "start": { "line": 72, "column": 12 }, "end": { "line": 86, "column": 3 } }
        },
        "3": {
          "name": "(anonymous_13)",
          "decl": { "start": { "line": 88, "column": 15 }, "end": { "line": 88, "column": 16 } },
          "loc": { "start": { "line": 88, "column": 52 }, "end": { "line": 90, "column": 3 } }
        },
        "4": {
          "name": "(anonymous_14)",
          "decl": { "start": { "line": 92, "column": 15 }, "end": { "line": 92, "column": 16 } },
          "loc": { "start": { "line": 92, "column": 52 }, "end": { "line": 94, "column": 3 } }
        },
        "5": {
          "name": "(anonymous_15)",
          "decl": { "start": { "line": 96, "column": 13 }, "end": { "line": 96, "column": 14 } },
          "loc": { "start": { "line": 96, "column": 73 }, "end": { "line": 98, "column": 3 } }
        },
        "6": {
          "name": "(anonymous_16)",
          "decl": { "start": { "line": 100, "column": 15 }, "end": { "line": 100, "column": 16 } },
          "loc": { "start": { "line": 100, "column": 38 }, "end": { "line": 102, "column": 3 } }
        },
        "7": {
          "name": "(anonymous_17)",
          "decl": { "start": { "line": 104, "column": 13 }, "end": { "line": 104, "column": 14 } },
          "loc": { "start": { "line": 104, "column": 88 }, "end": { "line": 106, "column": 3 } }
        },
        "8": {
          "name": "(anonymous_18)",
          "decl": { "start": { "line": 111, "column": 10 }, "end": { "line": 111, "column": 19 } },
          "loc": { "start": { "line": 111, "column": 22 }, "end": { "line": 111, "column": 63 } }
        },
        "9": {
          "name": "(anonymous_19)",
          "decl": { "start": { "line": 116, "column": 10 }, "end": { "line": 116, "column": 19 } },
          "loc": { "start": { "line": 116, "column": 22 }, "end": { "line": 116, "column": 63 } }
        },
        "10": {
          "name": "(anonymous_20)",
          "decl": { "start": { "line": 123, "column": 15 }, "end": { "line": 123, "column": 16 } },
          "loc": { "start": { "line": 123, "column": 84 }, "end": { "line": 125, "column": 3 } }
        },
        "11": {
          "name": "(anonymous_21)",
          "decl": { "start": { "line": 131, "column": 15 }, "end": { "line": 131, "column": 35 } },
          "loc": { "start": { "line": 131, "column": 38 }, "end": { "line": 131, "column": 62 } }
        },
        "12": {
          "name": "(anonymous_22)",
          "decl": { "start": { "line": 137, "column": 2 }, "end": { "line": 137, "column": 8 } },
          "loc": { "start": { "line": 137, "column": 21 }, "end": { "line": 139, "column": 3 } }
        },
        "13": {
          "name": "(anonymous_23)",
          "decl": { "start": { "line": 145, "column": 17 }, "end": { "line": 145, "column": 18 } },
          "loc": { "start": { "line": 145, "column": 42 }, "end": { "line": 147, "column": 3 } }
        },
        "14": {
          "name": "(anonymous_24)",
          "decl": { "start": { "line": 153, "column": 18 }, "end": { "line": 153, "column": 19 } },
          "loc": { "start": { "line": 153, "column": 42 }, "end": { "line": 155, "column": 3 } }
        },
        "15": {
          "name": "(anonymous_25)",
          "decl": { "start": { "line": 161, "column": 24 }, "end": { "line": 161, "column": 25 } },
          "loc": { "start": { "line": 161, "column": 49 }, "end": { "line": 165, "column": 3 } }
        },
        "16": {
          "name": "(anonymous_26)",
          "decl": { "start": { "line": 170, "column": 26 }, "end": { "line": 170, "column": 35 } },
          "loc": { "start": { "line": 170, "column": 37 }, "end": { "line": 182, "column": 3 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 53, "column": 14 }, "end": { "line": 53, "column": 29 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 53, "column": 23 }, "end": { "line": 53, "column": 29 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 73, "column": 4 }, "end": { "line": 76, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 73, "column": 4 }, "end": { "line": 76, "column": 5 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 104, "column": 61 }, "end": { "line": 104, "column": 78 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 104, "column": 77 }, "end": { "line": 104, "column": 78 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 105, "column": 53 }, "end": { "line": 105, "column": 65 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 105, "column": 53 }, "end": { "line": 105, "column": 59 } },
            { "start": { "line": 105, "column": 63 }, "end": { "line": 105, "column": 65 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 123, "column": 35 }, "end": { "line": 123, "column": 74 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 123, "column": 50 }, "end": { "line": 123, "column": 74 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 171, "column": 32 }, "end": { "line": 173, "column": 17 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 172, "column": 8 }, "end": { "line": 172, "column": 61 } },
            { "start": { "line": 173, "column": 8 }, "end": { "line": 173, "column": 17 } }
          ]
        },
        "6": {
          "loc": { "start": { "line": 175, "column": 4 }, "end": { "line": 181, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 175, "column": 4 }, "end": { "line": 181, "column": 5 } }
          ]
        },
        "7": {
          "loc": { "start": { "line": 175, "column": 8 }, "end": { "line": 175, "column": 95 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 175, "column": 8 }, "end": { "line": 175, "column": 41 } },
            { "start": { "line": 175, "column": 45 }, "end": { "line": 175, "column": 95 } }
          ]
        },
        "8": {
          "loc": { "start": { "line": 177, "column": 6 }, "end": { "line": 179, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 177, "column": 6 }, "end": { "line": 179, "column": 7 } }
          ]
        }
      },
      "s": {
        "0": 4,
        "1": 4,
        "2": 4,
        "3": 4,
        "4": 13,
        "5": 13,
        "6": 13,
        "7": 13,
        "8": 13,
        "9": 13,
        "10": 13,
        "11": 13,
        "12": 13,
        "13": 13,
        "14": 13,
        "15": 13,
        "16": 13,
        "17": 13,
        "18": 264,
        "19": 13,
        "20": 82,
        "21": 2,
        "22": 2,
        "23": 80,
        "24": 80,
        "25": 13,
        "26": 28,
        "27": 13,
        "28": 28,
        "29": 13,
        "30": 26,
        "31": 13,
        "32": 3,
        "33": 13,
        "34": 2,
        "35": 13,
        "36": 1,
        "37": 13,
        "38": 1,
        "39": 13,
        "40": 5,
        "41": 13,
        "42": 11,
        "43": 3,
        "44": 13,
        "45": 1,
        "46": 13,
        "47": 1,
        "48": 13,
        "49": 8,
        "50": 8,
        "51": 8,
        "52": 13,
        "53": 8,
        "54": 8,
        "55": 4,
        "56": 4,
        "57": 4,
        "58": 4,
        "59": 4,
        "60": 4
      },
      "f": {
        "0": 13,
        "1": 264,
        "2": 82,
        "3": 28,
        "4": 28,
        "5": 26,
        "6": 3,
        "7": 2,
        "8": 1,
        "9": 1,
        "10": 5,
        "11": 11,
        "12": 3,
        "13": 1,
        "14": 1,
        "15": 8,
        "16": 8
      },
      "b": {
        "0": [1],
        "1": [2],
        "2": [2],
        "3": [2, 0],
        "4": [1],
        "5": [7, 1],
        "6": [4],
        "7": [8, 7],
        "8": [4]
      }
    },
    "/Users/sam/code/work/pepr/src/lib/processors/mutate-processor.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/processors/mutate-processor.ts",
      "statementMap": {
        "0": { "start": { "line": 35, "column": 0 }, "end": { "line": 35, "column": 16 } },
        "1": { "start": { "line": 50, "column": 0 }, "end": { "line": 50, "column": 16 } },
        "2": { "start": { "line": 62, "column": 0 }, "end": { "line": 62, "column": 16 } },
        "3": { "start": { "line": 77, "column": 0 }, "end": { "line": 77, "column": 16 } },
        "4": { "start": { "line": 89, "column": 0 }, "end": { "line": 89, "column": 7 } },
        "5": { "start": { "line": 136, "column": 0 }, "end": { "line": 136, "column": 7 } },
        "6": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 40 } },
        "7": { "start": { "line": 6, "column": 0 }, "end": { "line": 6, "column": 30 } },
        "8": { "start": { "line": 9, "column": 0 }, "end": { "line": 9, "column": 53 } },
        "9": { "start": { "line": 12, "column": 0 }, "end": { "line": 12, "column": 38 } },
        "10": { "start": { "line": 14, "column": 0 }, "end": { "line": 14, "column": 54 } },
        "11": { "start": { "line": 15, "column": 0 }, "end": { "line": 15, "column": 82 } },
        "12": { "start": { "line": 16, "column": 0 }, "end": { "line": 16, "column": 47 } },
        "13": { "start": { "line": 17, "column": 0 }, "end": { "line": 17, "column": 61 } },
        "14": { "start": { "line": 42, "column": 2 }, "end": { "line": 44, "column": 3 } },
        "15": { "start": { "line": 43, "column": 4 }, "end": { "line": 43, "column": 19 } },
        "16": { "start": { "line": 45, "column": 2 }, "end": { "line": 45, "column": 67 } },
        "17": { "start": { "line": 47, "column": 2 }, "end": { "line": 47, "column": 17 } },
        "18": { "start": { "line": 51, "column": 2 }, "end": { "line": 59, "column": 3 } },
        "19": { "start": { "line": 52, "column": 4 }, "end": { "line": 56, "column": 5 } },
        "20": { "start": { "line": 53, "column": 6 }, "end": { "line": 53, "column": 23 } },
        "21": { "start": { "line": 55, "column": 6 }, "end": { "line": 55, "column": 65 } },
        "22": { "start": { "line": 58, "column": 4 }, "end": { "line": 58, "column": 55 } },
        "23": { "start": { "line": 66, "column": 26 }, "end": { "line": 66, "column": 28 } },
        "24": { "start": { "line": 68, "column": 19 }, "end": { "line": 68, "column": 98 } },
        "25": { "start": { "line": 69, "column": 2 }, "end": { "line": 72, "column": 3 } },
        "26": { "start": { "line": 71, "column": 4 }, "end": { "line": 71, "column": 74 } },
        "27": { "start": { "line": 74, "column": 2 }, "end": { "line": 74, "column": 30 } },
        "28": { "start": { "line": 78, "column": 22 }, "end": { "line": 78, "column": 40 } },
        "29": { "start": { "line": 80, "column": 19 }, "end": { "line": 80, "column": 98 } },
        "30": { "start": { "line": 81, "column": 2 }, "end": { "line": 84, "column": 3 } },
        "31": { "start": { "line": 83, "column": 4 }, "end": { "line": 83, "column": 71 } },
        "32": { "start": { "line": 86, "column": 2 }, "end": { "line": 86, "column": 21 } },
        "33": { "start": { "line": 94, "column": 45 }, "end": { "line": 94, "column": 53 } },
        "34": { "start": { "line": 96, "column": 16 }, "end": { "line": 96, "column": 44 } },
        "35": { "start": { "line": 97, "column": 2 }, "end": { "line": 97, "column": 61 } },
        "36": { "start": { "line": 99, "column": 2 }, "end": { "line": 99, "column": 59 } },
        "37": { "start": { "line": 101, "column": 2 }, "end": { "line": 130, "column": 3 } },
        "38": { "start": { "line": 103, "column": 4 }, "end": { "line": 103, "column": 43 } },
        "39": { "start": { "line": 106, "column": 4 }, "end": { "line": 106, "column": 62 } },
        "40": { "start": { "line": 109, "column": 4 }, "end": { "line": 109, "column": 63 } },
        "41": { "start": { "line": 111, "column": 4 }, "end": { "line": 111, "column": 61 } },
        "42": { "start": { "line": 112, "column": 4 }, "end": { "line": 112, "column": 48 } },
        "43": { "start": { "line": 114, "column": 25 }, "end": { "line": 114, "column": 49 } },
        "44": { "start": { "line": 117, "column": 4 }, "end": { "line": 117, "column": 57 } },
        "45": { "start": { "line": 118, "column": 4 }, "end": { "line": 118, "column": 61 } },
        "46": { "start": { "line": 120, "column": 4 }, "end": { "line": 129, "column": 5 } },
        "47": { "start": { "line": 122, "column": 8 }, "end": { "line": 122, "column": 70 } },
        "48": { "start": { "line": 123, "column": 8 }, "end": { "line": 123, "column": 14 } },
        "49": { "start": { "line": 126, "column": 8 }, "end": { "line": 126, "column": 68 } },
        "50": { "start": { "line": 127, "column": 8 }, "end": { "line": 127, "column": 81 } },
        "51": { "start": { "line": 128, "column": 8 }, "end": { "line": 128, "column": 14 } },
        "52": { "start": { "line": 132, "column": 2 }, "end": { "line": 132, "column": 31 } },
        "53": { "start": { "line": 142, "column": 33 }, "end": { "line": 146, "column": 4 } },
        "54": { "start": { "line": 148, "column": 18 }, "end": { "line": 148, "column": 56 } },
        "55": { "start": { "line": 149, "column": 16 }, "end": { "line": 149, "column": 31 } },
        "56": { "start": { "line": 151, "column": 2 }, "end": { "line": 151, "column": 46 } },
        "57": { "start": { "line": 153, "column": 30 }, "end": { "line": 161, "column": null } },
        "58": { "start": { "line": 154, "column": 4 }, "end": { "line": 161, "column": 7 } },
        "59": { "start": { "line": 154, "column": 31 }, "end": { "line": 161, "column": 6 } },
        "60": { "start": { "line": 164, "column": 2 }, "end": { "line": 181, "column": 5 } },
        "61": { "start": { "line": 165, "column": 4 }, "end": { "line": 167, "column": 5 } },
        "62": { "start": { "line": 166, "column": 6 }, "end": { "line": 166, "column": 19 } },
        "63": { "start": { "line": 169, "column": 23 }, "end": { "line": 173, "column": null } },
        "64": { "start": { "line": 175, "column": 4 }, "end": { "line": 178, "column": 5 } },
        "65": { "start": { "line": 176, "column": 6 }, "end": { "line": 176, "column": 28 } },
        "66": { "start": { "line": 177, "column": 6 }, "end": { "line": 177, "column": 19 } },
        "67": { "start": { "line": 180, "column": 4 }, "end": { "line": 180, "column": 16 } },
        "68": { "start": { "line": 183, "column": 2 }, "end": { "line": 188, "column": 3 } },
        "69": { "start": { "line": 184, "column": 4 }, "end": { "line": 184, "column": 80 } },
        "70": { "start": { "line": 185, "column": 4 }, "end": { "line": 187, "column": 5 } },
        "71": { "start": { "line": 186, "column": 6 }, "end": { "line": 186, "column": 22 } },
        "72": { "start": { "line": 191, "column": 2 }, "end": { "line": 191, "column": 26 } },
        "73": { "start": { "line": 194, "column": 2 }, "end": { "line": 197, "column": 3 } },
        "74": { "start": { "line": 195, "column": 4 }, "end": { "line": 195, "column": 55 } },
        "75": { "start": { "line": 196, "column": 4 }, "end": { "line": 196, "column": 20 } },
        "76": { "start": { "line": 200, "column": 2 }, "end": { "line": 202, "column": 3 } },
        "77": { "start": { "line": 201, "column": 4 }, "end": { "line": 201, "column": 20 } },
        "78": { "start": { "line": 205, "column": 22 }, "end": { "line": 205, "column": 60 } },
        "79": { "start": { "line": 208, "column": 18 }, "end": { "line": 208, "column": 60 } },
        "80": { "start": { "line": 211, "column": 2 }, "end": { "line": 216, "column": 3 } },
        "81": { "start": { "line": 212, "column": 4 }, "end": { "line": 212, "column": 37 } },
        "82": { "start": { "line": 215, "column": 4 }, "end": { "line": 215, "column": 59 } },
        "83": { "start": { "line": 219, "column": 2 }, "end": { "line": 221, "column": 3 } },
        "84": { "start": { "line": 220, "column": 4 }, "end": { "line": 220, "column": 29 } },
        "85": { "start": { "line": 223, "column": 2 }, "end": { "line": 223, "column": 62 } },
        "86": { "start": { "line": 225, "column": 2 }, "end": { "line": 225, "column": 18 } }
      },
      "fnMap": {
        "0": {
          "name": "updateStatus",
          "decl": { "start": { "line": 35, "column": 16 }, "end": { "line": 35, "column": 28 } },
          "loc": { "start": { "line": 39, "column": 16 }, "end": { "line": 48, "column": 1 } }
        },
        "1": {
          "name": "logMutateErrorMessage",
          "decl": { "start": { "line": 50, "column": 16 }, "end": { "line": 50, "column": 37 } },
          "loc": { "start": { "line": 50, "column": 46 }, "end": { "line": 60, "column": 1 } }
        },
        "2": {
          "name": "decodeData",
          "decl": { "start": { "line": 62, "column": 16 }, "end": { "line": 62, "column": 26 } },
          "loc": { "start": { "line": 62, "column": 71 }, "end": { "line": 75, "column": 1 } }
        },
        "3": {
          "name": "reencodeData",
          "decl": { "start": { "line": 77, "column": 16 }, "end": { "line": 77, "column": 28 } },
          "loc": { "start": { "line": 77, "column": 92 }, "end": { "line": 87, "column": 1 } }
        },
        "4": {
          "name": "processRequest",
          "decl": { "start": { "line": 89, "column": 22 }, "end": { "line": 89, "column": 36 } },
          "loc": { "start": { "line": 92, "column": 26 }, "end": { "line": 133, "column": 1 } }
        },
        "5": {
          "name": "mutateProcessor",
          "decl": { "start": { "line": 136, "column": 22 }, "end": { "line": 136, "column": 37 } },
          "loc": { "start": { "line": 140, "column": 37 }, "end": { "line": 226, "column": 1 } }
        },
        "6": {
          "name": "(anonymous_7)",
          "decl": { "start": { "line": 153, "column": 51 }, "end": { "line": 153, "column": 55 } },
          "loc": { "start": { "line": 154, "column": 4 }, "end": { "line": 161, "column": 7 } }
        },
        "7": {
          "name": "(anonymous_8)",
          "decl": { "start": { "line": 154, "column": 22 }, "end": { "line": 154, "column": 26 } },
          "loc": { "start": { "line": 154, "column": 31 }, "end": { "line": 161, "column": 6 } }
        },
        "8": {
          "name": "(anonymous_9)",
          "decl": { "start": { "line": 164, "column": 31 }, "end": { "line": 164, "column": 35 } },
          "loc": { "start": { "line": 164, "column": 38 }, "end": { "line": 181, "column": 3 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 42, "column": 2 }, "end": { "line": 44, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 42, "column": 2 }, "end": { "line": 44, "column": 3 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 52, "column": 4 }, "end": { "line": 56, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 52, "column": 4 }, "end": { "line": 56, "column": 5 } },
            { "start": { "line": 54, "column": 11 }, "end": { "line": 56, "column": 5 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 52, "column": 8 }, "end": { "line": 52, "column": 52 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 52, "column": 8 }, "end": { "line": 52, "column": 17 } },
            { "start": { "line": 52, "column": 21 }, "end": { "line": 52, "column": 52 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 68, "column": 19 }, "end": { "line": 68, "column": 98 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 68, "column": 19 }, "end": { "line": 68, "column": 56 } },
            { "start": { "line": 68, "column": 60 }, "end": { "line": 68, "column": 98 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 69, "column": 2 }, "end": { "line": 72, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 69, "column": 2 }, "end": { "line": 72, "column": 3 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 80, "column": 19 }, "end": { "line": 80, "column": 98 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 80, "column": 19 }, "end": { "line": 80, "column": 56 } },
            { "start": { "line": 80, "column": 60 }, "end": { "line": 80, "column": 98 } }
          ]
        },
        "6": {
          "loc": { "start": { "line": 81, "column": 2 }, "end": { "line": 84, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 81, "column": 2 }, "end": { "line": 84, "column": 3 } }
          ]
        },
        "7": {
          "loc": { "start": { "line": 112, "column": 24 }, "end": { "line": 112, "column": 47 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 112, "column": 24 }, "end": { "line": 112, "column": 41 } },
            { "start": { "line": 112, "column": 45 }, "end": { "line": 112, "column": 47 } }
          ]
        },
        "8": {
          "loc": { "start": { "line": 120, "column": 4 }, "end": { "line": 129, "column": 5 } },
          "type": "switch",
          "locations": [
            { "start": { "line": 121, "column": 6 }, "end": { "line": 123, "column": 14 } },
            { "start": { "line": 125, "column": 6 }, "end": { "line": 128, "column": 14 } }
          ]
        },
        "9": {
          "loc": { "start": { "line": 126, "column": 36 }, "end": { "line": 126, "column": 67 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 126, "column": 36 }, "end": { "line": 126, "column": 61 } },
            { "start": { "line": 126, "column": 65 }, "end": { "line": 126, "column": 67 } }
          ]
        },
        "10": {
          "loc": { "start": { "line": 165, "column": 4 }, "end": { "line": 167, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 165, "column": 4 }, "end": { "line": 167, "column": 5 } }
          ]
        },
        "11": {
          "loc": { "start": { "line": 175, "column": 4 }, "end": { "line": 178, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 175, "column": 4 }, "end": { "line": 178, "column": 5 } }
          ]
        },
        "12": {
          "loc": { "start": { "line": 185, "column": 4 }, "end": { "line": 187, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 185, "column": 4 }, "end": { "line": 187, "column": 5 } }
          ]
        },
        "13": {
          "loc": { "start": { "line": 185, "column": 8 }, "end": { "line": 185, "column": 75 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 185, "column": 8 }, "end": { "line": 185, "column": 41 } },
            { "start": { "line": 185, "column": 45 }, "end": { "line": 185, "column": 75 } }
          ]
        },
        "14": {
          "loc": { "start": { "line": 194, "column": 2 }, "end": { "line": 197, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 194, "column": 2 }, "end": { "line": 197, "column": 3 } }
          ]
        },
        "15": {
          "loc": { "start": { "line": 200, "column": 2 }, "end": { "line": 202, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 200, "column": 2 }, "end": { "line": 202, "column": 3 } }
          ]
        },
        "16": {
          "loc": { "start": { "line": 211, "column": 2 }, "end": { "line": 216, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 211, "column": 2 }, "end": { "line": 216, "column": 3 } }
          ]
        },
        "17": {
          "loc": { "start": { "line": 219, "column": 2 }, "end": { "line": 221, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 219, "column": 2 }, "end": { "line": 221, "column": 3 } }
          ]
        },
        "18": {
          "loc": { "start": { "line": 219, "column": 6 }, "end": { "line": 219, "column": 55 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 219, "column": 6 }, "end": { "line": 219, "column": 23 } },
            { "start": { "line": 219, "column": 27 }, "end": { "line": 219, "column": 55 } }
          ]
        }
      },
      "s": {
        "0": 3,
        "1": 3,
        "2": 3,
        "3": 3,
        "4": 3,
        "5": 3,
        "6": 3,
        "7": 3,
        "8": 3,
        "9": 3,
        "10": 3,
        "11": 3,
        "12": 3,
        "13": 3,
        "14": 8,
        "15": 1,
        "16": 7,
        "17": 7,
        "18": 5,
        "19": 5,
        "20": 1,
        "21": 4,
        "22": 4,
        "23": 2,
        "24": 2,
        "25": 2,
        "26": 1,
        "27": 2,
        "28": 2,
        "29": 2,
        "30": 2,
        "31": 1,
        "32": 2,
        "33": 3,
        "34": 3,
        "35": 3,
        "36": 3,
        "37": 3,
        "38": 3,
        "39": 1,
        "40": 1,
        "41": 2,
        "42": 2,
        "43": 2,
        "44": 2,
        "45": 2,
        "46": 2,
        "47": 1,
        "48": 1,
        "49": 1,
        "50": 1,
        "51": 1,
        "52": 3,
        "53": 0,
        "54": 0,
        "55": 0,
        "56": 0,
        "57": 0,
        "58": 0,
        "59": 0,
        "60": 0,
        "61": 0,
        "62": 0,
        "63": 0,
        "64": 0,
        "65": 0,
        "66": 0,
        "67": 0,
        "68": 0,
        "69": 0,
        "70": 0,
        "71": 0,
        "72": 0,
        "73": 0,
        "74": 0,
        "75": 0,
        "76": 0,
        "77": 0,
        "78": 0,
        "79": 0,
        "80": 0,
        "81": 0,
        "82": 0,
        "83": 0,
        "84": 0,
        "85": 0,
        "86": 0
      },
      "f": { "0": 8, "1": 5, "2": 2, "3": 2, "4": 3, "5": 0, "6": 0, "7": 0, "8": 0 },
      "b": {
        "0": [1],
        "1": [1, 4],
        "2": [5, 2],
        "3": [2, 2],
        "4": [1],
        "5": [2, 2],
        "6": [1],
        "7": [2, 2],
        "8": [1, 1],
        "9": [1, 1],
        "10": [0],
        "11": [0],
        "12": [0],
        "13": [0, 0],
        "14": [0],
        "15": [0],
        "16": [0],
        "17": [0],
        "18": [0, 0]
      }
    },
    "/Users/sam/code/work/pepr/src/lib/filter/filter.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/filter/filter.ts",
      "statementMap": {
        "0": { "start": { "line": 57, "column": 0 }, "end": { "line": 57, "column": 16 } },
        "1": { "start": { "line": 104, "column": 0 }, "end": { "line": 104, "column": 16 } },
        "2": { "start": { "line": 137, "column": 0 }, "end": { "line": 137, "column": 16 } },
        "3": { "start": { "line": 141, "column": 0 }, "end": { "line": 141, "column": 16 } },
        "4": { "start": { "line": 147, "column": 0 }, "end": { "line": 147, "column": 16 } },
        "5": { "start": { "line": 153, "column": 0 }, "end": { "line": 153, "column": 16 } },
        "6": { "start": { "line": 159, "column": 0 }, "end": { "line": 159, "column": 16 } },
        "7": { "start": { "line": 165, "column": 0 }, "end": { "line": 165, "column": 16 } },
        "8": { "start": { "line": 171, "column": 0 }, "end": { "line": 171, "column": 16 } },
        "9": { "start": { "line": 177, "column": 0 }, "end": { "line": 177, "column": 16 } },
        "10": { "start": { "line": 183, "column": 0 }, "end": { "line": 183, "column": 16 } },
        "11": { "start": { "line": 189, "column": 0 }, "end": { "line": 189, "column": 16 } },
        "12": { "start": { "line": 198, "column": 0 }, "end": { "line": 198, "column": 16 } },
        "13": { "start": { "line": 204, "column": 0 }, "end": { "line": 204, "column": 16 } },
        "14": { "start": { "line": 210, "column": 0 }, "end": { "line": 210, "column": 16 } },
        "15": { "start": { "line": 216, "column": 0 }, "end": { "line": 216, "column": 16 } },
        "16": { "start": { "line": 222, "column": 0 }, "end": { "line": 222, "column": 16 } },
        "17": { "start": { "line": 228, "column": 0 }, "end": { "line": 228, "column": 16 } },
        "18": { "start": { "line": 237, "column": 0 }, "end": { "line": 237, "column": 16 } },
        "19": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 37 } },
        "20": { "start": { "line": 7, "column": 0 }, "end": { "line": 7, "column": null } },
        "21": { "start": { "line": 63, "column": 15 }, "end": { "line": 63, "column": 78 } },
        "22": { "start": { "line": 64, "column": 17 }, "end": { "line": 64, "column": 47 } },
        "23": { "start": { "line": 66, "column": 38 }, "end": { "line": 83, "column": 4 } },
        "24": { "start": { "line": 67, "column": 30 }, "end": { "line": 67, "column": 84 } },
        "25": { "start": { "line": 68, "column": 30 }, "end": { "line": 68, "column": 81 } },
        "26": { "start": { "line": 69, "column": 30 }, "end": { "line": 69, "column": 69 } },
        "27": { "start": { "line": 70, "column": 30 }, "end": { "line": 70, "column": 68 } },
        "28": { "start": { "line": 71, "column": 30 }, "end": { "line": 71, "column": 69 } },
        "29": { "start": { "line": 72, "column": 30 }, "end": { "line": 72, "column": 71 } },
        "30": { "start": { "line": 73, "column": 30 }, "end": { "line": 73, "column": 68 } },
        "31": { "start": { "line": 74, "column": 30 }, "end": { "line": 74, "column": 91 } },
        "32": { "start": { "line": 75, "column": 30 }, "end": { "line": 75, "column": 87 } },
        "33": { "start": { "line": 76, "column": 30 }, "end": { "line": 76, "column": 73 } },
        "34": { "start": { "line": 77, "column": 30 }, "end": { "line": 77, "column": 70 } },
        "35": { "start": { "line": 78, "column": 30 }, "end": { "line": 78, "column": 75 } },
        "36": { "start": { "line": 79, "column": 30 }, "end": { "line": 79, "column": 78 } },
        "37": { "start": { "line": 80, "column": 30 }, "end": { "line": 80, "column": 73 } },
        "38": { "start": { "line": 81, "column": 30 }, "end": { "line": 81, "column": 87 } },
        "39": { "start": { "line": 82, "column": 30 }, "end": { "line": 82, "column": 92 } },
        "40": { "start": { "line": 85, "column": 2 }, "end": { "line": 90, "column": 3 } },
        "41": { "start": { "line": 86, "column": 19 }, "end": { "line": 86, "column": 32 } },
        "42": { "start": { "line": 87, "column": 4 }, "end": { "line": 89, "column": 5 } },
        "43": { "start": { "line": 88, "column": 6 }, "end": { "line": 88, "column": 35 } },
        "44": { "start": { "line": 92, "column": 2 }, "end": { "line": 92, "column": 12 } },
        "45": { "start": { "line": 110, "column": 17 }, "end": { "line": 110, "column": 43 } },
        "46": { "start": { "line": 112, "column": 38 }, "end": { "line": 125, "column": 4 } },
        "47": { "start": { "line": 113, "column": 30 }, "end": { "line": 113, "column": 81 } },
        "48": { "start": { "line": 114, "column": 30 }, "end": { "line": 114, "column": 68 } },
        "49": { "start": { "line": 115, "column": 30 }, "end": { "line": 115, "column": 66 } },
        "50": { "start": { "line": 116, "column": 30 }, "end": { "line": 116, "column": 70 } },
        "51": { "start": { "line": 117, "column": 30 }, "end": { "line": 117, "column": 75 } },
        "52": { "start": { "line": 118, "column": 30 }, "end": { "line": 118, "column": 87 } },
        "53": { "start": { "line": 119, "column": 30 }, "end": { "line": 119, "column": 91 } },
        "54": { "start": { "line": 120, "column": 30 }, "end": { "line": 120, "column": 73 } },
        "55": { "start": { "line": 121, "column": 30 }, "end": { "line": 121, "column": 78 } },
        "56": { "start": { "line": 122, "column": 30 }, "end": { "line": 122, "column": 73 } },
        "57": { "start": { "line": 123, "column": 30 }, "end": { "line": 123, "column": 87 } },
        "58": { "start": { "line": 124, "column": 30 }, "end": { "line": 124, "column": 92 } },
        "59": { "start": { "line": 127, "column": 2 }, "end": { "line": 132, "column": 3 } },
        "60": { "start": { "line": 128, "column": 19 }, "end": { "line": 128, "column": 32 } },
        "61": { "start": { "line": 129, "column": 4 }, "end": { "line": 131, "column": 5 } },
        "62": { "start": { "line": 130, "column": 6 }, "end": { "line": 130, "column": 35 } },
        "63": { "start": { "line": 134, "column": 2 }, "end": { "line": 134, "column": 12 } },
        "64": { "start": { "line": 138, "column": 2 }, "end": { "line": 138, "column": 98 } },
        "65": { "start": { "line": 142, "column": 2 }, "end": { "line": 144, "column": 11 } },
        "66": { "start": { "line": 148, "column": 2 }, "end": { "line": 150, "column": 11 } },
        "67": { "start": { "line": 154, "column": 2 }, "end": { "line": 156, "column": 11 } },
        "68": { "start": { "line": 160, "column": 2 }, "end": { "line": 162, "column": 11 } },
        "69": { "start": { "line": 166, "column": 2 }, "end": { "line": 168, "column": 11 } },
        "70": { "start": { "line": 172, "column": 2 }, "end": { "line": 174, "column": 11 } },
        "71": { "start": { "line": 178, "column": 2 }, "end": { "line": 180, "column": 11 } },
        "72": { "start": { "line": 184, "column": 2 }, "end": { "line": 186, "column": 11 } },
        "73": { "start": { "line": 193, "column": 2 }, "end": { "line": 195, "column": 11 } },
        "74": { "start": { "line": 199, "column": 2 }, "end": { "line": 201, "column": 11 } },
        "75": { "start": { "line": 205, "column": 2 }, "end": { "line": 207, "column": 11 } },
        "76": { "start": { "line": 211, "column": 2 }, "end": { "line": 213, "column": 11 } },
        "77": { "start": { "line": 217, "column": 2 }, "end": { "line": 219, "column": 11 } },
        "78": { "start": { "line": 223, "column": 2 }, "end": { "line": 225, "column": 11 } },
        "79": { "start": { "line": 232, "column": 2 }, "end": { "line": 234, "column": 11 } },
        "80": { "start": { "line": 241, "column": 2 }, "end": { "line": 243, "column": 11 } }
      },
      "fnMap": {
        "0": {
          "name": "shouldSkipRequest",
          "decl": { "start": { "line": 57, "column": 16 }, "end": { "line": 57, "column": 33 } },
          "loc": { "start": { "line": 61, "column": 30 }, "end": { "line": 93, "column": 1 } }
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 67, "column": 4 }, "end": { "line": 67, "column": 27 } },
          "loc": { "start": { "line": 67, "column": 30 }, "end": { "line": 67, "column": 84 } }
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 68, "column": 4 }, "end": { "line": 68, "column": 27 } },
          "loc": { "start": { "line": 68, "column": 30 }, "end": { "line": 68, "column": 81 } }
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 69, "column": 4 }, "end": { "line": 69, "column": 27 } },
          "loc": { "start": { "line": 69, "column": 30 }, "end": { "line": 69, "column": 69 } }
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 70, "column": 4 }, "end": { "line": 70, "column": 27 } },
          "loc": { "start": { "line": 70, "column": 30 }, "end": { "line": 70, "column": 68 } }
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 71, "column": 4 }, "end": { "line": 71, "column": 27 } },
          "loc": { "start": { "line": 71, "column": 30 }, "end": { "line": 71, "column": 69 } }
        },
        "6": {
          "name": "(anonymous_6)",
          "decl": { "start": { "line": 72, "column": 4 }, "end": { "line": 72, "column": 27 } },
          "loc": { "start": { "line": 72, "column": 30 }, "end": { "line": 72, "column": 71 } }
        },
        "7": {
          "name": "(anonymous_7)",
          "decl": { "start": { "line": 73, "column": 4 }, "end": { "line": 73, "column": 27 } },
          "loc": { "start": { "line": 73, "column": 30 }, "end": { "line": 73, "column": 68 } }
        },
        "8": {
          "name": "(anonymous_8)",
          "decl": { "start": { "line": 74, "column": 4 }, "end": { "line": 74, "column": 27 } },
          "loc": { "start": { "line": 74, "column": 30 }, "end": { "line": 74, "column": 91 } }
        },
        "9": {
          "name": "(anonymous_9)",
          "decl": { "start": { "line": 75, "column": 4 }, "end": { "line": 75, "column": 27 } },
          "loc": { "start": { "line": 75, "column": 30 }, "end": { "line": 75, "column": 87 } }
        },
        "10": {
          "name": "(anonymous_10)",
          "decl": { "start": { "line": 76, "column": 4 }, "end": { "line": 76, "column": 27 } },
          "loc": { "start": { "line": 76, "column": 30 }, "end": { "line": 76, "column": 73 } }
        },
        "11": {
          "name": "(anonymous_11)",
          "decl": { "start": { "line": 77, "column": 4 }, "end": { "line": 77, "column": 27 } },
          "loc": { "start": { "line": 77, "column": 30 }, "end": { "line": 77, "column": 70 } }
        },
        "12": {
          "name": "(anonymous_12)",
          "decl": { "start": { "line": 78, "column": 4 }, "end": { "line": 78, "column": 27 } },
          "loc": { "start": { "line": 78, "column": 30 }, "end": { "line": 78, "column": 75 } }
        },
        "13": {
          "name": "(anonymous_13)",
          "decl": { "start": { "line": 79, "column": 4 }, "end": { "line": 79, "column": 27 } },
          "loc": { "start": { "line": 79, "column": 30 }, "end": { "line": 79, "column": 78 } }
        },
        "14": {
          "name": "(anonymous_14)",
          "decl": { "start": { "line": 80, "column": 4 }, "end": { "line": 80, "column": 27 } },
          "loc": { "start": { "line": 80, "column": 30 }, "end": { "line": 80, "column": 73 } }
        },
        "15": {
          "name": "(anonymous_15)",
          "decl": { "start": { "line": 81, "column": 4 }, "end": { "line": 81, "column": 27 } },
          "loc": { "start": { "line": 81, "column": 30 }, "end": { "line": 81, "column": 87 } }
        },
        "16": {
          "name": "(anonymous_16)",
          "decl": { "start": { "line": 82, "column": 4 }, "end": { "line": 82, "column": 27 } },
          "loc": { "start": { "line": 82, "column": 30 }, "end": { "line": 82, "column": 92 } }
        },
        "17": {
          "name": "filterNoMatchReason",
          "decl": { "start": { "line": 104, "column": 16 }, "end": { "line": 104, "column": 35 } },
          "loc": { "start": { "line": 108, "column": 30 }, "end": { "line": 135, "column": 1 } }
        },
        "18": {
          "name": "(anonymous_18)",
          "decl": { "start": { "line": 113, "column": 4 }, "end": { "line": 113, "column": 27 } },
          "loc": { "start": { "line": 113, "column": 30 }, "end": { "line": 113, "column": 81 } }
        },
        "19": {
          "name": "(anonymous_19)",
          "decl": { "start": { "line": 114, "column": 4 }, "end": { "line": 114, "column": 27 } },
          "loc": { "start": { "line": 114, "column": 30 }, "end": { "line": 114, "column": 68 } }
        },
        "20": {
          "name": "(anonymous_20)",
          "decl": { "start": { "line": 115, "column": 4 }, "end": { "line": 115, "column": 27 } },
          "loc": { "start": { "line": 115, "column": 30 }, "end": { "line": 115, "column": 66 } }
        },
        "21": {
          "name": "(anonymous_21)",
          "decl": { "start": { "line": 116, "column": 4 }, "end": { "line": 116, "column": 27 } },
          "loc": { "start": { "line": 116, "column": 30 }, "end": { "line": 116, "column": 70 } }
        },
        "22": {
          "name": "(anonymous_22)",
          "decl": { "start": { "line": 117, "column": 4 }, "end": { "line": 117, "column": 27 } },
          "loc": { "start": { "line": 117, "column": 30 }, "end": { "line": 117, "column": 75 } }
        },
        "23": {
          "name": "(anonymous_23)",
          "decl": { "start": { "line": 118, "column": 4 }, "end": { "line": 118, "column": 27 } },
          "loc": { "start": { "line": 118, "column": 30 }, "end": { "line": 118, "column": 87 } }
        },
        "24": {
          "name": "(anonymous_24)",
          "decl": { "start": { "line": 119, "column": 4 }, "end": { "line": 119, "column": 27 } },
          "loc": { "start": { "line": 119, "column": 30 }, "end": { "line": 119, "column": 91 } }
        },
        "25": {
          "name": "(anonymous_25)",
          "decl": { "start": { "line": 120, "column": 4 }, "end": { "line": 120, "column": 27 } },
          "loc": { "start": { "line": 120, "column": 30 }, "end": { "line": 120, "column": 73 } }
        },
        "26": {
          "name": "(anonymous_26)",
          "decl": { "start": { "line": 121, "column": 4 }, "end": { "line": 121, "column": 27 } },
          "loc": { "start": { "line": 121, "column": 30 }, "end": { "line": 121, "column": 78 } }
        },
        "27": {
          "name": "(anonymous_27)",
          "decl": { "start": { "line": 122, "column": 4 }, "end": { "line": 122, "column": 27 } },
          "loc": { "start": { "line": 122, "column": 30 }, "end": { "line": 122, "column": 73 } }
        },
        "28": {
          "name": "(anonymous_28)",
          "decl": { "start": { "line": 123, "column": 4 }, "end": { "line": 123, "column": 27 } },
          "loc": { "start": { "line": 123, "column": 30 }, "end": { "line": 123, "column": 87 } }
        },
        "29": {
          "name": "(anonymous_29)",
          "decl": { "start": { "line": 124, "column": 4 }, "end": { "line": 124, "column": 27 } },
          "loc": { "start": { "line": 124, "column": 30 }, "end": { "line": 124, "column": 92 } }
        },
        "30": {
          "name": "adjudicateMisboundNamespace",
          "decl": { "start": { "line": 137, "column": 16 }, "end": { "line": 137, "column": 43 } },
          "loc": { "start": { "line": 137, "column": 60 }, "end": { "line": 139, "column": 1 } }
        },
        "31": {
          "name": "adjudicateMisboundDeleteWithDeletionTimestamp",
          "decl": { "start": { "line": 141, "column": 16 }, "end": { "line": 141, "column": 61 } },
          "loc": { "start": { "line": 141, "column": 78 }, "end": { "line": 145, "column": 1 } }
        },
        "32": {
          "name": "adjudicateMismatchedDeletionTimestamp",
          "decl": { "start": { "line": 147, "column": 16 }, "end": { "line": 147, "column": 53 } },
          "loc": { "start": { "line": 147, "column": 93 }, "end": { "line": 151, "column": 1 } }
        },
        "33": {
          "name": "adjudicateMismatchedEvent",
          "decl": { "start": { "line": 153, "column": 16 }, "end": { "line": 153, "column": 41 } },
          "loc": { "start": { "line": 153, "column": 81 }, "end": { "line": 157, "column": 1 } }
        },
        "34": {
          "name": "adjudicateMismatchedName",
          "decl": { "start": { "line": 159, "column": 16 }, "end": { "line": 159, "column": 40 } },
          "loc": { "start": { "line": 159, "column": 80 }, "end": { "line": 163, "column": 1 } }
        },
        "35": {
          "name": "adjudicateMismatchedGroup",
          "decl": { "start": { "line": 165, "column": 16 }, "end": { "line": 165, "column": 41 } },
          "loc": { "start": { "line": 165, "column": 81 }, "end": { "line": 169, "column": 1 } }
        },
        "36": {
          "name": "adjudicateMismatchedVersion",
          "decl": { "start": { "line": 171, "column": 16 }, "end": { "line": 171, "column": 43 } },
          "loc": { "start": { "line": 171, "column": 83 }, "end": { "line": 175, "column": 1 } }
        },
        "37": {
          "name": "adjudicateMismatchedKind",
          "decl": { "start": { "line": 177, "column": 16 }, "end": { "line": 177, "column": 40 } },
          "loc": { "start": { "line": 177, "column": 80 }, "end": { "line": 181, "column": 1 } }
        },
        "38": {
          "name": "adjudicateUnbindableNamespaces",
          "decl": { "start": { "line": 183, "column": 16 }, "end": { "line": 183, "column": 46 } },
          "loc": { "start": { "line": 183, "column": 95 }, "end": { "line": 187, "column": 1 } }
        },
        "39": {
          "name": "adjudicateUncarryableNamespace",
          "decl": { "start": { "line": 189, "column": 16 }, "end": { "line": 189, "column": 46 } },
          "loc": { "start": { "line": 191, "column": 23 }, "end": { "line": 196, "column": 1 } }
        },
        "40": {
          "name": "adjudicateMismatchedNamespace",
          "decl": { "start": { "line": 198, "column": 16 }, "end": { "line": 198, "column": 45 } },
          "loc": { "start": { "line": 198, "column": 85 }, "end": { "line": 202, "column": 1 } }
        },
        "41": {
          "name": "adjudicateMismatchedLabels",
          "decl": { "start": { "line": 204, "column": 16 }, "end": { "line": 204, "column": 42 } },
          "loc": { "start": { "line": 204, "column": 82 }, "end": { "line": 208, "column": 1 } }
        },
        "42": {
          "name": "adjudicateMismatchedAnnotations",
          "decl": { "start": { "line": 210, "column": 16 }, "end": { "line": 210, "column": 47 } },
          "loc": { "start": { "line": 210, "column": 87 }, "end": { "line": 214, "column": 1 } }
        },
        "43": {
          "name": "adjudicateMismatchedNamespaceRegex",
          "decl": { "start": { "line": 216, "column": 16 }, "end": { "line": 216, "column": 50 } },
          "loc": { "start": { "line": 216, "column": 90 }, "end": { "line": 220, "column": 1 } }
        },
        "44": {
          "name": "adjudicateMismatchedNameRegex",
          "decl": { "start": { "line": 222, "column": 16 }, "end": { "line": 222, "column": 45 } },
          "loc": { "start": { "line": 222, "column": 85 }, "end": { "line": 226, "column": 1 } }
        },
        "45": {
          "name": "adjudicateCarriesIgnoredNamespace",
          "decl": { "start": { "line": 228, "column": 16 }, "end": { "line": 228, "column": 49 } },
          "loc": { "start": { "line": 230, "column": 23 }, "end": { "line": 235, "column": 1 } }
        },
        "46": {
          "name": "adjudicateMissingCarriableNamespace",
          "decl": { "start": { "line": 237, "column": 16 }, "end": { "line": 237, "column": 51 } },
          "loc": { "start": { "line": 239, "column": 23 }, "end": { "line": 244, "column": 1 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 63, "column": 15 }, "end": { "line": 63, "column": 78 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 63, "column": 52 }, "end": { "line": 63, "column": 65 } },
            { "start": { "line": 63, "column": 68 }, "end": { "line": 63, "column": 78 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 87, "column": 4 }, "end": { "line": 89, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 87, "column": 4 }, "end": { "line": 89, "column": 5 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 129, "column": 4 }, "end": { "line": 131, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 129, "column": 4 }, "end": { "line": 131, "column": 5 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 138, "column": 9 }, "end": { "line": 138, "column": 97 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 138, "column": 38 }, "end": { "line": 138, "column": 90 } },
            { "start": { "line": 138, "column": 93 }, "end": { "line": 138, "column": 97 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 142, "column": 9 }, "end": { "line": 144, "column": 10 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 143, "column": 6 }, "end": { "line": 143, "column": 66 } },
            { "start": { "line": 144, "column": 6 }, "end": { "line": 144, "column": 10 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 148, "column": 9 }, "end": { "line": 150, "column": 10 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 149, "column": 6 }, "end": { "line": 149, "column": 71 } },
            { "start": { "line": 150, "column": 6 }, "end": { "line": 150, "column": 10 } }
          ]
        },
        "6": {
          "loc": { "start": { "line": 154, "column": 9 }, "end": { "line": 156, "column": 10 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 155, "column": 6 }, "end": { "line": 155, "column": 106 } },
            { "start": { "line": 156, "column": 6 }, "end": { "line": 156, "column": 10 } }
          ]
        },
        "7": {
          "loc": { "start": { "line": 160, "column": 9 }, "end": { "line": 162, "column": 10 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 161, "column": 6 }, "end": { "line": 161, "column": 96 } },
            { "start": { "line": 162, "column": 6 }, "end": { "line": 162, "column": 10 } }
          ]
        },
        "8": {
          "loc": { "start": { "line": 166, "column": 9 }, "end": { "line": 168, "column": 10 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 167, "column": 6 }, "end": { "line": 167, "column": 102 } },
            { "start": { "line": 168, "column": 6 }, "end": { "line": 168, "column": 10 } }
          ]
        },
        "9": {
          "loc": { "start": { "line": 172, "column": 9 }, "end": { "line": 174, "column": 10 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 173, "column": 6 }, "end": { "line": 173, "column": 108 } },
            { "start": { "line": 174, "column": 6 }, "end": { "line": 174, "column": 10 } }
          ]
        },
        "10": {
          "loc": { "start": { "line": 178, "column": 9 }, "end": { "line": 180, "column": 10 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 179, "column": 6 }, "end": { "line": 179, "column": 99 } },
            { "start": { "line": 180, "column": 6 }, "end": { "line": 180, "column": 10 } }
          ]
        },
        "11": {
          "loc": { "start": { "line": 184, "column": 9 }, "end": { "line": 186, "column": 10 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 185, "column": 6 }, "end": { "line": 185, "column": 164 } },
            { "start": { "line": 186, "column": 6 }, "end": { "line": 186, "column": 10 } }
          ]
        },
        "12": {
          "loc": { "start": { "line": 193, "column": 9 }, "end": { "line": 195, "column": 10 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 194, "column": 6 }, "end": { "line": 194, "column": 203 } },
            { "start": { "line": 195, "column": 6 }, "end": { "line": 195, "column": 10 } }
          ]
        },
        "13": {
          "loc": { "start": { "line": 194, "column": 35 }, "end": { "line": 194, "column": 116 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 194, "column": 74 }, "end": { "line": 194, "column": 92 } },
            { "start": { "line": 194, "column": 95 }, "end": { "line": 194, "column": 116 } }
          ]
        },
        "14": {
          "loc": { "start": { "line": 194, "column": 35 }, "end": { "line": 194, "column": 71 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 194, "column": 35 }, "end": { "line": 194, "column": 43 } },
            { "start": { "line": 194, "column": 47 }, "end": { "line": 194, "column": 71 } }
          ]
        },
        "15": {
          "loc": { "start": { "line": 199, "column": 9 }, "end": { "line": 201, "column": 10 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 200, "column": 6 }, "end": { "line": 200, "column": 129 } },
            { "start": { "line": 201, "column": 6 }, "end": { "line": 201, "column": 10 } }
          ]
        },
        "16": {
          "loc": { "start": { "line": 205, "column": 9 }, "end": { "line": 207, "column": 10 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 206, "column": 6 }, "end": { "line": 206, "column": 134 } },
            { "start": { "line": 207, "column": 6 }, "end": { "line": 207, "column": 10 } }
          ]
        },
        "17": {
          "loc": { "start": { "line": 211, "column": 9 }, "end": { "line": 213, "column": 10 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 212, "column": 6 }, "end": { "line": 212, "column": 149 } },
            { "start": { "line": 213, "column": 6 }, "end": { "line": 213, "column": 10 } }
          ]
        },
        "18": {
          "loc": { "start": { "line": 217, "column": 9 }, "end": { "line": 219, "column": 10 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 218, "column": 6 }, "end": { "line": 218, "column": 142 } },
            { "start": { "line": 219, "column": 6 }, "end": { "line": 219, "column": 10 } }
          ]
        },
        "19": {
          "loc": { "start": { "line": 223, "column": 9 }, "end": { "line": 225, "column": 10 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 224, "column": 6 }, "end": { "line": 224, "column": 107 } },
            { "start": { "line": 225, "column": 6 }, "end": { "line": 225, "column": 10 } }
          ]
        },
        "20": {
          "loc": { "start": { "line": 232, "column": 9 }, "end": { "line": 234, "column": 10 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 233, "column": 6 }, "end": { "line": 233, "column": 190 } },
            { "start": { "line": 234, "column": 6 }, "end": { "line": 234, "column": 10 } }
          ]
        },
        "21": {
          "loc": { "start": { "line": 233, "column": 35 }, "end": { "line": 233, "column": 116 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 233, "column": 74 }, "end": { "line": 233, "column": 92 } },
            { "start": { "line": 233, "column": 95 }, "end": { "line": 233, "column": 116 } }
          ]
        },
        "22": {
          "loc": { "start": { "line": 233, "column": 35 }, "end": { "line": 233, "column": 71 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 233, "column": 35 }, "end": { "line": 233, "column": 43 } },
            { "start": { "line": 233, "column": 47 }, "end": { "line": 233, "column": 71 } }
          ]
        },
        "23": {
          "loc": { "start": { "line": 241, "column": 9 }, "end": { "line": 243, "column": 10 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 242, "column": 6 }, "end": { "line": 242, "column": 125 } },
            { "start": { "line": 243, "column": 6 }, "end": { "line": 243, "column": 10 } }
          ]
        }
      },
      "s": {
        "0": 7,
        "1": 7,
        "2": 7,
        "3": 7,
        "4": 7,
        "5": 7,
        "6": 7,
        "7": 7,
        "8": 7,
        "9": 7,
        "10": 7,
        "11": 7,
        "12": 7,
        "13": 7,
        "14": 7,
        "15": 7,
        "16": 7,
        "17": 7,
        "18": 7,
        "19": 7,
        "20": 7,
        "21": 224,
        "22": 224,
        "23": 224,
        "24": 224,
        "25": 198,
        "26": 187,
        "27": 24,
        "28": 22,
        "29": 21,
        "30": 20,
        "31": 19,
        "32": 19,
        "33": 18,
        "34": 17,
        "35": 16,
        "36": 15,
        "37": 13,
        "38": 11,
        "39": 11,
        "40": 224,
        "41": 835,
        "42": 835,
        "43": 213,
        "44": 11,
        "45": 44,
        "46": 44,
        "47": 44,
        "48": 43,
        "49": 42,
        "50": 41,
        "51": 40,
        "52": 39,
        "53": 38,
        "54": 37,
        "55": 35,
        "56": 30,
        "57": 24,
        "58": 23,
        "59": 44,
        "60": 436,
        "61": 436,
        "62": 22,
        "63": 22,
        "64": 44,
        "65": 226,
        "66": 244,
        "67": 189,
        "68": 69,
        "69": 24,
        "70": 23,
        "71": 22,
        "72": 59,
        "73": 61,
        "74": 57,
        "75": 60,
        "76": 58,
        "77": 52,
        "78": 47,
        "79": 38,
        "80": 36
      },
      "f": {
        "0": 224,
        "1": 224,
        "2": 198,
        "3": 187,
        "4": 24,
        "5": 22,
        "6": 21,
        "7": 20,
        "8": 19,
        "9": 19,
        "10": 18,
        "11": 17,
        "12": 16,
        "13": 15,
        "14": 13,
        "15": 11,
        "16": 11,
        "17": 44,
        "18": 44,
        "19": 43,
        "20": 42,
        "21": 41,
        "22": 40,
        "23": 39,
        "24": 38,
        "25": 37,
        "26": 35,
        "27": 30,
        "28": 24,
        "29": 23,
        "30": 44,
        "31": 226,
        "32": 244,
        "33": 189,
        "34": 69,
        "35": 24,
        "36": 23,
        "37": 22,
        "38": 59,
        "39": 61,
        "40": 57,
        "41": 60,
        "42": 58,
        "43": 52,
        "44": 47,
        "45": 38,
        "46": 36
      },
      "b": {
        "0": [6, 218],
        "1": [213],
        "2": [22],
        "3": [2, 42],
        "4": [27, 199],
        "5": [13, 231],
        "6": [164, 25],
        "7": [4, 65],
        "8": [2, 22],
        "9": [2, 21],
        "10": [2, 20],
        "11": [2, 57],
        "12": [4, 57],
        "13": [1, 3],
        "14": [4, 2],
        "15": [4, 53],
        "16": [3, 57],
        "17": [3, 55],
        "18": [8, 44],
        "19": [10, 37],
        "20": [3, 35],
        "21": [1, 2],
        "22": [3, 2],
        "23": [2, 34]
      }
    },
    "/Users/sam/code/work/pepr/src/lib/enums.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/enums.ts",
      "statementMap": {
        "0": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": null } },
        "1": { "start": { "line": 6, "column": 2 }, "end": { "line": 6, "column": null } },
        "2": { "start": { "line": 7, "column": 2 }, "end": { "line": 7, "column": null } },
        "3": { "start": { "line": 8, "column": 2 }, "end": { "line": 8, "column": null } },
        "4": { "start": { "line": 9, "column": 2 }, "end": { "line": 9, "column": null } },
        "5": { "start": { "line": 15, "column": 0 }, "end": { "line": 15, "column": null } },
        "6": { "start": { "line": 16, "column": 2 }, "end": { "line": 16, "column": null } },
        "7": { "start": { "line": 17, "column": 2 }, "end": { "line": 17, "column": null } },
        "8": { "start": { "line": 18, "column": 2 }, "end": { "line": 18, "column": null } },
        "9": { "start": { "line": 19, "column": 2 }, "end": { "line": 19, "column": null } },
        "10": { "start": { "line": 20, "column": 2 }, "end": { "line": 20, "column": null } },
        "11": { "start": { "line": 24, "column": 0 }, "end": { "line": 24, "column": null } },
        "12": { "start": { "line": 25, "column": 2 }, "end": { "line": 25, "column": null } },
        "13": { "start": { "line": 26, "column": 2 }, "end": { "line": 26, "column": null } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 12 } },
          "loc": { "start": { "line": 5, "column": 21 }, "end": { "line": 10, "column": 1 } }
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 15, "column": 0 }, "end": { "line": 15, "column": 12 } },
          "loc": { "start": { "line": 15, "column": 17 }, "end": { "line": 21, "column": 1 } }
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 24, "column": 0 }, "end": { "line": 24, "column": 12 } },
          "loc": { "start": { "line": 24, "column": 23 }, "end": { "line": 27, "column": 1 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 5, "column": 12 }, "end": { "line": 5, "column": null } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 5, "column": 12 }, "end": { "line": 5, "column": 21 } },
            { "start": { "line": 5, "column": 21 }, "end": { "line": 5, "column": null } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 15, "column": 12 }, "end": { "line": 15, "column": null } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 15, "column": 12 }, "end": { "line": 15, "column": 17 } },
            { "start": { "line": 15, "column": 17 }, "end": { "line": 15, "column": null } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 24, "column": 12 }, "end": { "line": 24, "column": null } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 24, "column": 12 }, "end": { "line": 24, "column": 23 } },
            { "start": { "line": 24, "column": 23 }, "end": { "line": 24, "column": null } }
          ]
        }
      },
      "s": {
        "0": 18,
        "1": 18,
        "2": 18,
        "3": 18,
        "4": 18,
        "5": 18,
        "6": 18,
        "7": 18,
        "8": 18,
        "9": 18,
        "10": 18,
        "11": 18,
        "12": 18,
        "13": 18
      },
      "f": { "0": 18, "1": 18, "2": 18 },
      "b": { "0": [18, 18], "1": [18, 18], "2": [18, 18] }
    },
    "/Users/sam/code/work/pepr/src/lib/filter/adjudicators/adjudicators.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/filter/adjudicators/adjudicators.ts",
      "statementMap": {
        "0": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 47 } },
        "1": { "start": { "line": 6, "column": 0 }, "end": { "line": 6, "column": null } },
        "2": { "start": { "line": 34, "column": 13 }, "end": { "line": 37, "column": 2 } },
        "3": { "start": { "line": 35, "column": 62 }, "end": { "line": 35, "column": 80 } },
        "4": { "start": { "line": 38, "column": 13 }, "end": { "line": 41, "column": 2 } },
        "5": { "start": { "line": 39, "column": 59 }, "end": { "line": 39, "column": 79 } },
        "6": { "start": { "line": 42, "column": 13 }, "end": { "line": 45, "column": 2 } },
        "7": { "start": { "line": 43, "column": 71 }, "end": { "line": 43, "column": 93 } },
        "8": { "start": { "line": 46, "column": 13 }, "end": { "line": 49, "column": 2 } },
        "9": { "start": { "line": 47, "column": 59 }, "end": { "line": 47, "column": 78 } },
        "10": { "start": { "line": 50, "column": 13 }, "end": { "line": 50, "column": 118 } },
        "11": { "start": { "line": 50, "column": 89 }, "end": { "line": 50, "column": 101 } },
        "12": { "start": { "line": 55, "column": 13 }, "end": { "line": 58, "column": 2 } },
        "13": { "start": { "line": 56, "column": 22 }, "end": { "line": 56, "column": 68 } },
        "14": { "start": { "line": 59, "column": 13 }, "end": { "line": 59, "column": 77 } },
        "15": { "start": { "line": 61, "column": 13 }, "end": { "line": 64, "column": 2 } },
        "16": { "start": { "line": 62, "column": 62 }, "end": { "line": 62, "column": 84 } },
        "17": { "start": { "line": 65, "column": 13 }, "end": { "line": 68, "column": 2 } },
        "18": { "start": { "line": 66, "column": 62 }, "end": { "line": 66, "column": 105 } },
        "19": { "start": { "line": 69, "column": 13 }, "end": { "line": 72, "column": 2 } },
        "20": { "start": { "line": 70, "column": 62 }, "end": { "line": 70, "column": 94 } },
        "21": { "start": { "line": 73, "column": 13 }, "end": { "line": 73, "column": 62 } },
        "22": { "start": { "line": 74, "column": 13 }, "end": { "line": 74, "column": 51 } },
        "23": { "start": { "line": 76, "column": 13 }, "end": { "line": 79, "column": 2 } },
        "24": { "start": { "line": 77, "column": 62 }, "end": { "line": 77, "column": 99 } },
        "25": { "start": { "line": 81, "column": 13 }, "end": { "line": 81, "column": 72 } },
        "26": { "start": { "line": 83, "column": 13 }, "end": { "line": 87, "column": 2 } },
        "27": { "start": { "line": 85, "column": 4 }, "end": { "line": 85, "column": 43 } },
        "28": { "start": { "line": 88, "column": 13 }, "end": { "line": 88, "column": 76 } },
        "29": { "start": { "line": 90, "column": 13 }, "end": { "line": 93, "column": 2 } },
        "30": { "start": { "line": 91, "column": 81 }, "end": { "line": 91, "column": 115 } },
        "31": { "start": { "line": 94, "column": 13 }, "end": { "line": 94, "column": 66 } },
        "32": { "start": { "line": 100, "column": 13 }, "end": { "line": 103, "column": 2 } },
        "33": { "start": { "line": 101, "column": 33 }, "end": { "line": 101, "column": 77 } },
        "34": { "start": { "line": 104, "column": 13 }, "end": { "line": 104, "column": 77 } },
        "35": { "start": { "line": 106, "column": 13 }, "end": { "line": 108, "column": 18 } },
        "36": { "start": { "line": 107, "column": 2 }, "end": { "line": 107, "column": 30 } },
        "37": { "start": { "line": 109, "column": 13 }, "end": { "line": 109, "column": 62 } },
        "38": { "start": { "line": 110, "column": 13 }, "end": { "line": 110, "column": 51 } },
        "39": { "start": { "line": 112, "column": 13 }, "end": { "line": 115, "column": 2 } },
        "40": { "start": { "line": 113, "column": 53 }, "end": { "line": 113, "column": 79 } },
        "41": { "start": { "line": 116, "column": 13 }, "end": { "line": 116, "column": 72 } },
        "42": { "start": { "line": 118, "column": 13 }, "end": { "line": 118, "column": 94 } },
        "43": { "start": { "line": 118, "column": 49 }, "end": { "line": 118, "column": 77 } },
        "44": { "start": { "line": 119, "column": 13 }, "end": { "line": 119, "column": 74 } },
        "45": { "start": { "line": 121, "column": 13 }, "end": { "line": 121, "column": 105 } },
        "46": { "start": { "line": 121, "column": 55 }, "end": { "line": 121, "column": 88 } },
        "47": { "start": { "line": 122, "column": 13 }, "end": { "line": 122, "column": 86 } },
        "48": { "start": { "line": 124, "column": 13 }, "end": { "line": 124, "column": 116 } },
        "49": { "start": { "line": 124, "column": 70 }, "end": { "line": 124, "column": 99 } },
        "50": { "start": { "line": 125, "column": 13 }, "end": { "line": 125, "column": 76 } },
        "51": { "start": { "line": 127, "column": 13 }, "end": { "line": 127, "column": 106 } },
        "52": { "start": { "line": 127, "column": 65 }, "end": { "line": 127, "column": 89 } },
        "53": { "start": { "line": 128, "column": 13 }, "end": { "line": 128, "column": 66 } },
        "54": { "start": { "line": 130, "column": 28 }, "end": { "line": 132, "column": 1 } },
        "55": { "start": { "line": 131, "column": 2 }, "end": { "line": 131, "column": 23 } },
        "56": { "start": { "line": 130, "column": 13 }, "end": { "line": 130, "column": 28 } },
        "57": { "start": { "line": 134, "column": 13 }, "end": { "line": 134, "column": 70 } },
        "58": { "start": { "line": 136, "column": 13 }, "end": { "line": 136, "column": 91 } },
        "59": { "start": { "line": 136, "column": 54 }, "end": { "line": 136, "column": 74 } },
        "60": { "start": { "line": 137, "column": 13 }, "end": { "line": 137, "column": 64 } },
        "61": { "start": { "line": 139, "column": 13 }, "end": { "line": 142, "column": 2 } },
        "62": { "start": { "line": 140, "column": 53 }, "end": { "line": 140, "column": 75 } },
        "63": { "start": { "line": 143, "column": 13 }, "end": { "line": 143, "column": 68 } },
        "64": { "start": { "line": 145, "column": 13 }, "end": { "line": 145, "column": 89 } },
        "65": { "start": { "line": 145, "column": 53 }, "end": { "line": 145, "column": 72 } },
        "66": { "start": { "line": 146, "column": 13 }, "end": { "line": 146, "column": 62 } },
        "67": { "start": { "line": 148, "column": 31 }, "end": { "line": 156, "column": 1 } },
        "68": { "start": { "line": 151, "column": 2 }, "end": { "line": 155, "column": 7 } },
        "69": { "start": { "line": 148, "column": 13 }, "end": { "line": 148, "column": 31 } },
        "70": { "start": { "line": 165, "column": 31 }, "end": { "line": 173, "column": 1 } },
        "71": { "start": { "line": 168, "column": 2 }, "end": { "line": 172, "column": 9 } },
        "72": { "start": { "line": 165, "column": 13 }, "end": { "line": 165, "column": 31 } },
        "73": { "start": { "line": 174, "column": 13 }, "end": { "line": 174, "column": 109 } },
        "74": { "start": { "line": 174, "column": 94 }, "end": { "line": 174, "column": 107 } },
        "75": { "start": { "line": 179, "column": 13 }, "end": { "line": 182, "column": 3 } },
        "76": { "start": { "line": 184, "column": 13 }, "end": { "line": 187, "column": 3 } },
        "77": { "start": { "line": 186, "column": 38 }, "end": { "line": 186, "column": 92 } },
        "78": { "start": { "line": 189, "column": 13 }, "end": { "line": 192, "column": 3 } },
        "79": { "start": { "line": 191, "column": 38 }, "end": { "line": 191, "column": 111 } },
        "80": { "start": { "line": 194, "column": 13 }, "end": { "line": 196, "column": 2 } },
        "81": { "start": { "line": 195, "column": 82 }, "end": { "line": 195, "column": 111 } },
        "82": { "start": { "line": 197, "column": 13 }, "end": { "line": 197, "column": 74 } },
        "83": { "start": { "line": 198, "column": 13 }, "end": { "line": 198, "column": 80 } },
        "84": { "start": { "line": 200, "column": 13 }, "end": { "line": 203, "column": 3 } },
        "85": { "start": { "line": 202, "column": 38 }, "end": { "line": 202, "column": 109 } },
        "86": { "start": { "line": 205, "column": 13 }, "end": { "line": 213, "column": 3 } },
        "87": { "start": { "line": 208, "column": 4 }, "end": { "line": 211, "column": 39 } },
        "88": { "start": { "line": 209, "column": 29 }, "end": { "line": 209, "column": 87 } },
        "89": { "start": { "line": 215, "column": 13 }, "end": { "line": 240, "column": 2 } },
        "90": { "start": { "line": 217, "column": 19 }, "end": { "line": 217, "column": 52 } },
        "91": { "start": { "line": 219, "column": 4 }, "end": { "line": 235, "column": 54 } },
        "92": { "start": { "line": 221, "column": 27 }, "end": { "line": 221, "column": 62 } },
        "93": { "start": { "line": 222, "column": 24 }, "end": { "line": 222, "column": 30 } },
        "94": { "start": { "line": 223, "column": 27 }, "end": { "line": 223, "column": 47 } },
        "95": { "start": { "line": 224, "column": 27 }, "end": { "line": 224, "column": 70 } },
        "96": { "start": { "line": 227, "column": 8 }, "end": { "line": 233, "column": null } },
        "97": { "start": { "line": 235, "column": 29 }, "end": { "line": 235, "column": 47 } },
        "98": { "start": { "line": 237, "column": 4 }, "end": { "line": 237, "column": 26 } },
        "99": { "start": { "line": 239, "column": 13 }, "end": { "line": 239, "column": 44 } },
        "100": { "start": { "line": 242, "column": 13 }, "end": { "line": 245, "column": 3 } },
        "101": { "start": { "line": 244, "column": 38 }, "end": { "line": 244, "column": 118 } },
        "102": { "start": { "line": 247, "column": 13 }, "end": { "line": 250, "column": 3 } },
        "103": { "start": { "line": 249, "column": 38 }, "end": { "line": 249, "column": 108 } },
        "104": { "start": { "line": 256, "column": 13 }, "end": { "line": 267, "column": 3 } },
        "105": { "start": { "line": 259, "column": 4 }, "end": { "line": 261, "column": 5 } },
        "106": { "start": { "line": 260, "column": 6 }, "end": { "line": 260, "column": 74 } },
        "107": { "start": { "line": 262, "column": 4 }, "end": { "line": 264, "column": 5 } },
        "108": { "start": { "line": 263, "column": 6 }, "end": { "line": 263, "column": 76 } },
        "109": { "start": { "line": 265, "column": 4 }, "end": { "line": 265, "column": 16 } },
        "110": { "start": { "line": 269, "column": 13 }, "end": { "line": 276, "column": 3 } },
        "111": { "start": { "line": 272, "column": 4 }, "end": { "line": 274, "column": 43 } },
        "112": { "start": { "line": 282, "column": 13 }, "end": { "line": 294, "column": 3 } },
        "113": { "start": { "line": 285, "column": 4 }, "end": { "line": 287, "column": 5 } },
        "114": { "start": { "line": 286, "column": 6 }, "end": { "line": 286, "column": 74 } },
        "115": { "start": { "line": 288, "column": 4 }, "end": { "line": 290, "column": 5 } },
        "116": { "start": { "line": 289, "column": 6 }, "end": { "line": 289, "column": 76 } },
        "117": { "start": { "line": 292, "column": 4 }, "end": { "line": 292, "column": 17 } },
        "118": { "start": { "line": 296, "column": 13 }, "end": { "line": 305, "column": 3 } },
        "119": { "start": { "line": 300, "column": 36 }, "end": { "line": 300, "column": 93 } },
        "120": { "start": { "line": 307, "column": 13 }, "end": { "line": 307, "column": 102 } },
        "121": { "start": { "line": 309, "column": 13 }, "end": { "line": 313, "column": 3 } },
        "122": { "start": { "line": 311, "column": 56 }, "end": { "line": 311, "column": 95 } },
        "123": { "start": { "line": 312, "column": 57 }, "end": { "line": 312, "column": 102 } },
        "124": { "start": { "line": 315, "column": 13 }, "end": { "line": 319, "column": 2 } },
        "125": { "start": { "line": 317, "column": 4 }, "end": { "line": 317, "column": 76 } },
        "126": { "start": { "line": 321, "column": 13 }, "end": { "line": 324, "column": 3 } },
        "127": { "start": { "line": 323, "column": 29 }, "end": { "line": 323, "column": 77 } },
        "128": { "start": { "line": 326, "column": 13 }, "end": { "line": 329, "column": 3 } },
        "129": { "start": { "line": 328, "column": 29 }, "end": { "line": 328, "column": 81 } },
        "130": { "start": { "line": 331, "column": 13 }, "end": { "line": 334, "column": 3 } },
        "131": { "start": { "line": 333, "column": 29 }, "end": { "line": 333, "column": 75 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 35, "column": 2 }, "end": { "line": 35, "column": 3 } },
          "loc": { "start": { "line": 35, "column": 62 }, "end": { "line": 35, "column": 80 } }
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 39, "column": 2 }, "end": { "line": 39, "column": 3 } },
          "loc": { "start": { "line": 39, "column": 59 }, "end": { "line": 39, "column": 79 } }
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 43, "column": 2 }, "end": { "line": 43, "column": 3 } },
          "loc": { "start": { "line": 43, "column": 71 }, "end": { "line": 43, "column": 93 } }
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 47, "column": 2 }, "end": { "line": 47, "column": 3 } },
          "loc": { "start": { "line": 47, "column": 59 }, "end": { "line": 47, "column": 78 } }
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 50, "column": 32 }, "end": { "line": 50, "column": 33 } },
          "loc": { "start": { "line": 50, "column": 89 }, "end": { "line": 50, "column": 101 } }
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 56, "column": 2 }, "end": { "line": 56, "column": 18 } },
          "loc": { "start": { "line": 56, "column": 22 }, "end": { "line": 56, "column": 68 } }
        },
        "6": {
          "name": "(anonymous_6)",
          "decl": { "start": { "line": 62, "column": 2 }, "end": { "line": 62, "column": 3 } },
          "loc": { "start": { "line": 62, "column": 62 }, "end": { "line": 62, "column": 84 } }
        },
        "7": {
          "name": "(anonymous_7)",
          "decl": { "start": { "line": 66, "column": 2 }, "end": { "line": 66, "column": 3 } },
          "loc": { "start": { "line": 66, "column": 62 }, "end": { "line": 66, "column": 105 } }
        },
        "8": {
          "name": "(anonymous_8)",
          "decl": { "start": { "line": 70, "column": 2 }, "end": { "line": 70, "column": 3 } },
          "loc": { "start": { "line": 70, "column": 62 }, "end": { "line": 70, "column": 94 } }
        },
        "9": {
          "name": "(anonymous_9)",
          "decl": { "start": { "line": 77, "column": 2 }, "end": { "line": 77, "column": 3 } },
          "loc": { "start": { "line": 77, "column": 62 }, "end": { "line": 77, "column": 99 } }
        },
        "10": {
          "name": "(anonymous_10)",
          "decl": { "start": { "line": 84, "column": 2 }, "end": { "line": 84, "column": 3 } },
          "loc": { "start": { "line": 85, "column": 4 }, "end": { "line": 85, "column": 43 } }
        },
        "11": {
          "name": "(anonymous_11)",
          "decl": { "start": { "line": 91, "column": 2 }, "end": { "line": 91, "column": 3 } },
          "loc": { "start": { "line": 91, "column": 81 }, "end": { "line": 91, "column": 115 } }
        },
        "12": {
          "name": "(anonymous_12)",
          "decl": { "start": { "line": 101, "column": 2 }, "end": { "line": 101, "column": 3 } },
          "loc": { "start": { "line": 101, "column": 33 }, "end": { "line": 101, "column": 77 } }
        },
        "13": {
          "name": "(anonymous_13)",
          "decl": { "start": { "line": 106, "column": 32 }, "end": { "line": 106, "column": 33 } },
          "loc": { "start": { "line": 106, "column": 61 }, "end": { "line": 108, "column": 1 } }
        },
        "14": {
          "name": "(anonymous_14)",
          "decl": { "start": { "line": 113, "column": 2 }, "end": { "line": 113, "column": 3 } },
          "loc": { "start": { "line": 113, "column": 53 }, "end": { "line": 113, "column": 79 } }
        },
        "15": {
          "name": "(anonymous_15)",
          "decl": { "start": { "line": 118, "column": 38 }, "end": { "line": 118, "column": 45 } },
          "loc": { "start": { "line": 118, "column": 49 }, "end": { "line": 118, "column": 77 } }
        },
        "16": {
          "name": "(anonymous_16)",
          "decl": { "start": { "line": 121, "column": 44 }, "end": { "line": 121, "column": 51 } },
          "loc": { "start": { "line": 121, "column": 55 }, "end": { "line": 121, "column": 88 } }
        },
        "17": {
          "name": "(anonymous_17)",
          "decl": { "start": { "line": 124, "column": 39 }, "end": { "line": 124, "column": 40 } },
          "loc": { "start": { "line": 124, "column": 70 }, "end": { "line": 124, "column": 99 } }
        },
        "18": {
          "name": "(anonymous_18)",
          "decl": { "start": { "line": 127, "column": 34 }, "end": { "line": 127, "column": 35 } },
          "loc": { "start": { "line": 127, "column": 65 }, "end": { "line": 127, "column": 89 } }
        },
        "19": {
          "name": "(anonymous_19)",
          "decl": { "start": { "line": 130, "column": 28 }, "end": { "line": 130, "column": 29 } },
          "loc": { "start": { "line": 130, "column": 56 }, "end": { "line": 132, "column": 1 } }
        },
        "20": {
          "name": "(anonymous_20)",
          "decl": { "start": { "line": 136, "column": 33 }, "end": { "line": 136, "column": 34 } },
          "loc": { "start": { "line": 136, "column": 54 }, "end": { "line": 136, "column": 74 } }
        },
        "21": {
          "name": "(anonymous_21)",
          "decl": { "start": { "line": 140, "column": 2 }, "end": { "line": 140, "column": 3 } },
          "loc": { "start": { "line": 140, "column": 53 }, "end": { "line": 140, "column": 75 } }
        },
        "22": {
          "name": "(anonymous_22)",
          "decl": { "start": { "line": 145, "column": 32 }, "end": { "line": 145, "column": 33 } },
          "loc": { "start": { "line": 145, "column": 53 }, "end": { "line": 145, "column": 72 } }
        },
        "23": {
          "name": "(anonymous_23)",
          "decl": { "start": { "line": 148, "column": 31 }, "end": { "line": 148, "column": 32 } },
          "loc": { "start": { "line": 148, "column": 69 }, "end": { "line": 156, "column": 1 } }
        },
        "24": {
          "name": "(anonymous_24)",
          "decl": { "start": { "line": 165, "column": 31 }, "end": { "line": 165, "column": 32 } },
          "loc": { "start": { "line": 165, "column": 88 }, "end": { "line": 173, "column": 1 } }
        },
        "25": {
          "name": "(anonymous_25)",
          "decl": { "start": { "line": 174, "column": 82 }, "end": { "line": 174, "column": 90 } },
          "loc": { "start": { "line": 174, "column": 94 }, "end": { "line": 174, "column": 107 } }
        },
        "26": {
          "name": "(anonymous_26)",
          "decl": { "start": { "line": 186, "column": 7 }, "end": { "line": 186, "column": 8 } },
          "loc": { "start": { "line": 186, "column": 38 }, "end": { "line": 186, "column": 92 } }
        },
        "27": {
          "name": "(anonymous_27)",
          "decl": { "start": { "line": 191, "column": 7 }, "end": { "line": 191, "column": 8 } },
          "loc": { "start": { "line": 191, "column": 38 }, "end": { "line": 191, "column": 111 } }
        },
        "28": {
          "name": "(anonymous_28)",
          "decl": { "start": { "line": 195, "column": 63 }, "end": { "line": 195, "column": 64 } },
          "loc": { "start": { "line": 195, "column": 82 }, "end": { "line": 195, "column": 111 } }
        },
        "29": {
          "name": "(anonymous_29)",
          "decl": { "start": { "line": 202, "column": 7 }, "end": { "line": 202, "column": 8 } },
          "loc": { "start": { "line": 202, "column": 38 }, "end": { "line": 202, "column": 109 } }
        },
        "30": {
          "name": "(anonymous_30)",
          "decl": { "start": { "line": 207, "column": 7 }, "end": { "line": 207, "column": 8 } },
          "loc": { "start": { "line": 208, "column": 4 }, "end": { "line": 211, "column": 39 } }
        },
        "31": {
          "name": "(anonymous_31)",
          "decl": { "start": { "line": 209, "column": 10 }, "end": { "line": 209, "column": 11 } },
          "loc": { "start": { "line": 209, "column": 29 }, "end": { "line": 209, "column": 87 } }
        },
        "32": {
          "name": "(anonymous_32)",
          "decl": { "start": { "line": 216, "column": 2 }, "end": { "line": 216, "column": 3 } },
          "loc": { "start": { "line": 216, "column": 23 }, "end": { "line": 238, "column": 3 } }
        },
        "33": {
          "name": "(anonymous_33)",
          "decl": { "start": { "line": 220, "column": 11 }, "end": { "line": 220, "column": 12 } },
          "loc": { "start": { "line": 220, "column": 28 }, "end": { "line": 234, "column": 7 } }
        },
        "34": {
          "name": "(anonymous_34)",
          "decl": { "start": { "line": 235, "column": 14 }, "end": { "line": 235, "column": 15 } },
          "loc": { "start": { "line": 235, "column": 29 }, "end": { "line": 235, "column": 47 } }
        },
        "35": {
          "name": "(anonymous_35)",
          "decl": { "start": { "line": 239, "column": 2 }, "end": { "line": 239, "column": 9 } },
          "loc": { "start": { "line": 239, "column": 13 }, "end": { "line": 239, "column": 44 } }
        },
        "36": {
          "name": "(anonymous_36)",
          "decl": { "start": { "line": 244, "column": 7 }, "end": { "line": 244, "column": 8 } },
          "loc": { "start": { "line": 244, "column": 38 }, "end": { "line": 244, "column": 118 } }
        },
        "37": {
          "name": "(anonymous_37)",
          "decl": { "start": { "line": 249, "column": 7 }, "end": { "line": 249, "column": 8 } },
          "loc": { "start": { "line": 249, "column": 38 }, "end": { "line": 249, "column": 108 } }
        },
        "38": {
          "name": "(anonymous_38)",
          "decl": { "start": { "line": 258, "column": 7 }, "end": { "line": 258, "column": 8 } },
          "loc": { "start": { "line": 258, "column": 47 }, "end": { "line": 266, "column": 3 } }
        },
        "39": {
          "name": "(anonymous_39)",
          "decl": { "start": { "line": 271, "column": 7 }, "end": { "line": 271, "column": 8 } },
          "loc": { "start": { "line": 272, "column": 4 }, "end": { "line": 274, "column": 43 } }
        },
        "40": {
          "name": "(anonymous_40)",
          "decl": { "start": { "line": 284, "column": 7 }, "end": { "line": 284, "column": 8 } },
          "loc": { "start": { "line": 284, "column": 47 }, "end": { "line": 293, "column": 3 } }
        },
        "41": {
          "name": "(anonymous_41)",
          "decl": { "start": { "line": 300, "column": 4 }, "end": { "line": 300, "column": 5 } },
          "loc": { "start": { "line": 300, "column": 36 }, "end": { "line": 300, "column": 93 } }
        },
        "42": {
          "name": "(anonymous_42)",
          "decl": { "start": { "line": 311, "column": 7 }, "end": { "line": 311, "column": 8 } },
          "loc": { "start": { "line": 311, "column": 56 }, "end": { "line": 311, "column": 95 } }
        },
        "43": {
          "name": "(anonymous_43)",
          "decl": { "start": { "line": 312, "column": 7 }, "end": { "line": 312, "column": 8 } },
          "loc": { "start": { "line": 312, "column": 57 }, "end": { "line": 312, "column": 102 } }
        },
        "44": {
          "name": "(anonymous_44)",
          "decl": { "start": { "line": 316, "column": 2 }, "end": { "line": 316, "column": 3 } },
          "loc": { "start": { "line": 317, "column": 4 }, "end": { "line": 317, "column": 76 } }
        },
        "45": {
          "name": "(anonymous_45)",
          "decl": { "start": { "line": 323, "column": 7 }, "end": { "line": 323, "column": 8 } },
          "loc": { "start": { "line": 323, "column": 29 }, "end": { "line": 323, "column": 77 } }
        },
        "46": {
          "name": "(anonymous_46)",
          "decl": { "start": { "line": 328, "column": 7 }, "end": { "line": 328, "column": 8 } },
          "loc": { "start": { "line": 328, "column": 29 }, "end": { "line": 328, "column": 81 } }
        },
        "47": {
          "name": "(anonymous_47)",
          "decl": { "start": { "line": 333, "column": 7 }, "end": { "line": 333, "column": 8 } },
          "loc": { "start": { "line": 333, "column": 29 }, "end": { "line": 333, "column": 75 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 101, "column": 33 }, "end": { "line": 101, "column": 77 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 101, "column": 33 }, "end": { "line": 101, "column": 68 } },
            { "start": { "line": 101, "column": 72 }, "end": { "line": 101, "column": 77 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 151, "column": 9 }, "end": { "line": 155, "column": 6 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 151, "column": 30 }, "end": { "line": 151, "column": 40 } },
            { "start": { "line": 152, "column": 4 }, "end": { "line": 155, "column": 6 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 152, "column": 4 }, "end": { "line": 155, "column": 6 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 152, "column": 22 }, "end": { "line": 152, "column": 29 } },
            { "start": { "line": 153, "column": 4 }, "end": { "line": 155, "column": 6 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 153, "column": 4 }, "end": { "line": 155, "column": 6 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 153, "column": 23 }, "end": { "line": 153, "column": 31 } },
            { "start": { "line": 154, "column": 4 }, "end": { "line": 155, "column": 6 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 154, "column": 4 }, "end": { "line": 155, "column": 6 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 154, "column": 25 }, "end": { "line": 154, "column": 35 } },
            { "start": { "line": 155, "column": 4 }, "end": { "line": 155, "column": 6 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 168, "column": 9 }, "end": { "line": 172, "column": 8 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 168, "column": 30 }, "end": { "line": 168, "column": 54 } },
            { "start": { "line": 169, "column": 4 }, "end": { "line": 172, "column": 8 } }
          ]
        },
        "6": {
          "loc": { "start": { "line": 169, "column": 4 }, "end": { "line": 172, "column": 8 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 169, "column": 22 }, "end": { "line": 169, "column": 43 } },
            { "start": { "line": 170, "column": 4 }, "end": { "line": 172, "column": 8 } }
          ]
        },
        "7": {
          "loc": { "start": { "line": 170, "column": 4 }, "end": { "line": 172, "column": 8 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 170, "column": 23 }, "end": { "line": 170, "column": 45 } },
            { "start": { "line": 171, "column": 4 }, "end": { "line": 172, "column": 8 } }
          ]
        },
        "8": {
          "loc": { "start": { "line": 171, "column": 4 }, "end": { "line": 172, "column": 8 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 171, "column": 25 }, "end": { "line": 171, "column": 49 } },
            { "start": { "line": 172, "column": 4 }, "end": { "line": 172, "column": 8 } }
          ]
        },
        "9": {
          "loc": { "start": { "line": 228, "column": 10 }, "end": { "line": 232, "column": 12 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 228, "column": 23 }, "end": { "line": 228, "column": 39 } },
            { "start": { "line": 229, "column": 10 }, "end": { "line": 232, "column": 12 } }
          ]
        },
        "10": {
          "loc": { "start": { "line": 229, "column": 10 }, "end": { "line": 232, "column": 12 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 229, "column": 20 }, "end": { "line": 229, "column": 22 } },
            { "start": { "line": 230, "column": 10 }, "end": { "line": 232, "column": 12 } }
          ]
        },
        "11": {
          "loc": { "start": { "line": 230, "column": 10 }, "end": { "line": 232, "column": 12 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 230, "column": 23 }, "end": { "line": 230, "column": 39 } },
            { "start": { "line": 231, "column": 10 }, "end": { "line": 232, "column": 12 } }
          ]
        },
        "12": {
          "loc": { "start": { "line": 231, "column": 10 }, "end": { "line": 232, "column": 12 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 231, "column": 23 }, "end": { "line": 231, "column": 39 } },
            { "start": { "line": 232, "column": 10 }, "end": { "line": 232, "column": 12 } }
          ]
        },
        "13": {
          "loc": { "start": { "line": 259, "column": 4 }, "end": { "line": 261, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 259, "column": 4 }, "end": { "line": 261, "column": 5 } }
          ]
        },
        "14": {
          "loc": { "start": { "line": 262, "column": 4 }, "end": { "line": 264, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 262, "column": 4 }, "end": { "line": 264, "column": 5 } }
          ]
        },
        "15": {
          "loc": { "start": { "line": 272, "column": 4 }, "end": { "line": 274, "column": 43 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 273, "column": 8 }, "end": { "line": 273, "column": 69 } },
            { "start": { "line": 274, "column": 8 }, "end": { "line": 274, "column": 43 } }
          ]
        },
        "16": {
          "loc": { "start": { "line": 285, "column": 4 }, "end": { "line": 287, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 285, "column": 4 }, "end": { "line": 287, "column": 5 } }
          ]
        },
        "17": {
          "loc": { "start": { "line": 288, "column": 4 }, "end": { "line": 290, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 288, "column": 4 }, "end": { "line": 290, "column": 5 } }
          ]
        },
        "18": {
          "loc": { "start": { "line": 312, "column": 57 }, "end": { "line": 312, "column": 102 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 312, "column": 69 }, "end": { "line": 312, "column": 94 } },
            { "start": { "line": 312, "column": 97 }, "end": { "line": 312, "column": 102 } }
          ]
        }
      },
      "s": {
        "0": 11,
        "1": 11,
        "2": 11,
        "3": 377,
        "4": 11,
        "5": 10,
        "6": 11,
        "7": 30,
        "8": 11,
        "9": 29,
        "10": 11,
        "11": 1,
        "12": 11,
        "13": 76,
        "14": 11,
        "15": 11,
        "16": 0,
        "17": 11,
        "18": 0,
        "19": 11,
        "20": 61,
        "21": 11,
        "22": 11,
        "23": 11,
        "24": 153,
        "25": 11,
        "26": 11,
        "27": 40,
        "28": 11,
        "29": 11,
        "30": 36,
        "31": 11,
        "32": 11,
        "33": 311,
        "34": 11,
        "35": 11,
        "36": 91,
        "37": 11,
        "38": 11,
        "39": 11,
        "40": 110,
        "41": 11,
        "42": 11,
        "43": 132,
        "44": 11,
        "45": 11,
        "46": 122,
        "47": 11,
        "48": 11,
        "49": 126,
        "50": 11,
        "51": 11,
        "52": 120,
        "53": 11,
        "54": 11,
        "55": 613,
        "56": 11,
        "57": 11,
        "58": 11,
        "59": 41,
        "60": 11,
        "61": 11,
        "62": 59,
        "63": 11,
        "64": 11,
        "65": 157,
        "66": 11,
        "67": 11,
        "68": 5,
        "69": 11,
        "70": 11,
        "71": 10,
        "72": 11,
        "73": 11,
        "74": 5,
        "75": 11,
        "76": 11,
        "77": 11,
        "78": 11,
        "79": 33,
        "80": 11,
        "81": 40,
        "82": 11,
        "83": 11,
        "84": 11,
        "85": 14,
        "86": 11,
        "87": 36,
        "88": 40,
        "89": 11,
        "90": 86,
        "91": 86,
        "92": 113,
        "93": 113,
        "94": 113,
        "95": 113,
        "96": 113,
        "97": 113,
        "98": 86,
        "99": 86,
        "100": 11,
        "101": 31,
        "102": 11,
        "103": 27,
        "104": 11,
        "105": 25,
        "106": 3,
        "107": 22,
        "108": 12,
        "109": 10,
        "110": 11,
        "111": 19,
        "112": 11,
        "113": 19,
        "114": 3,
        "115": 16,
        "116": 8,
        "117": 8,
        "118": 11,
        "119": 12,
        "120": 11,
        "121": 11,
        "122": 199,
        "123": 191,
        "124": 11,
        "125": 209,
        "126": 11,
        "127": 6,
        "128": 11,
        "129": 25,
        "130": 11,
        "131": 25
      },
      "f": {
        "0": 377,
        "1": 10,
        "2": 30,
        "3": 29,
        "4": 1,
        "5": 76,
        "6": 0,
        "7": 0,
        "8": 61,
        "9": 153,
        "10": 40,
        "11": 36,
        "12": 311,
        "13": 91,
        "14": 110,
        "15": 132,
        "16": 122,
        "17": 126,
        "18": 120,
        "19": 613,
        "20": 41,
        "21": 59,
        "22": 157,
        "23": 5,
        "24": 10,
        "25": 5,
        "26": 11,
        "27": 33,
        "28": 40,
        "29": 14,
        "30": 36,
        "31": 40,
        "32": 86,
        "33": 113,
        "34": 113,
        "35": 86,
        "36": 31,
        "37": 27,
        "38": 25,
        "39": 19,
        "40": 19,
        "41": 12,
        "42": 199,
        "43": 191,
        "44": 209,
        "45": 6,
        "46": 25,
        "47": 25
      },
      "b": {
        "0": [311, 12],
        "1": [1, 4],
        "2": [1, 3],
        "3": [1, 2],
        "4": [1, 1],
        "5": [2, 8],
        "6": [2, 6],
        "7": [2, 4],
        "8": [2, 2],
        "9": [28, 85],
        "10": [12, 73],
        "11": [18, 55],
        "12": [10, 45],
        "13": [3],
        "14": [12],
        "15": [2, 17],
        "16": [3],
        "17": [8],
        "18": [174, 17]
      }
    },
    "/Users/sam/code/work/pepr/src/lib/mutate-request.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/mutate-request.ts",
      "statementMap": {
        "0": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 36 } },
        "1": { "start": { "line": 7, "column": 0 }, "end": { "line": 7, "column": 46 } },
        "2": { "start": { "line": 15, "column": 4 }, "end": { "line": 15, "column": 31 } },
        "3": { "start": { "line": 19, "column": 4 }, "end": { "line": 19, "column": 30 } },
        "4": { "start": { "line": 23, "column": 4 }, "end": { "line": 23, "column": 33 } },
        "5": { "start": { "line": 27, "column": 4 }, "end": { "line": 27, "column": 23 } },
        "6": { "start": { "line": 31, "column": 4 }, "end": { "line": 31, "column": 24 } },
        "7": { "start": { "line": 33, "column": 4 }, "end": { "line": 38, "column": 5 } },
        "8": { "start": { "line": 34, "column": 6 }, "end": { "line": 34, "column": 45 } },
        "9": { "start": { "line": 37, "column": 6 }, "end": { "line": 37, "column": 37 } },
        "10": { "start": { "line": 40, "column": 4 }, "end": { "line": 42, "column": 5 } },
        "11": { "start": { "line": 41, "column": 6 }, "end": { "line": 41, "column": 80 } },
        "12": { "start": { "line": 45, "column": 10 }, "end": { "line": 47, "column": 3 } },
        "13": { "start": { "line": 46, "column": 4 }, "end": { "line": 46, "column": 61 } },
        "14": { "start": { "line": 49, "column": 13 }, "end": { "line": 55, "column": 3 } },
        "15": { "start": { "line": 50, "column": 16 }, "end": { "line": 50, "column": 24 } },
        "16": { "start": { "line": 51, "column": 4 }, "end": { "line": 51, "column": 38 } },
        "17": { "start": { "line": 52, "column": 4 }, "end": { "line": 52, "column": 52 } },
        "18": { "start": { "line": 53, "column": 4 }, "end": { "line": 53, "column": 37 } },
        "19": { "start": { "line": 54, "column": 4 }, "end": { "line": 54, "column": 16 } },
        "20": { "start": { "line": 57, "column": 18 }, "end": { "line": 63, "column": 3 } },
        "21": { "start": { "line": 58, "column": 16 }, "end": { "line": 58, "column": 24 } },
        "22": { "start": { "line": 59, "column": 4 }, "end": { "line": 59, "column": 38 } },
        "23": { "start": { "line": 60, "column": 4 }, "end": { "line": 60, "column": 62 } },
        "24": { "start": { "line": 61, "column": 4 }, "end": { "line": 61, "column": 42 } },
        "25": { "start": { "line": 62, "column": 4 }, "end": { "line": 62, "column": 16 } },
        "26": { "start": { "line": 65, "column": 16 }, "end": { "line": 70, "column": 3 } },
        "27": { "start": { "line": 66, "column": 4 }, "end": { "line": 68, "column": 5 } },
        "28": { "start": { "line": 67, "column": 6 }, "end": { "line": 67, "column": 43 } },
        "29": { "start": { "line": 69, "column": 4 }, "end": { "line": 69, "column": 16 } },
        "30": { "start": { "line": 72, "column": 21 }, "end": { "line": 77, "column": 3 } },
        "31": { "start": { "line": 73, "column": 4 }, "end": { "line": 75, "column": 5 } },
        "32": { "start": { "line": 74, "column": 6 }, "end": { "line": 74, "column": 48 } },
        "33": { "start": { "line": 76, "column": 4 }, "end": { "line": 76, "column": 16 } },
        "34": { "start": { "line": 79, "column": 13 }, "end": { "line": 81, "column": 3 } },
        "35": { "start": { "line": 80, "column": 4 }, "end": { "line": 80, "column": 58 } },
        "36": { "start": { "line": 83, "column": 18 }, "end": { "line": 85, "column": 3 } },
        "37": { "start": { "line": 84, "column": 4 }, "end": { "line": 84, "column": 63 } },
        "38": { "start": { "line": 10, "column": 0 }, "end": { "line": 10, "column": 13 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 14, "column": 2 }, "end": { "line": 14, "column": 6 } },
          "loc": { "start": { "line": 14, "column": 23 }, "end": { "line": 16, "column": 3 } }
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 18, "column": 2 }, "end": { "line": 18, "column": 6 } },
          "loc": { "start": { "line": 18, "column": 14 }, "end": { "line": 20, "column": 3 } }
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 22, "column": 2 }, "end": { "line": 22, "column": 6 } },
          "loc": { "start": { "line": 22, "column": 17 }, "end": { "line": 24, "column": 3 } }
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 26, "column": 2 }, "end": { "line": 26, "column": 6 } },
          "loc": { "start": { "line": 26, "column": 13 }, "end": { "line": 28, "column": 3 } }
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 30, "column": 2 }, "end": { "line": 30, "column": 14 } },
          "loc": { "start": { "line": 30, "column": 40 }, "end": { "line": 43, "column": 3 } }
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 45, "column": 10 }, "end": { "line": 45, "column": 11 } },
          "loc": { "start": { "line": 45, "column": 40 }, "end": { "line": 47, "column": 3 } }
        },
        "6": {
          "name": "(anonymous_6)",
          "decl": { "start": { "line": 49, "column": 13 }, "end": { "line": 49, "column": 14 } },
          "loc": { "start": { "line": 49, "column": 50 }, "end": { "line": 55, "column": 3 } }
        },
        "7": {
          "name": "(anonymous_7)",
          "decl": { "start": { "line": 57, "column": 18 }, "end": { "line": 57, "column": 19 } },
          "loc": { "start": { "line": 57, "column": 55 }, "end": { "line": 63, "column": 3 } }
        },
        "8": {
          "name": "(anonymous_8)",
          "decl": { "start": { "line": 65, "column": 16 }, "end": { "line": 65, "column": 17 } },
          "loc": { "start": { "line": 65, "column": 38 }, "end": { "line": 70, "column": 3 } }
        },
        "9": {
          "name": "(anonymous_9)",
          "decl": { "start": { "line": 72, "column": 21 }, "end": { "line": 72, "column": 22 } },
          "loc": { "start": { "line": 72, "column": 43 }, "end": { "line": 77, "column": 3 } }
        },
        "10": {
          "name": "(anonymous_10)",
          "decl": { "start": { "line": 79, "column": 13 }, "end": { "line": 79, "column": 14 } },
          "loc": { "start": { "line": 79, "column": 38 }, "end": { "line": 81, "column": 3 } }
        },
        "11": {
          "name": "(anonymous_11)",
          "decl": { "start": { "line": 83, "column": 18 }, "end": { "line": 83, "column": 19 } },
          "loc": { "start": { "line": 83, "column": 43 }, "end": { "line": 85, "column": 3 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 33, "column": 4 }, "end": { "line": 38, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 33, "column": 4 }, "end": { "line": 38, "column": 5 } },
            { "start": { "line": 35, "column": 11 }, "end": { "line": 38, "column": 5 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 40, "column": 4 }, "end": { "line": 42, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 40, "column": 4 }, "end": { "line": 42, "column": 5 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 51, "column": 19 }, "end": { "line": 51, "column": 37 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 51, "column": 19 }, "end": { "line": 51, "column": 31 } },
            { "start": { "line": 51, "column": 35 }, "end": { "line": 51, "column": 37 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 52, "column": 26 }, "end": { "line": 52, "column": 51 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 52, "column": 26 }, "end": { "line": 52, "column": 45 } },
            { "start": { "line": 52, "column": 49 }, "end": { "line": 52, "column": 51 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 59, "column": 19 }, "end": { "line": 59, "column": 37 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 59, "column": 19 }, "end": { "line": 59, "column": 31 } },
            { "start": { "line": 59, "column": 35 }, "end": { "line": 59, "column": 37 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 60, "column": 31 }, "end": { "line": 60, "column": 61 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 60, "column": 31 }, "end": { "line": 60, "column": 55 } },
            { "start": { "line": 60, "column": 59 }, "end": { "line": 60, "column": 61 } }
          ]
        },
        "6": {
          "loc": { "start": { "line": 66, "column": 4 }, "end": { "line": 68, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 66, "column": 4 }, "end": { "line": 68, "column": 5 } }
          ]
        },
        "7": {
          "loc": { "start": { "line": 73, "column": 4 }, "end": { "line": 75, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 73, "column": 4 }, "end": { "line": 75, "column": 5 } }
          ]
        }
      },
      "s": {
        "0": 7,
        "1": 7,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 32,
        "6": 42,
        "7": 42,
        "8": 3,
        "9": 39,
        "10": 42,
        "11": 1,
        "12": 42,
        "13": 7,
        "14": 42,
        "15": 2,
        "16": 2,
        "17": 2,
        "18": 2,
        "19": 2,
        "20": 42,
        "21": 9,
        "22": 9,
        "23": 9,
        "24": 9,
        "25": 9,
        "26": 42,
        "27": 2,
        "28": 1,
        "29": 2,
        "30": 42,
        "31": 2,
        "32": 1,
        "33": 2,
        "34": 42,
        "35": 3,
        "36": 42,
        "37": 5,
        "38": 7
      },
      "f": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 32,
        "4": 42,
        "5": 7,
        "6": 2,
        "7": 9,
        "8": 2,
        "9": 2,
        "10": 3,
        "11": 5
      },
      "b": {
        "0": [3, 39],
        "1": [1],
        "2": [2, 1],
        "3": [2, 1],
        "4": [9, 1],
        "5": [9, 5],
        "6": [1],
        "7": [1]
      }
    },
    "/Users/sam/code/work/pepr/src/lib/utils.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/utils.ts",
      "statementMap": {
        "0": { "start": { "line": 14, "column": 0 }, "end": { "line": 14, "column": 16 } },
        "1": { "start": { "line": 28, "column": 0 }, "end": { "line": 28, "column": 16 } },
        "2": { "start": { "line": 50, "column": 0 }, "end": { "line": 50, "column": 16 } },
        "3": { "start": { "line": 55, "column": 0 }, "end": { "line": 55, "column": 16 } },
        "4": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 37 } },
        "5": { "start": { "line": 7, "column": 13 }, "end": { "line": 7, "column": 50 } },
        "6": { "start": { "line": 15, "column": 2 }, "end": { "line": 15, "column": 28 } },
        "7": { "start": { "line": 16, "column": 2 }, "end": { "line": 20, "column": 3 } },
        "8": { "start": { "line": 17, "column": 18 }, "end": { "line": 17, "column": 31 } },
        "9": { "start": { "line": 19, "column": 4 }, "end": { "line": 19, "column": 69 } },
        "10": { "start": { "line": 29, "column": 25 }, "end": { "line": 29, "column": 27 } },
        "11": { "start": { "line": 31, "column": 2 }, "end": { "line": 31, "column": 28 } },
        "12": { "start": { "line": 32, "column": 2 }, "end": { "line": 44, "column": 3 } },
        "13": { "start": { "line": 33, "column": 4 }, "end": { "line": 43, "column": 5 } },
        "14": { "start": { "line": 34, "column": 6 }, "end": { "line": 34, "column": 25 } },
        "15": { "start": { "line": 36, "column": 22 }, "end": { "line": 36, "column": 49 } },
        "16": { "start": { "line": 37, "column": 6 }, "end": { "line": 42, "column": 7 } },
        "17": { "start": { "line": 39, "column": 8 }, "end": { "line": 39, "column": 32 } },
        "18": { "start": { "line": 41, "column": 8 }, "end": { "line": 41, "column": 23 } },
        "19": { "start": { "line": 45, "column": 2 }, "end": { "line": 45, "column": 92 } },
        "20": { "start": { "line": 46, "column": 2 }, "end": { "line": 46, "column": 14 } },
        "21": { "start": { "line": 51, "column": 2 }, "end": { "line": 51, "column": 55 } },
        "22": { "start": { "line": 56, "column": 2 }, "end": { "line": 56, "column": 46 } }
      },
      "fnMap": {
        "0": {
          "name": "convertToBase64Map",
          "decl": { "start": { "line": 14, "column": 16 }, "end": { "line": 14, "column": 34 } },
          "loc": { "start": { "line": 14, "column": 89 }, "end": { "line": 21, "column": 1 } }
        },
        "1": {
          "name": "convertFromBase64Map",
          "decl": { "start": { "line": 28, "column": 16 }, "end": { "line": 28, "column": 36 } },
          "loc": { "start": { "line": 28, "column": 75 }, "end": { "line": 47, "column": 1 } }
        },
        "2": {
          "name": "base64Decode",
          "decl": { "start": { "line": 50, "column": 16 }, "end": { "line": 50, "column": 28 } },
          "loc": { "start": { "line": 50, "column": 41 }, "end": { "line": 52, "column": 1 } }
        },
        "3": {
          "name": "base64Encode",
          "decl": { "start": { "line": 55, "column": 16 }, "end": { "line": 55, "column": 28 } },
          "loc": { "start": { "line": 55, "column": 41 }, "end": { "line": 57, "column": 1 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 15, "column": 13 }, "end": { "line": 15, "column": 27 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 15, "column": 13 }, "end": { "line": 15, "column": 21 } },
            { "start": { "line": 15, "column": 25 }, "end": { "line": 15, "column": 27 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 19, "column": 20 }, "end": { "line": 19, "column": 68 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 19, "column": 41 }, "end": { "line": 19, "column": 46 } },
            { "start": { "line": 19, "column": 49 }, "end": { "line": 19, "column": 68 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 31, "column": 13 }, "end": { "line": 31, "column": 27 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 31, "column": 13 }, "end": { "line": 31, "column": 21 } },
            { "start": { "line": 31, "column": 25 }, "end": { "line": 31, "column": 27 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 33, "column": 4 }, "end": { "line": 43, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 33, "column": 4 }, "end": { "line": 43, "column": 5 } },
            { "start": { "line": 35, "column": 11 }, "end": { "line": 43, "column": 5 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 37, "column": 6 }, "end": { "line": 42, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 37, "column": 6 }, "end": { "line": 42, "column": 7 } },
            { "start": { "line": 40, "column": 13 }, "end": { "line": 42, "column": 7 } }
          ]
        }
      },
      "s": {
        "0": 7,
        "1": 7,
        "2": 7,
        "3": 7,
        "4": 7,
        "5": 7,
        "6": 2,
        "7": 2,
        "8": 4,
        "9": 4,
        "10": 2,
        "11": 2,
        "12": 2,
        "13": 5,
        "14": 1,
        "15": 4,
        "16": 4,
        "17": 2,
        "18": 2,
        "19": 2,
        "20": 2,
        "21": 5,
        "22": 7
      },
      "f": { "0": 2, "1": 2, "2": 5, "3": 7 },
      "b": { "0": [2, 1], "1": [2, 2], "2": [2, 1], "3": [1, 4], "4": [2, 2] }
    },
    "/Users/sam/code/work/pepr/src/cli/init/enums.ts": {
      "path": "/Users/sam/code/work/pepr/src/cli/init/enums.ts",
      "statementMap": {
        "0": { "start": { "line": 1, "column": 0 }, "end": { "line": 1, "column": null } },
        "1": { "start": { "line": 2, "column": 2 }, "end": { "line": 2, "column": null } },
        "2": { "start": { "line": 3, "column": 2 }, "end": { "line": 3, "column": null } },
        "3": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": null } },
        "4": { "start": { "line": 6, "column": 2 }, "end": { "line": 6, "column": null } },
        "5": { "start": { "line": 7, "column": 2 }, "end": { "line": 7, "column": null } },
        "6": { "start": { "line": 8, "column": 2 }, "end": { "line": 8, "column": null } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 1, "column": 0 }, "end": { "line": 1, "column": 12 } },
          "loc": { "start": { "line": 1, "column": 20 }, "end": { "line": 4, "column": 1 } }
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 12 } },
          "loc": { "start": { "line": 5, "column": 19 }, "end": { "line": 9, "column": 1 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 1, "column": 12 }, "end": { "line": 1, "column": null } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 1, "column": 12 }, "end": { "line": 1, "column": 20 } },
            { "start": { "line": 1, "column": 20 }, "end": { "line": 1, "column": null } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 5, "column": 12 }, "end": { "line": 5, "column": null } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 5, "column": 12 }, "end": { "line": 5, "column": 19 } },
            { "start": { "line": 5, "column": 19 }, "end": { "line": 5, "column": null } }
          ]
        }
      },
      "s": { "0": 6, "1": 6, "2": 6, "3": 6, "4": 6, "5": 6, "6": 6 },
      "f": { "0": 6, "1": 6 },
      "b": { "0": [6, 6], "1": [6, 6] }
    },
    "/Users/sam/code/work/pepr/src/lib/assets/webhooks.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/assets/webhooks.ts",
      "statementMap": {
        "0": { "start": { "line": 42, "column": 0 }, "end": { "line": 42, "column": 16 } },
        "1": { "start": { "line": 57, "column": 0 }, "end": { "line": 57, "column": 7 } },
        "2": { "start": { "line": 71, "column": 0 }, "end": { "line": 71, "column": 7 } },
        "3": { "start": { "line": 10, "column": 0 }, "end": { "line": 10, "column": 49 } },
        "4": { "start": { "line": 13, "column": 0 }, "end": { "line": 13, "column": 46 } },
        "5": { "start": { "line": 16, "column": 13 }, "end": { "line": 16, "column": 77 } },
        "6": { "start": { "line": 18, "column": 21 }, "end": { "line": 40, "column": 1 } },
        "7": { "start": { "line": 19, "column": 48 }, "end": { "line": 19, "column": 55 } },
        "8": { "start": { "line": 22, "column": 2 }, "end": { "line": 24, "column": 3 } },
        "9": { "start": { "line": 23, "column": 4 }, "end": { "line": 23, "column": 21 } },
        "10": { "start": { "line": 27, "column": 21 }, "end": { "line": 27, "column": 94 } },
        "11": { "start": { "line": 30, "column": 19 }, "end": { "line": 30, "column": 63 } },
        "12": { "start": { "line": 32, "column": 43 }, "end": { "line": 37, "column": 4 } },
        "13": { "start": { "line": 39, "column": 2 }, "end": { "line": 39, "column": 20 } },
        "14": { "start": { "line": 43, "column": 23 }, "end": { "line": 43, "column": 69 } },
        "15": { "start": { "line": 44, "column": 2 }, "end": { "line": 46, "column": 3 } },
        "16": { "start": { "line": 45, "column": 4 }, "end": { "line": 45, "column": 27 } },
        "17": { "start": { "line": 48, "column": 21 }, "end": { "line": 48, "column": 65 } },
        "18": { "start": { "line": 48, "column": 55 }, "end": { "line": 48, "column": 64 } },
        "19": { "start": { "line": 51, "column": 2 }, "end": { "line": 53, "column": 3 } },
        "20": { "start": { "line": 52, "column": 4 }, "end": { "line": 52, "column": 40 } },
        "21": { "start": { "line": 54, "column": 2 }, "end": { "line": 54, "column": 48 } },
        "22": { "start": { "line": 54, "column": 33 }, "end": { "line": 54, "column": 46 } },
        "23": { "start": { "line": 58, "column": 35 }, "end": { "line": 58, "column": 41 } },
        "24": { "start": { "line": 60, "column": 16 }, "end": { "line": 66, "column": 4 } },
        "25": { "start": { "line": 61, "column": 4 }, "end": { "line": 61, "column": 77 } },
        "26": { "start": { "line": 63, "column": 4 }, "end": { "line": 65, "column": 62 } },
        "27": { "start": { "line": 64, "column": 22 }, "end": { "line": 64, "column": 60 } },
        "28": { "start": { "line": 65, "column": 54 }, "end": { "line": 65, "column": 60 } },
        "29": { "start": { "line": 68, "column": 2 }, "end": { "line": 68, "column": 33 } },
        "30": { "start": { "line": 76, "column": 47 }, "end": { "line": 76, "column": 49 } },
        "31": { "start": { "line": 78, "column": 48 }, "end": { "line": 78, "column": 54 } },
        "32": { "start": { "line": 79, "column": 19 }, "end": { "line": 79, "column": 106 } },
        "33": { "start": { "line": 82, "column": 2 }, "end": { "line": 88, "column": 3 } },
        "34": { "start": { "line": 83, "column": 4 }, "end": { "line": 87, "column": 7 } },
        "35": { "start": { "line": 90, "column": 56 }, "end": { "line": 92, "column": 4 } },
        "36": { "start": { "line": 95, "column": 18 }, "end": { "line": 95, "column": 52 } },
        "37": { "start": { "line": 98, "column": 2 }, "end": { "line": 107, "column": 3 } },
        "38": { "start": { "line": 99, "column": 4 }, "end": { "line": 99, "column": 56 } },
        "39": { "start": { "line": 102, "column": 4 }, "end": { "line": 106, "column": 6 } },
        "40": { "start": { "line": 109, "column": 19 }, "end": { "line": 109, "column": 58 } },
        "41": { "start": { "line": 110, "column": 16 }, "end": { "line": 110, "column": 60 } },
        "42": { "start": { "line": 113, "column": 2 }, "end": { "line": 115, "column": 3 } },
        "43": { "start": { "line": 114, "column": 4 }, "end": { "line": 114, "column": 16 } },
        "44": { "start": { "line": 117, "column": 2 }, "end": { "line": 137, "column": 4 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 18, "column": 21 }, "end": { "line": 18, "column": 22 } },
          "loc": { "start": { "line": 18, "column": 102 }, "end": { "line": 40, "column": 1 } }
        },
        "1": {
          "name": "resolveIgnoreNamespaces",
          "decl": { "start": { "line": 42, "column": 16 }, "end": { "line": 42, "column": 39 } },
          "loc": { "start": { "line": 42, "column": 70 }, "end": { "line": 55, "column": 1 } }
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 48, "column": 49 }, "end": { "line": 48, "column": 51 } },
          "loc": { "start": { "line": 48, "column": 55 }, "end": { "line": 48, "column": 64 } }
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 54, "column": 27 }, "end": { "line": 54, "column": 29 } },
          "loc": { "start": { "line": 54, "column": 33 }, "end": { "line": 54, "column": 46 } }
        },
        "4": {
          "name": "generateWebhookRules",
          "decl": { "start": { "line": 57, "column": 22 }, "end": { "line": 57, "column": 42 } },
          "loc": { "start": { "line": 57, "column": 83 }, "end": { "line": 69, "column": 1 } }
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 60, "column": 37 }, "end": { "line": 60, "column": 47 } },
          "loc": { "start": { "line": 60, "column": 50 }, "end": { "line": 66, "column": 3 } }
        },
        "6": {
          "name": "(anonymous_6)",
          "decl": { "start": { "line": 64, "column": 11 }, "end": { "line": 64, "column": 18 } },
          "loc": { "start": { "line": 64, "column": 22 }, "end": { "line": 64, "column": 60 } }
        },
        "7": {
          "name": "(anonymous_7)",
          "decl": { "start": { "line": 65, "column": 14 }, "end": { "line": 65, "column": 15 } },
          "loc": { "start": { "line": 65, "column": 54 }, "end": { "line": 65, "column": 60 } }
        },
        "8": {
          "name": "webhookConfigGenerator",
          "decl": { "start": { "line": 71, "column": 22 }, "end": { "line": 71, "column": 44 } },
          "loc": { "start": { "line": 74, "column": 21 }, "end": { "line": 138, "column": 1 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 22, "column": 2 }, "end": { "line": 24, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 22, "column": 2 }, "end": { "line": 24, "column": 3 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 22, "column": 6 }, "end": { "line": 22, "column": 73 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 22, "column": 7 }, "end": { "line": 22, "column": 22 } },
            { "start": { "line": 22, "column": 26 }, "end": { "line": 22, "column": 35 } },
            { "start": { "line": 22, "column": 41 }, "end": { "line": 22, "column": 57 } },
            { "start": { "line": 22, "column": 61 }, "end": { "line": 22, "column": 72 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 27, "column": 21 }, "end": { "line": 27, "column": 94 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 27, "column": 56 }, "end": { "line": 27, "column": 84 } },
            { "start": { "line": 27, "column": 87 }, "end": { "line": 27, "column": 94 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 30, "column": 19 }, "end": { "line": 30, "column": 63 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 30, "column": 19 }, "end": { "line": 30, "column": 30 } },
            { "start": { "line": 30, "column": 34 }, "end": { "line": 30, "column": 63 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 34, "column": 18 }, "end": { "line": 34, "column": 37 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 34, "column": 18 }, "end": { "line": 34, "column": 30 } },
            { "start": { "line": 34, "column": 34 }, "end": { "line": 34, "column": 37 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 36, "column": 30 }, "end": { "line": 36, "column": 85 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 36, "column": 52 }, "end": { "line": 36, "column": 80 } },
            { "start": { "line": 36, "column": 83 }, "end": { "line": 36, "column": 85 } }
          ]
        },
        "6": {
          "loc": { "start": { "line": 42, "column": 40 }, "end": { "line": 42, "column": 70 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 42, "column": 68 }, "end": { "line": 42, "column": 70 } }
          ]
        },
        "7": {
          "loc": { "start": { "line": 44, "column": 2 }, "end": { "line": 46, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 44, "column": 2 }, "end": { "line": 46, "column": 3 } }
          ]
        },
        "8": {
          "loc": { "start": { "line": 51, "column": 2 }, "end": { "line": 53, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 51, "column": 2 }, "end": { "line": 53, "column": 3 } }
          ]
        },
        "9": {
          "loc": { "start": { "line": 74, "column": 2 }, "end": { "line": 74, "column": 21 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 74, "column": 19 }, "end": { "line": 74, "column": 21 } }
          ]
        },
        "10": {
          "loc": { "start": { "line": 82, "column": 2 }, "end": { "line": 88, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 82, "column": 2 }, "end": { "line": 88, "column": 3 } }
          ]
        },
        "11": {
          "loc": { "start": { "line": 98, "column": 2 }, "end": { "line": 107, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 98, "column": 2 }, "end": { "line": 107, "column": 3 } },
            { "start": { "line": 100, "column": 9 }, "end": { "line": 107, "column": 3 } }
          ]
        },
        "12": {
          "loc": { "start": { "line": 113, "column": 2 }, "end": { "line": 115, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 113, "column": 2 }, "end": { "line": 115, "column": 3 } }
          ]
        },
        "13": {
          "loc": { "start": { "line": 119, "column": 10 }, "end": { "line": 119, "column": 86 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 119, "column": 21 }, "end": { "line": 119, "column": 51 } },
            { "start": { "line": 119, "column": 54 }, "end": { "line": 119, "column": 86 } }
          ]
        },
        "14": {
          "loc": { "start": { "line": 126, "column": 23 }, "end": { "line": 126, "column": 70 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 126, "column": 53 }, "end": { "line": 126, "column": 59 } },
            { "start": { "line": 126, "column": 62 }, "end": { "line": 126, "column": 70 } }
          ]
        }
      },
      "s": {
        "0": 6,
        "1": 6,
        "2": 6,
        "3": 6,
        "4": 6,
        "5": 6,
        "6": 6,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 3,
        "15": 3,
        "16": 2,
        "17": 1,
        "18": 2,
        "19": 1,
        "20": 1,
        "21": 1,
        "22": 4,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0
      },
      "f": { "0": 0, "1": 3, "2": 2, "3": 4, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0 },
      "b": {
        "0": [0],
        "1": [0, 0, 0, 0],
        "2": [0, 0],
        "3": [0, 0],
        "4": [0, 0],
        "5": [0, 0],
        "6": [1],
        "7": [2],
        "8": [1],
        "9": [0],
        "10": [0],
        "11": [0, 0],
        "12": [0],
        "13": [0, 0],
        "14": [0, 0]
      }
    },
    "/Users/sam/code/work/pepr/src/lib/processors/validate-processor.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/processors/validate-processor.ts",
      "statementMap": {
        "0": { "start": { "line": 15, "column": 0 }, "end": { "line": 15, "column": 7 } },
        "1": { "start": { "line": 55, "column": 0 }, "end": { "line": 55, "column": 7 } },
        "2": { "start": { "line": 6, "column": 0 }, "end": { "line": 6, "column": 53 } },
        "3": { "start": { "line": 9, "column": 0 }, "end": { "line": 9, "column": 38 } },
        "4": { "start": { "line": 10, "column": 0 }, "end": { "line": 10, "column": 48 } },
        "5": { "start": { "line": 11, "column": 0 }, "end": { "line": 11, "column": 58 } },
        "6": { "start": { "line": 13, "column": 0 }, "end": { "line": 13, "column": 61 } },
        "7": { "start": { "line": 20, "column": 16 }, "end": { "line": 20, "column": 46 } },
        "8": { "start": { "line": 21, "column": 2 }, "end": { "line": 21, "column": 70 } },
        "9": { "start": { "line": 23, "column": 36 }, "end": { "line": 26, "column": 4 } },
        "10": { "start": { "line": 28, "column": 2 }, "end": { "line": 52, "column": 3 } },
        "11": { "start": { "line": 30, "column": 25 }, "end": { "line": 30, "column": 77 } },
        "12": { "start": { "line": 31, "column": 4 }, "end": { "line": 31, "column": 43 } },
        "13": { "start": { "line": 34, "column": 4 }, "end": { "line": 39, "column": 5 } },
        "14": { "start": { "line": 35, "column": 6 }, "end": { "line": 38, "column": 8 } },
        "15": { "start": { "line": 41, "column": 4 }, "end": { "line": 41, "column": 118 } },
        "16": { "start": { "line": 42, "column": 4 }, "end": { "line": 42, "column": 19 } },
        "17": { "start": { "line": 45, "column": 4 }, "end": { "line": 45, "column": 69 } },
        "18": { "start": { "line": 46, "column": 4 }, "end": { "line": 46, "column": 28 } },
        "19": { "start": { "line": 47, "column": 4 }, "end": { "line": 50, "column": 6 } },
        "20": { "start": { "line": 51, "column": 4 }, "end": { "line": 51, "column": 19 } },
        "21": { "start": { "line": 61, "column": 18 }, "end": { "line": 61, "column": 46 } },
        "22": { "start": { "line": 62, "column": 39 }, "end": { "line": 62, "column": 41 } },
        "23": { "start": { "line": 65, "column": 19 }, "end": { "line": 65, "column": 74 } },
        "24": { "start": { "line": 66, "column": 2 }, "end": { "line": 68, "column": 3 } },
        "25": { "start": { "line": 67, "column": 4 }, "end": { "line": 67, "column": 64 } },
        "26": { "start": { "line": 70, "column": 2 }, "end": { "line": 70, "column": 57 } },
        "27": { "start": { "line": 72, "column": 2 }, "end": { "line": 96, "column": 3 } },
        "28": { "start": { "line": 73, "column": 27 }, "end": { "line": 73, "column": 51 } },
        "29": { "start": { "line": 75, "column": 4 }, "end": { "line": 95, "column": 5 } },
        "30": { "start": { "line": 77, "column": 6 }, "end": { "line": 79, "column": 7 } },
        "31": { "start": { "line": 78, "column": 8 }, "end": { "line": 78, "column": 17 } },
        "32": { "start": { "line": 82, "column": 25 }, "end": { "line": 86, "column": null } },
        "33": { "start": { "line": 88, "column": 6 }, "end": { "line": 91, "column": 7 } },
        "34": { "start": { "line": 89, "column": 8 }, "end": { "line": 89, "column": 30 } },
        "35": { "start": { "line": 90, "column": 8 }, "end": { "line": 90, "column": 17 } },
        "36": { "start": { "line": 93, "column": 19 }, "end": { "line": 93, "column": 73 } },
        "37": { "start": { "line": 94, "column": 6 }, "end": { "line": 94, "column": 26 } },
        "38": { "start": { "line": 98, "column": 2 }, "end": { "line": 98, "column": 18 } }
      },
      "fnMap": {
        "0": {
          "name": "processRequest",
          "decl": { "start": { "line": 15, "column": 22 }, "end": { "line": 15, "column": 36 } },
          "loc": { "start": { "line": 18, "column": 60 }, "end": { "line": 53, "column": 1 } }
        },
        "1": {
          "name": "validateProcessor",
          "decl": { "start": { "line": 55, "column": 22 }, "end": { "line": 55, "column": 39 } },
          "loc": { "start": { "line": 59, "column": 37 }, "end": { "line": 99, "column": 1 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 34, "column": 4 }, "end": { "line": 39, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 34, "column": 4 }, "end": { "line": 39, "column": 5 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 34, "column": 8 }, "end": { "line": 34, "column": 61 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 34, "column": 8 }, "end": { "line": 34, "column": 31 } },
            { "start": { "line": 34, "column": 35 }, "end": { "line": 34, "column": 61 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 36, "column": 14 }, "end": { "line": 36, "column": 44 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 36, "column": 14 }, "end": { "line": 36, "column": 37 } },
            { "start": { "line": 36, "column": 41 }, "end": { "line": 36, "column": 44 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 37, "column": 17 }, "end": { "line": 37, "column": 78 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 37, "column": 17 }, "end": { "line": 37, "column": 43 } },
            { "start": { "line": 37, "column": 47 }, "end": { "line": 37, "column": 78 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 41, "column": 71 }, "end": { "line": 41, "column": 114 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 41, "column": 94 }, "end": { "line": 41, "column": 103 } },
            { "start": { "line": 41, "column": 106 }, "end": { "line": 41, "column": 114 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 65, "column": 19 }, "end": { "line": 65, "column": 74 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 65, "column": 19 }, "end": { "line": 65, "column": 44 } },
            { "start": { "line": 65, "column": 48 }, "end": { "line": 65, "column": 74 } }
          ]
        },
        "6": {
          "loc": { "start": { "line": 66, "column": 2 }, "end": { "line": 68, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 66, "column": 2 }, "end": { "line": 68, "column": 3 } }
          ]
        },
        "7": {
          "loc": { "start": { "line": 77, "column": 6 }, "end": { "line": 79, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 77, "column": 6 }, "end": { "line": 79, "column": 7 } }
          ]
        },
        "8": {
          "loc": { "start": { "line": 88, "column": 6 }, "end": { "line": 91, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 88, "column": 6 }, "end": { "line": 91, "column": 7 } }
          ]
        }
      },
      "s": {
        "0": 3,
        "1": 3,
        "2": 3,
        "3": 3,
        "4": 3,
        "5": 3,
        "6": 3,
        "7": 2,
        "8": 2,
        "9": 2,
        "10": 2,
        "11": 2,
        "12": 1,
        "13": 1,
        "14": 1,
        "15": 1,
        "16": 1,
        "17": 1,
        "18": 1,
        "19": 1,
        "20": 1,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0
      },
      "f": { "0": 2, "1": 0 },
      "b": {
        "0": [1],
        "1": [1, 0],
        "2": [1, 0],
        "3": [1, 0],
        "4": [1, 0],
        "5": [0, 0],
        "6": [0],
        "7": [0],
        "8": [0]
      }
    },
    "/Users/sam/code/work/pepr/src/lib/validate-request.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/validate-request.ts",
      "statementMap": {
        "0": { "start": { "line": 8, "column": 0 }, "end": { "line": 8, "column": 30 } },
        "1": { "start": { "line": 11, "column": 0 }, "end": { "line": 11, "column": 36 } },
        "2": { "start": { "line": 27, "column": 4 }, "end": { "line": 27, "column": 33 } },
        "3": { "start": { "line": 35, "column": 4 }, "end": { "line": 35, "column": 23 } },
        "4": { "start": { "line": 43, "column": 4 }, "end": { "line": 43, "column": 24 } },
        "5": { "start": { "line": 46, "column": 4 }, "end": { "line": 51, "column": 5 } },
        "6": { "start": { "line": 47, "column": 6 }, "end": { "line": 47, "column": 45 } },
        "7": { "start": { "line": 50, "column": 6 }, "end": { "line": 50, "column": 37 } },
        "8": { "start": { "line": 53, "column": 4 }, "end": { "line": 55, "column": 5 } },
        "9": { "start": { "line": 54, "column": 6 }, "end": { "line": 54, "column": 80 } },
        "10": { "start": { "line": 64, "column": 13 }, "end": { "line": 66, "column": 3 } },
        "11": { "start": { "line": 65, "column": 4 }, "end": { "line": 65, "column": 58 } },
        "12": { "start": { "line": 74, "column": 18 }, "end": { "line": 76, "column": 3 } },
        "13": { "start": { "line": 75, "column": 4 }, "end": { "line": 75, "column": 63 } },
        "14": { "start": { "line": 83, "column": 12 }, "end": { "line": 87, "column": 3 } },
        "15": { "start": { "line": 84, "column": 4 }, "end": { "line": 86, "column": 6 } },
        "16": { "start": { "line": 96, "column": 9 }, "end": { "line": 102, "column": 3 } },
        "17": { "start": { "line": 97, "column": 4 }, "end": { "line": 101, "column": 6 } },
        "18": { "start": { "line": 17, "column": 0 }, "end": { "line": 17, "column": 13 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 26, "column": 2 }, "end": { "line": 26, "column": 6 } },
          "loc": { "start": { "line": 26, "column": 17 }, "end": { "line": 28, "column": 3 } }
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 34, "column": 2 }, "end": { "line": 34, "column": 6 } },
          "loc": { "start": { "line": 34, "column": 13 }, "end": { "line": 36, "column": 3 } }
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 42, "column": 2 }, "end": { "line": 42, "column": 14 } },
          "loc": { "start": { "line": 42, "column": 40 }, "end": { "line": 56, "column": 3 } }
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 64, "column": 13 }, "end": { "line": 64, "column": 14 } },
          "loc": { "start": { "line": 64, "column": 38 }, "end": { "line": 66, "column": 3 } }
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 74, "column": 18 }, "end": { "line": 74, "column": 19 } },
          "loc": { "start": { "line": 74, "column": 43 }, "end": { "line": 76, "column": 3 } }
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 83, "column": 12 }, "end": { "line": 83, "column": 39 } },
          "loc": { "start": { "line": 83, "column": 41 }, "end": { "line": 87, "column": 3 } }
        },
        "6": {
          "name": "(anonymous_6)",
          "decl": { "start": { "line": 96, "column": 9 }, "end": { "line": 96, "column": 10 } },
          "loc": { "start": { "line": 96, "column": 81 }, "end": { "line": 102, "column": 3 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 46, "column": 4 }, "end": { "line": 51, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 46, "column": 4 }, "end": { "line": 51, "column": 5 } },
            { "start": { "line": 48, "column": 11 }, "end": { "line": 51, "column": 5 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 53, "column": 4 }, "end": { "line": 55, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 53, "column": 4 }, "end": { "line": 55, "column": 5 } }
          ]
        }
      },
      "s": {
        "0": 6,
        "1": 6,
        "2": 1,
        "3": 5,
        "4": 13,
        "5": 13,
        "6": 1,
        "7": 12,
        "8": 13,
        "9": 1,
        "10": 13,
        "11": 2,
        "12": 13,
        "13": 2,
        "14": 13,
        "15": 1,
        "16": 13,
        "17": 1,
        "18": 6
      },
      "f": { "0": 1, "1": 5, "2": 13, "3": 2, "4": 2, "5": 1, "6": 1 },
      "b": { "0": [1, 12], "1": [1] }
    },
    "/Users/sam/code/work/pepr/src/lib/controller/index.util.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/controller/index.util.ts",
      "statementMap": {
        "0": { "start": { "line": 13, "column": 0 }, "end": { "line": 13, "column": 16 } },
        "1": { "start": { "line": 21, "column": 0 }, "end": { "line": 21, "column": 16 } },
        "2": { "start": { "line": 14, "column": 2 }, "end": { "line": 18, "column": 4 } },
        "3": { "start": { "line": 22, "column": 20 }, "end": { "line": 22, "column": 59 } },
        "4": { "start": { "line": 22, "column": 35 }, "end": { "line": 22, "column": 45 } },
        "5": { "start": { "line": 25, "column": 4 }, "end": { "line": 41, "column": 10 } },
        "6": { "start": { "line": 37, "column": 28 }, "end": { "line": 37, "column": 39 } },
        "7": { "start": { "line": 38, "column": 27 }, "end": { "line": 38, "column": 47 } },
        "8": { "start": { "line": 42, "column": 2 }, "end": { "line": 46, "column": 4 } }
      },
      "fnMap": {
        "0": {
          "name": "karForMutate",
          "decl": { "start": { "line": 13, "column": 16 }, "end": { "line": 13, "column": 28 } },
          "loc": { "start": { "line": 13, "column": 47 }, "end": { "line": 19, "column": 1 } }
        },
        "1": {
          "name": "karForValidate",
          "decl": { "start": { "line": 21, "column": 16 }, "end": { "line": 21, "column": 30 } },
          "loc": { "start": { "line": 21, "column": 75 }, "end": { "line": 47, "column": 1 } }
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 22, "column": 30 }, "end": { "line": 22, "column": 31 } },
          "loc": { "start": { "line": 22, "column": 35 }, "end": { "line": 22, "column": 45 } }
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 37, "column": 22 }, "end": { "line": 37, "column": 24 } },
          "loc": { "start": { "line": 37, "column": 28 }, "end": { "line": 37, "column": 39 } }
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 38, "column": 19 }, "end": { "line": 38, "column": 23 } },
          "loc": { "start": { "line": 38, "column": 27 }, "end": { "line": 38, "column": 47 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 25, "column": 4 }, "end": { "line": 41, "column": 10 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 26, "column": 8 }, "end": { "line": 30, "column": null } },
            { "start": { "line": 31, "column": 8 }, "end": { "line": 41, "column": 10 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 35, "column": 18 }, "end": { "line": 35, "column": 39 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 35, "column": 30 }, "end": { "line": 35, "column": 33 } },
            { "start": { "line": 35, "column": 36 }, "end": { "line": 35, "column": 39 } }
          ]
        }
      },
      "s": { "0": 3, "1": 3, "2": 1, "3": 3, "4": 3, "5": 3, "6": 3, "7": 2, "8": 3 },
      "f": { "0": 1, "1": 3, "2": 3, "3": 3, "4": 2 },
      "b": { "0": [1, 2], "1": [1, 1] }
    },
    "/Users/sam/code/work/pepr/src/lib/errors.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/errors.ts",
      "statementMap": {
        "0": { "start": { "line": 11, "column": 0 }, "end": { "line": 11, "column": 16 } },
        "1": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 44 } },
        "2": { "start": { "line": 6, "column": 13 }, "end": { "line": 6, "column": 60 } },
        "3": { "start": { "line": 12, "column": 2 }, "end": { "line": 14, "column": 3 } },
        "4": { "start": { "line": 13, "column": 4 }, "end": { "line": 13, "column": 88 } }
      },
      "fnMap": {
        "0": {
          "name": "ValidateError",
          "decl": { "start": { "line": 11, "column": 16 }, "end": { "line": 11, "column": 29 } },
          "loc": { "start": { "line": 11, "column": 48 }, "end": { "line": 15, "column": 1 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 11, "column": 30 }, "end": { "line": 11, "column": 48 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 11, "column": 46 }, "end": { "line": 11, "column": 48 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 12, "column": 2 }, "end": { "line": 14, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 12, "column": 2 }, "end": { "line": 14, "column": 3 } }
          ]
        }
      },
      "s": { "0": 5, "1": 5, "2": 5, "3": 318, "4": 207 },
      "f": { "0": 318 },
      "b": { "0": [0], "1": [207] }
    },
    "/Users/sam/code/work/pepr/src/lib/processors/watch-processor.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/processors/watch-processor.ts",
      "statementMap": {
        "0": { "start": { "line": 23, "column": 0 }, "end": { "line": 23, "column": 16 } },
        "1": { "start": { "line": 43, "column": 0 }, "end": { "line": 43, "column": 16 } },
        "2": { "start": { "line": 77, "column": 0 }, "end": { "line": 77, "column": 16 } },
        "3": { "start": { "line": 198, "column": 0 }, "end": { "line": 198, "column": 16 } },
        "4": { "start": { "line": 3, "column": 0 }, "end": { "line": 3, "column": 38 } },
        "5": { "start": { "line": 6, "column": 0 }, "end": { "line": 6, "column": 33 } },
        "6": { "start": { "line": 7, "column": 0 }, "end": { "line": 7, "column": 87 } },
        "7": { "start": { "line": 8, "column": 0 }, "end": { "line": 8, "column": 38 } },
        "8": { "start": { "line": 9, "column": 0 }, "end": { "line": 9, "column": 72 } },
        "9": { "start": { "line": 10, "column": 0 }, "end": { "line": 10, "column": 55 } },
        "10": { "start": { "line": 11, "column": 0 }, "end": { "line": 11, "column": 56 } },
        "11": { "start": { "line": 12, "column": 0 }, "end": { "line": 12, "column": 47 } },
        "12": { "start": { "line": 15, "column": 56 }, "end": { "line": 15, "column": 58 } },
        "13": { "start": { "line": 24, "column": 18 }, "end": { "line": 24, "column": 60 } },
        "14": { "start": { "line": 25, "column": 18 }, "end": { "line": 25, "column": 24 } },
        "15": { "start": { "line": 27, "column": 14 }, "end": { "line": 27, "column": 60 } },
        "16": { "start": { "line": 28, "column": 2 }, "end": { "line": 28, "column": 52 } },
        "17": { "start": { "line": 30, "column": 13 }, "end": { "line": 30, "column": 56 } },
        "18": { "start": { "line": 31, "column": 15 }, "end": { "line": 31, "column": 40 } },
        "19": { "start": { "line": 32, "column": 15 }, "end": { "line": 32, "column": 46 } },
        "20": { "start": { "line": 34, "column": 41 }, "end": { "line": 39, "column": 4 } },
        "21": { "start": { "line": 40, "column": 2 }, "end": { "line": 40, "column": 23 } },
        "22": { "start": { "line": 44, "column": 14 }, "end": { "line": 44, "column": 27 } },
        "23": { "start": { "line": 45, "column": 2 }, "end": { "line": 47, "column": 3 } },
        "24": { "start": { "line": 46, "column": 4 }, "end": { "line": 46, "column": 51 } },
        "25": { "start": { "line": 48, "column": 2 }, "end": { "line": 48, "column": 21 } },
        "26": { "start": { "line": 52, "column": 27 }, "end": { "line": 61, "column": 2 } },
        "27": { "start": { "line": 64, "column": 24 }, "end": { "line": 70, "column": 2 } },
        "28": { "start": { "line": 78, "column": 2 }, "end": { "line": 82, "column": 4 } },
        "29": { "start": { "line": 79, "column": 4 }, "end": { "line": 81, "column": 102 } },
        "30": { "start": { "line": 80, "column": 25 }, "end": { "line": 80, "column": 40 } },
        "31": { "start": { "line": 81, "column": 33 }, "end": { "line": 81, "column": 101 } },
        "32": { "start": { "line": 97, "column": 35 }, "end": { "line": 97, "column": 95 } },
        "33": { "start": { "line": 100, "column": 2 }, "end": { "line": 100, "column": 51 } },
        "34": { "start": { "line": 102, "column": 24 }, "end": { "line": 122, "column": 3 } },
        "35": { "start": { "line": 104, "column": 4 }, "end": { "line": 121, "column": 5 } },
        "36": { "start": { "line": 105, "column": 6 }, "end": { "line": 120, "column": 7 } },
        "37": { "start": { "line": 107, "column": 28 }, "end": { "line": 107, "column": 115 } },
        "38": { "start": { "line": 108, "column": 8 }, "end": { "line": 111, "column": 9 } },
        "39": { "start": { "line": 109, "column": 10 }, "end": { "line": 109, "column": 33 } },
        "40": { "start": { "line": 110, "column": 10 }, "end": { "line": 110, "column": 17 } },
        "41": { "start": { "line": 112, "column": 8 }, "end": { "line": 116, "column": 9 } },
        "42": { "start": { "line": 113, "column": 10 }, "end": { "line": 113, "column": 57 } },
        "43": { "start": { "line": 115, "column": 10 }, "end": { "line": 115, "column": 65 } },
        "44": { "start": { "line": 119, "column": 8 }, "end": { "line": 119, "column": 55 } },
        "45": { "start": { "line": 124, "column": 33 }, "end": { "line": 144, "column": 3 } },
        "46": { "start": { "line": 125, "column": 4 }, "end": { "line": 127, "column": 5 } },
        "47": { "start": { "line": 126, "column": 6 }, "end": { "line": 126, "column": 13 } },
        "48": { "start": { "line": 128, "column": 60 }, "end": { "line": 128, "column": 64 } },
        "49": { "start": { "line": 129, "column": 4 }, "end": { "line": 143, "column": 5 } },
        "50": { "start": { "line": 130, "column": 6 }, "end": { "line": 130, "column": 81 } },
        "51": { "start": { "line": 134, "column": 24 }, "end": { "line": 134, "column": 44 } },
        "52": { "start": { "line": 135, "column": 19 }, "end": { "line": 135, "column": 45 } },
        "53": { "start": { "line": 136, "column": 23 }, "end": { "line": 136, "column": 74 } },
        "54": { "start": { "line": 140, "column": 6 }, "end": { "line": 142, "column": 59 } },
        "55": { "start": { "line": 147, "column": 18 }, "end": { "line": 156, "column": 14 } },
        "56": { "start": { "line": 148, "column": 4 }, "end": { "line": 148, "column": 52 } },
        "57": { "start": { "line": 150, "column": 4 }, "end": { "line": 155, "column": 5 } },
        "58": { "start": { "line": 151, "column": 20 }, "end": { "line": 151, "column": 41 } },
        "59": { "start": { "line": 152, "column": 6 }, "end": { "line": 152, "column": 53 } },
        "60": { "start": { "line": 154, "column": 6 }, "end": { "line": 154, "column": 38 } },
        "61": { "start": { "line": 159, "column": 2 }, "end": { "line": 162, "column": 5 } },
        "62": { "start": { "line": 160, "column": 4 }, "end": { "line": 160, "column": 63 } },
        "63": { "start": { "line": 161, "column": 4 }, "end": { "line": 161, "column": 20 } },
        "64": { "start": { "line": 164, "column": 2 }, "end": { "line": 164, "column": 82 } },
        "65": { "start": { "line": 164, "column": 47 }, "end": { "line": 164, "column": 80 } },
        "66": { "start": { "line": 166, "column": 2 }, "end": { "line": 166, "column": 96 } },
        "67": { "start": { "line": 166, "column": 50 }, "end": { "line": 166, "column": 94 } },
        "68": { "start": { "line": 167, "column": 2 }, "end": { "line": 169, "column": 4 } },
        "69": { "start": { "line": 168, "column": 4 }, "end": { "line": 168, "column": 108 } },
        "70": { "start": { "line": 170, "column": 2 }, "end": { "line": 170, "column": 96 } },
        "71": { "start": { "line": 170, "column": 56 }, "end": { "line": 170, "column": 94 } },
        "72": { "start": { "line": 171, "column": 2 }, "end": { "line": 171, "column": 90 } },
        "73": { "start": { "line": 171, "column": 47 }, "end": { "line": 171, "column": 88 } },
        "74": { "start": { "line": 172, "column": 2 }, "end": { "line": 172, "column": 86 } },
        "75": { "start": { "line": 172, "column": 45 }, "end": { "line": 172, "column": 84 } },
        "76": { "start": { "line": 173, "column": 2 }, "end": { "line": 173, "column": 108 } },
        "77": { "start": { "line": 173, "column": 60 }, "end": { "line": 173, "column": 106 } },
        "78": { "start": { "line": 174, "column": 2 }, "end": { "line": 174, "column": 102 } },
        "79": { "start": { "line": 174, "column": 53 }, "end": { "line": 174, "column": 100 } },
        "80": { "start": { "line": 175, "column": 2 }, "end": { "line": 175, "column": 96 } },
        "81": { "start": { "line": 175, "column": 50 }, "end": { "line": 175, "column": 94 } },
        "82": { "start": { "line": 176, "column": 2 }, "end": { "line": 176, "column": 108 } },
        "83": { "start": { "line": 176, "column": 45 }, "end": { "line": 176, "column": 106 } },
        "84": { "start": { "line": 177, "column": 2 }, "end": { "line": 179, "column": 5 } },
        "85": { "start": { "line": 178, "column": 4 }, "end": { "line": 178, "column": 46 } },
        "86": { "start": { "line": 181, "column": 2 }, "end": { "line": 183, "column": 5 } },
        "87": { "start": { "line": 182, "column": 4 }, "end": { "line": 182, "column": 53 } },
        "88": { "start": { "line": 185, "column": 2 }, "end": { "line": 187, "column": 5 } },
        "89": { "start": { "line": 186, "column": 4 }, "end": { "line": 186, "column": 47 } },
        "90": { "start": { "line": 190, "column": 2 }, "end": { "line": 195, "column": 3 } },
        "91": { "start": { "line": 191, "column": 4 }, "end": { "line": 191, "column": 26 } },
        "92": { "start": { "line": 193, "column": 4 }, "end": { "line": 193, "column": 43 } },
        "93": { "start": { "line": 194, "column": 4 }, "end": { "line": 194, "column": 20 } },
        "94": { "start": { "line": 199, "column": 21 }, "end": { "line": 199, "column": 86 } },
        "95": { "start": { "line": 200, "column": 2 }, "end": { "line": 204, "column": 3 } },
        "96": { "start": { "line": 201, "column": 4 }, "end": { "line": 201, "column": 31 } },
        "97": { "start": { "line": 203, "column": 4 }, "end": { "line": 203, "column": 26 } }
      },
      "fnMap": {
        "0": {
          "name": "queueKey",
          "decl": { "start": { "line": 23, "column": 16 }, "end": { "line": 23, "column": 24 } },
          "loc": { "start": { "line": 23, "column": 46 }, "end": { "line": 41, "column": 1 } }
        },
        "1": {
          "name": "getOrCreateQueue",
          "decl": { "start": { "line": 43, "column": 16 }, "end": { "line": 43, "column": 32 } },
          "loc": { "start": { "line": 43, "column": 54 }, "end": { "line": 49, "column": 1 } }
        },
        "2": {
          "name": "setupWatch",
          "decl": { "start": { "line": 77, "column": 16 }, "end": { "line": 77, "column": 26 } },
          "loc": { "start": { "line": 77, "column": 83 }, "end": { "line": 83, "column": 1 } }
        },
        "3": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 78, "column": 19 }, "end": { "line": 78, "column": 29 } },
          "loc": { "start": { "line": 79, "column": 4 }, "end": { "line": 81, "column": 102 } }
        },
        "4": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 80, "column": 14 }, "end": { "line": 80, "column": 21 } },
          "loc": { "start": { "line": 80, "column": 25 }, "end": { "line": 80, "column": 40 } }
        },
        "5": {
          "name": "(anonymous_6)",
          "decl": { "start": { "line": 81, "column": 15 }, "end": { "line": 81, "column": 29 } },
          "loc": { "start": { "line": 81, "column": 33 }, "end": { "line": 81, "column": 101 } }
        },
        "6": {
          "name": "runBinding",
          "decl": { "start": { "line": 91, "column": 15 }, "end": { "line": 91, "column": 25 } },
          "loc": { "start": { "line": 94, "column": 30 }, "end": { "line": 196, "column": 1 } }
        },
        "7": {
          "name": "(anonymous_8)",
          "decl": { "start": { "line": 102, "column": 24 }, "end": { "line": 102, "column": 29 } },
          "loc": { "start": { "line": 102, "column": 103 }, "end": { "line": 122, "column": 3 } }
        },
        "8": {
          "name": "(anonymous_9)",
          "decl": { "start": { "line": 124, "column": 33 }, "end": { "line": 124, "column": 38 } },
          "loc": { "start": { "line": 124, "column": 93 }, "end": { "line": 144, "column": 3 } }
        },
        "9": {
          "name": "(anonymous_10)",
          "decl": { "start": { "line": 147, "column": 60 }, "end": { "line": 147, "column": 65 } },
          "loc": { "start": { "line": 147, "column": 81 }, "end": { "line": 156, "column": 3 } }
        },
        "10": {
          "name": "(anonymous_11)",
          "decl": { "start": { "line": 159, "column": 40 }, "end": { "line": 159, "column": 43 } },
          "loc": { "start": { "line": 159, "column": 46 }, "end": { "line": 162, "column": 3 } }
        },
        "11": {
          "name": "(anonymous_12)",
          "decl": { "start": { "line": 164, "column": 40 }, "end": { "line": 164, "column": 43 } },
          "loc": { "start": { "line": 164, "column": 47 }, "end": { "line": 164, "column": 80 } }
        },
        "12": {
          "name": "(anonymous_13)",
          "decl": { "start": { "line": 166, "column": 43 }, "end": { "line": 166, "column": 46 } },
          "loc": { "start": { "line": 166, "column": 50 }, "end": { "line": 166, "column": 94 } }
        },
        "13": {
          "name": "(anonymous_14)",
          "decl": { "start": { "line": 167, "column": 42 }, "end": { "line": 167, "column": 52 } },
          "loc": { "start": { "line": 168, "column": 4 }, "end": { "line": 168, "column": 108 } }
        },
        "14": {
          "name": "(anonymous_15)",
          "decl": { "start": { "line": 170, "column": 50 }, "end": { "line": 170, "column": 53 } },
          "loc": { "start": { "line": 170, "column": 56 }, "end": { "line": 170, "column": 94 } }
        },
        "15": {
          "name": "(anonymous_16)",
          "decl": { "start": { "line": 171, "column": 40 }, "end": { "line": 171, "column": 43 } },
          "loc": { "start": { "line": 171, "column": 47 }, "end": { "line": 171, "column": 88 } }
        },
        "16": {
          "name": "(anonymous_17)",
          "decl": { "start": { "line": 172, "column": 38 }, "end": { "line": 172, "column": 41 } },
          "loc": { "start": { "line": 172, "column": 45 }, "end": { "line": 172, "column": 84 } }
        },
        "17": {
          "name": "(anonymous_18)",
          "decl": { "start": { "line": 173, "column": 53 }, "end": { "line": 173, "column": 56 } },
          "loc": { "start": { "line": 173, "column": 60 }, "end": { "line": 173, "column": 106 } }
        },
        "18": {
          "name": "(anonymous_19)",
          "decl": { "start": { "line": 174, "column": 46 }, "end": { "line": 174, "column": 49 } },
          "loc": { "start": { "line": 174, "column": 53 }, "end": { "line": 174, "column": 100 } }
        },
        "19": {
          "name": "(anonymous_20)",
          "decl": { "start": { "line": 175, "column": 43 }, "end": { "line": 175, "column": 46 } },
          "loc": { "start": { "line": 175, "column": 50 }, "end": { "line": 175, "column": 94 } }
        },
        "20": {
          "name": "(anonymous_21)",
          "decl": { "start": { "line": 176, "column": 37 }, "end": { "line": 176, "column": 41 } },
          "loc": { "start": { "line": 176, "column": 45 }, "end": { "line": 176, "column": 106 } }
        },
        "21": {
          "name": "(anonymous_22)",
          "decl": { "start": { "line": 177, "column": 43 }, "end": { "line": 177, "column": 53 } },
          "loc": { "start": { "line": 177, "column": 56 }, "end": { "line": 179, "column": 3 } }
        },
        "22": {
          "name": "(anonymous_23)",
          "decl": { "start": { "line": 181, "column": 48 }, "end": { "line": 181, "column": 58 } },
          "loc": { "start": { "line": 181, "column": 61 }, "end": { "line": 183, "column": 3 } }
        },
        "23": {
          "name": "(anonymous_24)",
          "decl": { "start": { "line": 185, "column": 57 }, "end": { "line": 185, "column": 67 } },
          "loc": { "start": { "line": 185, "column": 70 }, "end": { "line": 187, "column": 3 } }
        },
        "24": {
          "name": "logEvent",
          "decl": { "start": { "line": 198, "column": 16 }, "end": { "line": 198, "column": 24 } },
          "loc": { "start": { "line": 198, "column": 88 }, "end": { "line": 205, "column": 1 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 27, "column": 14 }, "end": { "line": 27, "column": 60 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 27, "column": 14 }, "end": { "line": 27, "column": 49 } },
            { "start": { "line": 27, "column": 53 }, "end": { "line": 27, "column": 60 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 28, "column": 10 }, "end": { "line": 28, "column": 51 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 28, "column": 36 }, "end": { "line": 28, "column": 41 } },
            { "start": { "line": 28, "column": 44 }, "end": { "line": 28, "column": 51 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 30, "column": 13 }, "end": { "line": 30, "column": 56 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 30, "column": 13 }, "end": { "line": 30, "column": 36 } },
            { "start": { "line": 30, "column": 40 }, "end": { "line": 30, "column": 56 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 31, "column": 15 }, "end": { "line": 31, "column": 40 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 31, "column": 15 }, "end": { "line": 31, "column": 23 } },
            { "start": { "line": 31, "column": 27 }, "end": { "line": 31, "column": 40 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 32, "column": 15 }, "end": { "line": 32, "column": 46 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 32, "column": 15 }, "end": { "line": 32, "column": 33 } },
            { "start": { "line": 32, "column": 37 }, "end": { "line": 32, "column": 46 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 45, "column": 2 }, "end": { "line": 47, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 45, "column": 2 }, "end": { "line": 47, "column": 3 } }
          ]
        },
        "6": {
          "loc": { "start": { "line": 53, "column": 20 }, "end": { "line": 53, "column": 111 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 53, "column": 58 }, "end": { "line": 53, "column": 107 } },
            { "start": { "line": 53, "column": 110 }, "end": { "line": 53, "column": 111 } }
          ]
        },
        "7": {
          "loc": { "start": { "line": 54, "column": 18 }, "end": { "line": 54, "column": 113 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 54, "column": 58 }, "end": { "line": 54, "column": 109 } },
            { "start": { "line": 54, "column": 112 }, "end": { "line": 54, "column": 113 } }
          ]
        },
        "8": {
          "loc": { "start": { "line": 55, "column": 24 }, "end": { "line": 57, "column": 9 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 56, "column": 6 }, "end": { "line": 56, "column": 60 } },
            { "start": { "line": 57, "column": 6 }, "end": { "line": 57, "column": 9 } }
          ]
        },
        "9": {
          "loc": { "start": { "line": 58, "column": 21 }, "end": { "line": 60, "column": 9 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 59, "column": 6 }, "end": { "line": 59, "column": 60 } },
            { "start": { "line": 60, "column": 6 }, "end": { "line": 60, "column": 9 } }
          ]
        },
        "10": {
          "loc": { "start": { "line": 97, "column": 35 }, "end": { "line": 97, "column": 95 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 97, "column": 35 }, "end": { "line": 97, "column": 65 } },
            { "start": { "line": 97, "column": 69 }, "end": { "line": 97, "column": 95 } }
          ]
        },
        "11": {
          "loc": { "start": { "line": 104, "column": 4 }, "end": { "line": 121, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 104, "column": 4 }, "end": { "line": 121, "column": 5 } }
          ]
        },
        "12": {
          "loc": { "start": { "line": 108, "column": 8 }, "end": { "line": 111, "column": 9 } },
          "type": "if",
          "locations": [
            { "start": { "line": 108, "column": 8 }, "end": { "line": 111, "column": 9 } }
          ]
        },
        "13": {
          "loc": { "start": { "line": 112, "column": 8 }, "end": { "line": 116, "column": 9 } },
          "type": "if",
          "locations": [
            { "start": { "line": 112, "column": 8 }, "end": { "line": 116, "column": 9 } },
            { "start": { "line": 114, "column": 15 }, "end": { "line": 116, "column": 9 } }
          ]
        },
        "14": {
          "loc": { "start": { "line": 125, "column": 4 }, "end": { "line": 127, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 125, "column": 4 }, "end": { "line": 127, "column": 5 } }
          ]
        },
        "15": {
          "loc": { "start": { "line": 136, "column": 26 }, "end": { "line": 136, "column": 59 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 136, "column": 26 }, "end": { "line": 136, "column": 40 } },
            { "start": { "line": 136, "column": 44 }, "end": { "line": 136, "column": 59 } }
          ]
        },
        "16": {
          "loc": { "start": { "line": 140, "column": 6 }, "end": { "line": 142, "column": 58 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 141, "column": 10 }, "end": { "line": 141, "column": 113 } },
            { "start": { "line": 142, "column": 10 }, "end": { "line": 142, "column": 58 } }
          ]
        },
        "17": {
          "loc": { "start": { "line": 150, "column": 4 }, "end": { "line": 155, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 150, "column": 4 }, "end": { "line": 155, "column": 5 } },
            { "start": { "line": 153, "column": 11 }, "end": { "line": 155, "column": 5 } }
          ]
        },
        "18": {
          "loc": { "start": { "line": 168, "column": 78 }, "end": { "line": 168, "column": 105 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 168, "column": 97 }, "end": { "line": 168, "column": 99 } },
            { "start": { "line": 168, "column": 102 }, "end": { "line": 168, "column": 105 } }
          ]
        },
        "19": {
          "loc": { "start": { "line": 198, "column": 44 }, "end": { "line": 198, "column": 64 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 198, "column": 62 }, "end": { "line": 198, "column": 64 } }
          ]
        },
        "20": {
          "loc": { "start": { "line": 199, "column": 53 }, "end": { "line": 199, "column": 84 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 199, "column": 63 }, "end": { "line": 199, "column": 78 } },
            { "start": { "line": 199, "column": 81 }, "end": { "line": 199, "column": 84 } }
          ]
        },
        "21": {
          "loc": { "start": { "line": 200, "column": 2 }, "end": { "line": 204, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 200, "column": 2 }, "end": { "line": 204, "column": 3 } },
            { "start": { "line": 202, "column": 9 }, "end": { "line": 204, "column": 3 } }
          ]
        }
      },
      "s": {
        "0": 4,
        "1": 4,
        "2": 4,
        "3": 4,
        "4": 4,
        "5": 4,
        "6": 4,
        "7": 4,
        "8": 4,
        "9": 4,
        "10": 4,
        "11": 4,
        "12": 4,
        "13": 35,
        "14": 35,
        "15": 35,
        "16": 35,
        "17": 35,
        "18": 35,
        "19": 35,
        "20": 35,
        "21": 35,
        "22": 3,
        "23": 3,
        "24": 1,
        "25": 3,
        "26": 4,
        "27": 4,
        "28": 8,
        "29": 13,
        "30": 18,
        "31": 13,
        "32": 13,
        "33": 13,
        "34": 13,
        "35": 10,
        "36": 10,
        "37": 10,
        "38": 10,
        "39": 0,
        "40": 0,
        "41": 10,
        "42": 0,
        "43": 10,
        "44": 0,
        "45": 13,
        "46": 0,
        "47": 0,
        "48": 0,
        "49": 0,
        "50": 0,
        "51": 0,
        "52": 0,
        "53": 0,
        "54": 0,
        "55": 13,
        "56": 10,
        "57": 10,
        "58": 0,
        "59": 0,
        "60": 10,
        "61": 13,
        "62": 2,
        "63": 2,
        "64": 13,
        "65": 0,
        "66": 13,
        "67": 0,
        "68": 13,
        "69": 0,
        "70": 13,
        "71": 0,
        "72": 13,
        "73": 2,
        "74": 13,
        "75": 0,
        "76": 13,
        "77": 0,
        "78": 13,
        "79": 0,
        "80": 13,
        "81": 0,
        "82": 13,
        "83": 0,
        "84": 13,
        "85": 1,
        "86": 13,
        "87": 1,
        "88": 13,
        "89": 1,
        "90": 13,
        "91": 13,
        "92": 2,
        "93": 2,
        "94": 7,
        "95": 7,
        "96": 1,
        "97": 6
      },
      "f": {
        "0": 35,
        "1": 3,
        "2": 8,
        "3": 13,
        "4": 18,
        "5": 13,
        "6": 13,
        "7": 10,
        "8": 0,
        "9": 10,
        "10": 2,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 2,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 1,
        "22": 1,
        "23": 1,
        "24": 7
      },
      "b": {
        "0": [35, 0],
        "1": [32, 3],
        "2": [35, 16],
        "3": [35, 16],
        "4": [35, 16],
        "5": [1],
        "6": [0, 4],
        "7": [0, 4],
        "8": [0, 4],
        "9": [0, 4],
        "10": [13, 13],
        "11": [10],
        "12": [0],
        "13": [0, 10],
        "14": [0],
        "15": [0, 0],
        "16": [0, 0],
        "17": [0, 10],
        "18": [0, 0],
        "19": [2],
        "20": [5, 2],
        "21": [1, 6]
      }
    },
    "/Users/sam/code/work/pepr/src/lib/core/queue.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/core/queue.ts",
      "statementMap": {
        "0": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 42 } },
        "1": { "start": { "line": 6, "column": 0 }, "end": { "line": 6, "column": 38 } },
        "2": { "start": { "line": 24, "column": 27 }, "end": { "line": 24, "column": 29 } },
        "3": { "start": { "line": 25, "column": 20 }, "end": { "line": 25, "column": 25 } },
        "4": { "start": { "line": 28, "column": 4 }, "end": { "line": 28, "column": 22 } },
        "5": { "start": { "line": 29, "column": 4 }, "end": { "line": 29, "column": 66 } },
        "6": { "start": { "line": 33, "column": 4 }, "end": { "line": 33, "column": 48 } },
        "7": { "start": { "line": 45, "column": 4 }, "end": { "line": 50, "column": 6 } },
        "8": { "start": { "line": 63, "column": 17 }, "end": { "line": 70, "column": 6 } },
        "9": { "start": { "line": 71, "column": 4 }, "end": { "line": 71, "column": 34 } },
        "10": { "start": { "line": 72, "column": 4 }, "end": { "line": 76, "column": 7 } },
        "11": { "start": { "line": 73, "column": 6 }, "end": { "line": 73, "column": 78 } },
        "12": { "start": { "line": 74, "column": 6 }, "end": { "line": 74, "column": 52 } },
        "13": { "start": { "line": 75, "column": 6 }, "end": { "line": 75, "column": 29 } },
        "14": { "start": { "line": 86, "column": 4 }, "end": { "line": 89, "column": 5 } },
        "15": { "start": { "line": 87, "column": 6 }, "end": { "line": 87, "column": 50 } },
        "16": { "start": { "line": 88, "column": 6 }, "end": { "line": 88, "column": 19 } },
        "17": { "start": { "line": 92, "column": 20 }, "end": { "line": 92, "column": 39 } },
        "18": { "start": { "line": 95, "column": 4 }, "end": { "line": 98, "column": 5 } },
        "19": { "start": { "line": 96, "column": 6 }, "end": { "line": 96, "column": 45 } },
        "20": { "start": { "line": 97, "column": 6 }, "end": { "line": 97, "column": 19 } },
        "21": { "start": { "line": 100, "column": 4 }, "end": { "line": 130, "column": 5 } },
        "22": { "start": { "line": 102, "column": 6 }, "end": { "line": 102, "column": 34 } },
        "23": { "start": { "line": 105, "column": 19 }, "end": { "line": 112, "column": 8 } },
        "24": { "start": { "line": 113, "column": 6 }, "end": { "line": 113, "column": 37 } },
        "25": { "start": { "line": 114, "column": 6 }, "end": { "line": 114, "column": 58 } },
        "26": { "start": { "line": 115, "column": 6 }, "end": { "line": 115, "column": 36 } },
        "27": { "start": { "line": 117, "column": 6 }, "end": { "line": 117, "column": 24 } },
        "28": { "start": { "line": 119, "column": 6 }, "end": { "line": 119, "column": 82 } },
        "29": { "start": { "line": 120, "column": 6 }, "end": { "line": 120, "column": 24 } },
        "30": { "start": { "line": 122, "column": 6 }, "end": { "line": 122, "column": 53 } },
        "31": { "start": { "line": 125, "column": 6 }, "end": { "line": 125, "column": 59 } },
        "32": { "start": { "line": 126, "column": 6 }, "end": { "line": 126, "column": 35 } },
        "33": { "start": { "line": 129, "column": 6 }, "end": { "line": 129, "column": 28 } },
        "34": { "start": { "line": 21, "column": 0 }, "end": { "line": 21, "column": 13 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 27, "column": 2 }, "end": { "line": 27, "column": 14 } },
          "loc": { "start": { "line": 27, "column": 26 }, "end": { "line": 30, "column": 3 } }
        },
        "1": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 32, "column": 2 }, "end": { "line": 32, "column": 7 } },
          "loc": { "start": { "line": 32, "column": 7 }, "end": { "line": 34, "column": 3 } }
        },
        "2": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 36, "column": 2 }, "end": { "line": 36, "column": 7 } },
          "loc": { "start": { "line": 36, "column": 7 }, "end": { "line": 51, "column": 3 } }
        },
        "3": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 62, "column": 2 }, "end": { "line": 62, "column": 9 } },
          "loc": { "start": { "line": 62, "column": 62 }, "end": { "line": 77, "column": 3 } }
        },
        "4": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 72, "column": 29 }, "end": { "line": 72, "column": 30 } },
          "loc": { "start": { "line": 72, "column": 49 }, "end": { "line": 76, "column": 5 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 86, "column": 4 }, "end": { "line": 89, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 86, "column": 4 }, "end": { "line": 89, "column": 5 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 95, "column": 4 }, "end": { "line": 98, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 95, "column": 4 }, "end": { "line": 98, "column": 5 } }
          ]
        }
      },
      "s": {
        "0": 5,
        "1": 5,
        "2": 6,
        "3": 6,
        "4": 6,
        "5": 6,
        "6": 42,
        "7": 19,
        "8": 9,
        "9": 9,
        "10": 9,
        "11": 9,
        "12": 9,
        "13": 9,
        "14": 18,
        "15": 5,
        "16": 5,
        "17": 13,
        "18": 13,
        "19": 4,
        "20": 4,
        "21": 9,
        "22": 9,
        "23": 9,
        "24": 9,
        "25": 9,
        "26": 8,
        "27": 8,
        "28": 1,
        "29": 1,
        "30": 9,
        "31": 9,
        "32": 9,
        "33": 9,
        "34": 5
      },
      "f": { "0": 6, "1": 42, "2": 19, "3": 9, "4": 9 },
      "b": { "0": [5], "1": [4] }
    },
    "/Users/sam/code/work/pepr/src/lib/finalizer.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/finalizer.ts",
      "statementMap": {
        "0": { "start": { "line": 10, "column": 0 }, "end": { "line": 10, "column": 16 } },
        "1": { "start": { "line": 31, "column": 0 }, "end": { "line": 31, "column": 7 } },
        "2": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 79 } },
        "3": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 37 } },
        "4": { "start": { "line": 7, "column": 0 }, "end": { "line": 7, "column": 36 } },
        "5": { "start": { "line": 12, "column": 2 }, "end": { "line": 14, "column": 3 } },
        "6": { "start": { "line": 13, "column": 4 }, "end": { "line": 13, "column": 11 } },
        "7": { "start": { "line": 18, "column": 2 }, "end": { "line": 20, "column": 3 } },
        "8": { "start": { "line": 19, "column": 4 }, "end": { "line": 19, "column": 11 } },
        "9": { "start": { "line": 22, "column": 20 }, "end": { "line": 22, "column": 40 } },
        "10": { "start": { "line": 23, "column": 21 }, "end": { "line": 23, "column": 59 } },
        "11": { "start": { "line": 24, "column": 2 }, "end": { "line": 26, "column": 3 } },
        "12": { "start": { "line": 25, "column": 4 }, "end": { "line": 25, "column": 31 } },
        "13": { "start": { "line": 28, "column": 2 }, "end": { "line": 28, "column": 64 } },
        "14": { "start": { "line": 32, "column": 20 }, "end": { "line": 32, "column": 40 } },
        "15": { "start": { "line": 33, "column": 15 }, "end": { "line": 33, "column": 28 } },
        "16": { "start": { "line": 34, "column": 19 }, "end": { "line": 34, "column": 70 } },
        "17": { "start": { "line": 36, "column": 2 }, "end": { "line": 36, "column": 77 } },
        "18": { "start": { "line": 39, "column": 26 }, "end": { "line": 39, "column": 33 } },
        "19": { "start": { "line": 40, "column": 2 }, "end": { "line": 48, "column": 3 } },
        "20": { "start": { "line": 41, "column": 4 }, "end": { "line": 41, "column": 30 } },
        "21": { "start": { "line": 43, "column": 21 }, "end": { "line": 43, "column": 73 } },
        "22": { "start": { "line": 44, "column": 4 }, "end": { "line": 47, "column": 5 } },
        "23": { "start": { "line": 45, "column": 6 }, "end": { "line": 45, "column": 95 } },
        "24": { "start": { "line": 46, "column": 6 }, "end": { "line": 46, "column": 13 } },
        "25": { "start": { "line": 51, "column": 21 }, "end": { "line": 51, "column": 72 } },
        "26": { "start": { "line": 51, "column": 50 }, "end": { "line": 51, "column": 65 } },
        "27": { "start": { "line": 55, "column": 2 }, "end": { "line": 61, "column": 5 } },
        "28": { "start": { "line": 62, "column": 2 }, "end": { "line": 62, "column": 76 } }
      },
      "fnMap": {
        "0": {
          "name": "addFinalizer",
          "decl": { "start": { "line": 10, "column": 16 }, "end": { "line": 10, "column": 28 } },
          "loc": { "start": { "line": 10, "column": 86 }, "end": { "line": 29, "column": 1 } }
        },
        "1": {
          "name": "removeFinalizer",
          "decl": { "start": { "line": 31, "column": 22 }, "end": { "line": 31, "column": 37 } },
          "loc": { "start": { "line": 31, "column": 77 }, "end": { "line": 63, "column": 1 } }
        },
        "2": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 51, "column": 45 }, "end": { "line": 51, "column": 46 } },
          "loc": { "start": { "line": 51, "column": 50 }, "end": { "line": 51, "column": 65 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 12, "column": 2 }, "end": { "line": 14, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 12, "column": 2 }, "end": { "line": 14, "column": 3 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 18, "column": 2 }, "end": { "line": 20, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 18, "column": 2 }, "end": { "line": 20, "column": 3 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 18, "column": 6 }, "end": { "line": 18, "column": 95 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 18, "column": 6 }, "end": { "line": 18, "column": 52 } },
            { "start": { "line": 18, "column": 56 }, "end": { "line": 18, "column": 95 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 23, "column": 21 }, "end": { "line": 23, "column": 59 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 23, "column": 21 }, "end": { "line": 23, "column": 53 } },
            { "start": { "line": 23, "column": 57 }, "end": { "line": 23, "column": 59 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 24, "column": 2 }, "end": { "line": 26, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 24, "column": 2 }, "end": { "line": 26, "column": 3 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 34, "column": 22 }, "end": { "line": 34, "column": 55 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 34, "column": 22 }, "end": { "line": 34, "column": 36 } },
            { "start": { "line": 34, "column": 40 }, "end": { "line": 34, "column": 55 } }
          ]
        },
        "6": {
          "loc": { "start": { "line": 44, "column": 4 }, "end": { "line": 47, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 44, "column": 4 }, "end": { "line": 47, "column": 5 } }
          ]
        },
        "7": {
          "loc": { "start": { "line": 51, "column": 21 }, "end": { "line": 51, "column": 72 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 51, "column": 21 }, "end": { "line": 51, "column": 66 } },
            { "start": { "line": 51, "column": 70 }, "end": { "line": 51, "column": 72 } }
          ]
        }
      },
      "s": {
        "0": 6,
        "1": 6,
        "2": 6,
        "3": 6,
        "4": 6,
        "5": 8,
        "6": 1,
        "7": 7,
        "8": 1,
        "9": 6,
        "10": 6,
        "11": 6,
        "12": 4,
        "13": 6,
        "14": 2,
        "15": 2,
        "16": 2,
        "17": 2,
        "18": 2,
        "19": 2,
        "20": 2,
        "21": 1,
        "22": 1,
        "23": 1,
        "24": 1,
        "25": 1,
        "26": 3,
        "27": 1,
        "28": 1
      },
      "f": { "0": 8, "1": 2, "2": 3 },
      "b": {
        "0": [1],
        "1": [1],
        "2": [7, 4],
        "3": [6, 2],
        "4": [4],
        "5": [2, 0],
        "6": [1],
        "7": [1, 0]
      }
    },
    "/Users/sam/code/work/pepr/src/lib.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib.ts",
      "statementMap": {
        "0": { "start": { "line": 1, "column": 0 }, "end": { "line": 1, "column": 9 } },
        "1": { "start": { "line": 14, "column": 2 }, "end": { "line": 1, "column": 14 } },
        "2": { "start": { "line": 21, "column": 2 }, "end": { "line": 1, "column": 36 } },
        "3": { "start": { "line": 22, "column": 2 }, "end": { "line": 1, "column": 39 } },
        "4": { "start": { "line": 23, "column": 2 }, "end": { "line": 1, "column": 46 } },
        "5": { "start": { "line": 24, "column": 2 }, "end": { "line": 1, "column": 59 } },
        "6": { "start": { "line": 25, "column": 2 }, "end": { "line": 1, "column": 98 } },
        "7": { "start": { "line": 2, "column": 0 }, "end": { "line": 2, "column": 27 } },
        "8": { "start": { "line": 20, "column": 2 }, "end": { "line": 20, "column": 3 } },
        "9": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 9 } },
        "10": { "start": { "line": 13, "column": 2 }, "end": { "line": 4, "column": 51 } },
        "11": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 7 } },
        "12": { "start": { "line": 15, "column": 2 }, "end": { "line": 5, "column": 41 } },
        "13": { "start": { "line": 6, "column": 0 }, "end": { "line": 6, "column": 9 } },
        "14": { "start": { "line": 16, "column": 2 }, "end": { "line": 6, "column": 47 } },
        "15": { "start": { "line": 7, "column": 0 }, "end": { "line": 7, "column": 9 } },
        "16": { "start": { "line": 17, "column": 2 }, "end": { "line": 7, "column": 57 } },
        "17": { "start": { "line": 8, "column": 0 }, "end": { "line": 8, "column": 41 } },
        "18": { "start": { "line": 18, "column": 2 }, "end": { "line": 18, "column": 11 } },
        "19": { "start": { "line": 9, "column": 0 }, "end": { "line": 9, "column": 9 } },
        "20": { "start": { "line": 19, "column": 2 }, "end": { "line": 9, "column": 61 } },
        "21": { "start": { "line": 10, "column": 0 }, "end": { "line": 10, "column": 33 } },
        "22": { "start": { "line": 26, "column": 2 }, "end": { "line": 26, "column": 5 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_10)",
          "decl": { "start": { "line": 14, "column": 2 }, "end": { "line": 14, "column": 5 } },
          "loc": { "start": { "line": 14, "column": 2 }, "end": { "line": 1, "column": 14 } }
        },
        "1": {
          "name": "(anonymous_11)",
          "decl": { "start": { "line": 21, "column": 2 }, "end": { "line": 21, "column": 14 } },
          "loc": { "start": { "line": 21, "column": 2 }, "end": { "line": 1, "column": 36 } }
        },
        "2": {
          "name": "(anonymous_12)",
          "decl": { "start": { "line": 22, "column": 2 }, "end": { "line": 22, "column": 3 } },
          "loc": { "start": { "line": 22, "column": 2 }, "end": { "line": 1, "column": 39 } }
        },
        "3": {
          "name": "(anonymous_13)",
          "decl": { "start": { "line": 23, "column": 2 }, "end": { "line": 23, "column": 7 } },
          "loc": { "start": { "line": 23, "column": 2 }, "end": { "line": 1, "column": 46 } }
        },
        "4": {
          "name": "(anonymous_14)",
          "decl": { "start": { "line": 24, "column": 2 }, "end": { "line": 24, "column": 13 } },
          "loc": { "start": { "line": 24, "column": 2 }, "end": { "line": 1, "column": 59 } }
        },
        "5": {
          "name": "(anonymous_15)",
          "decl": { "start": { "line": 25, "column": 2 }, "end": { "line": 25, "column": 6 } },
          "loc": { "start": { "line": 25, "column": 2 }, "end": { "line": 1, "column": 98 } }
        },
        "6": {
          "name": "(anonymous_16)",
          "decl": { "start": { "line": 13, "column": 2 }, "end": { "line": 13, "column": 12 } },
          "loc": { "start": { "line": 13, "column": 2 }, "end": { "line": 4, "column": 51 } }
        },
        "7": {
          "name": "(anonymous_17)",
          "decl": { "start": { "line": 16, "column": 2 }, "end": { "line": 16, "column": 12 } },
          "loc": { "start": { "line": 16, "column": 2 }, "end": { "line": 6, "column": 47 } }
        },
        "8": {
          "name": "(anonymous_18)",
          "decl": { "start": { "line": 17, "column": 2 }, "end": { "line": 17, "column": 19 } },
          "loc": { "start": { "line": 17, "column": 2 }, "end": { "line": 7, "column": 57 } }
        },
        "9": {
          "name": "(anonymous_19)",
          "decl": { "start": { "line": 19, "column": 2 }, "end": { "line": 19, "column": 21 } },
          "loc": { "start": { "line": 19, "column": 2 }, "end": { "line": 9, "column": 61 } }
        }
      },
      "branchMap": {},
      "s": {
        "0": 4,
        "1": 4,
        "2": 4,
        "3": 24,
        "4": 4,
        "5": 4,
        "6": 4,
        "7": 4,
        "8": 4,
        "9": 4,
        "10": 4,
        "11": 4,
        "12": 4,
        "13": 4,
        "14": 4,
        "15": 4,
        "16": 4,
        "17": 4,
        "18": 4,
        "19": 4,
        "20": 4,
        "21": 4,
        "22": 4
      },
      "f": { "0": 0, "1": 0, "2": 20, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0 },
      "b": {}
    },
    "/Users/sam/code/work/pepr/src/sdk/sdk.ts": {
      "path": "/Users/sam/code/work/pepr/src/sdk/sdk.ts",
      "statementMap": {
        "0": { "start": { "line": 15, "column": 0 }, "end": { "line": 15, "column": 16 } },
        "1": { "start": { "line": 46, "column": 0 }, "end": { "line": 46, "column": 7 } },
        "2": { "start": { "line": 83, "column": 0 }, "end": { "line": 83, "column": 16 } },
        "3": { "start": { "line": 109, "column": 0 }, "end": { "line": 109, "column": 16 } },
        "4": { "start": { "line": 7, "column": 0 }, "end": { "line": 7, "column": 66 } },
        "5": { "start": { "line": 19, "column": 21 }, "end": { "line": 19, "column": 55 } },
        "6": { "start": { "line": 20, "column": 25 }, "end": { "line": 20, "column": 63 } },
        "7": { "start": { "line": 21, "column": 30 }, "end": { "line": 21, "column": 73 } },
        "8": { "start": { "line": 23, "column": 2 }, "end": { "line": 25, "column": 3 } },
        "9": { "start": { "line": 24, "column": 4 }, "end": { "line": 24, "column": 22 } },
        "10": { "start": { "line": 26, "column": 2 }, "end": { "line": 28, "column": 3 } },
        "11": { "start": { "line": 27, "column": 4 }, "end": { "line": 27, "column": 26 } },
        "12": { "start": { "line": 29, "column": 2 }, "end": { "line": 31, "column": 3 } },
        "13": { "start": { "line": 30, "column": 4 }, "end": { "line": 30, "column": 31 } },
        "14": { "start": { "line": 32, "column": 2 }, "end": { "line": 32, "column": 68 } },
        "15": { "start": { "line": 54, "column": 2 }, "end": { "line": 73, "column": 5 } },
        "16": { "start": { "line": 88, "column": 41 }, "end": { "line": 88, "column": 55 } },
        "17": { "start": { "line": 89, "column": 24 }, "end": { "line": 89, "column": 33 } },
        "18": { "start": { "line": 91, "column": 2 }, "end": { "line": 100, "column": 4 } },
        "19": { "start": { "line": 110, "column": 2 }, "end": { "line": 120, "column": 4 } }
      },
      "fnMap": {
        "0": {
          "name": "containers",
          "decl": { "start": { "line": 15, "column": 16 }, "end": { "line": 15, "column": 26 } },
          "loc": { "start": { "line": 17, "column": 73 }, "end": { "line": 33, "column": 1 } }
        },
        "1": {
          "name": "writeEvent",
          "decl": { "start": { "line": 46, "column": 22 }, "end": { "line": 46, "column": 32 } },
          "loc": { "start": { "line": 52, "column": 27 }, "end": { "line": 74, "column": 1 } }
        },
        "2": {
          "name": "getOwnerRefFrom",
          "decl": { "start": { "line": 83, "column": 16 }, "end": { "line": 83, "column": 31 } },
          "loc": { "start": { "line": 86, "column": 22 }, "end": { "line": 101, "column": 1 } }
        },
        "3": {
          "name": "sanitizeResourceName",
          "decl": { "start": { "line": 109, "column": 16 }, "end": { "line": 109, "column": 36 } },
          "loc": { "start": { "line": 109, "column": 49 }, "end": { "line": 121, "column": 1 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 19, "column": 21 }, "end": { "line": 19, "column": 55 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 19, "column": 21 }, "end": { "line": 19, "column": 49 } },
            { "start": { "line": 19, "column": 53 }, "end": { "line": 19, "column": 55 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 20, "column": 25 }, "end": { "line": 20, "column": 63 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 20, "column": 25 }, "end": { "line": 20, "column": 57 } },
            { "start": { "line": 20, "column": 61 }, "end": { "line": 20, "column": 63 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 21, "column": 30 }, "end": { "line": 21, "column": 73 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 21, "column": 30 }, "end": { "line": 21, "column": 67 } },
            { "start": { "line": 21, "column": 71 }, "end": { "line": 21, "column": 73 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 23, "column": 2 }, "end": { "line": 25, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 23, "column": 2 }, "end": { "line": 25, "column": 3 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 26, "column": 2 }, "end": { "line": 28, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 26, "column": 2 }, "end": { "line": 28, "column": 3 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 29, "column": 2 }, "end": { "line": 31, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 29, "column": 2 }, "end": { "line": 31, "column": 3 } }
          ]
        },
        "6": {
          "loc": { "start": { "line": 97, "column": 10 }, "end": { "line": 97, "column": 68 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 97, "column": 10 }, "end": { "line": 97, "column": 42 } },
            { "start": { "line": 97, "column": 46 }, "end": { "line": 97, "column": 68 } }
          ]
        },
        "7": {
          "loc": { "start": { "line": 98, "column": 10 }, "end": { "line": 98, "column": 52 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 98, "column": 10 }, "end": { "line": 98, "column": 34 } },
            { "start": { "line": 98, "column": 38 }, "end": { "line": 98, "column": 52 } }
          ]
        }
      },
      "s": {
        "0": 9,
        "1": 9,
        "2": 9,
        "3": 9,
        "4": 9,
        "5": 8,
        "6": 8,
        "7": 8,
        "8": 8,
        "9": 2,
        "10": 6,
        "11": 2,
        "12": 4,
        "13": 2,
        "14": 2,
        "15": 1,
        "16": 5,
        "17": 5,
        "18": 5,
        "19": 525
      },
      "f": { "0": 8, "1": 1, "2": 5, "3": 525 },
      "b": {
        "0": [8, 0],
        "1": [8, 0],
        "2": [8, 0],
        "3": [2],
        "4": [2],
        "5": [2],
        "6": [5, 3],
        "7": [5, 3]
      }
    },
    "/Users/sam/code/work/pepr/src/lib/core/storage.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/core/storage.ts",
      "statementMap": {
        "0": { "start": { "line": 20, "column": 0 }, "end": { "line": 20, "column": 16 } },
        "1": { "start": { "line": 24, "column": 0 }, "end": { "line": 24, "column": 16 } },
        "2": { "start": { "line": 28, "column": 0 }, "end": { "line": 28, "column": 16 } },
        "3": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 30 } },
        "4": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 35 } },
        "5": { "start": { "line": 12, "column": 22 }, "end": { "line": 12, "column": 27 } },
        "6": { "start": { "line": 13, "column": 29 }, "end": { "line": 13, "column": 33 } },
        "7": { "start": { "line": 21, "column": 2 }, "end": { "line": 21, "column": 58 } },
        "8": { "start": { "line": 25, "column": 2 }, "end": { "line": 25, "column": 42 } },
        "9": { "start": { "line": 29, "column": 2 }, "end": { "line": 29, "column": 33 } },
        "10": { "start": { "line": 82, "column": 22 }, "end": { "line": 82, "column": 24 } },
        "11": { "start": { "line": 84, "column": 47 }, "end": { "line": 84, "column": 49 } },
        "12": { "start": { "line": 85, "column": 18 }, "end": { "line": 85, "column": 19 } },
        "13": { "start": { "line": 86, "column": 35 }, "end": { "line": 86, "column": 37 } },
        "14": { "start": { "line": 88, "column": 19 }, "end": { "line": 90, "column": 3 } },
        "15": { "start": { "line": 89, "column": 4 }, "end": { "line": 89, "column": 22 } },
        "16": { "start": { "line": 92, "column": 12 }, "end": { "line": 102, "column": 3 } },
        "17": { "start": { "line": 93, "column": 4 }, "end": { "line": 93, "column": 29 } },
        "18": { "start": { "line": 95, "column": 4 }, "end": { "line": 95, "column": 20 } },
        "19": { "start": { "line": 98, "column": 4 }, "end": { "line": 101, "column": 5 } },
        "20": { "start": { "line": 100, "column": 6 }, "end": { "line": 100, "column": 49 } },
        "21": { "start": { "line": 104, "column": 12 }, "end": { "line": 110, "column": 3 } },
        "22": { "start": { "line": 105, "column": 19 }, "end": { "line": 105, "column": 64 } },
        "23": { "start": { "line": 106, "column": 4 }, "end": { "line": 108, "column": 5 } },
        "24": { "start": { "line": 107, "column": 6 }, "end": { "line": 107, "column": 20 } },
        "25": { "start": { "line": 109, "column": 4 }, "end": { "line": 109, "column": 16 } },
        "26": { "start": { "line": 112, "column": 10 }, "end": { "line": 118, "column": 3 } },
        "27": { "start": { "line": 113, "column": 4 }, "end": { "line": 117, "column": 8 } },
        "28": { "start": { "line": 116, "column": 44 }, "end": { "line": 116, "column": 63 } },
        "29": { "start": { "line": 120, "column": 15 }, "end": { "line": 122, "column": 3 } },
        "30": { "start": { "line": 121, "column": 4 }, "end": { "line": 121, "column": 54 } },
        "31": { "start": { "line": 124, "column": 12 }, "end": { "line": 126, "column": 3 } },
        "32": { "start": { "line": 125, "column": 4 }, "end": { "line": 125, "column": 58 } },
        "33": { "start": { "line": 136, "column": 19 }, "end": { "line": 155, "column": 3 } },
        "34": { "start": { "line": 137, "column": 4 }, "end": { "line": 137, "column": 58 } },
        "35": { "start": { "line": 138, "column": 31 }, "end": { "line": 138, "column": 33 } },
        "36": { "start": { "line": 140, "column": 4 }, "end": { "line": 154, "column": 7 } },
        "37": { "start": { "line": 142, "column": 6 }, "end": { "line": 145, "column": 24 } },
        "38": { "start": { "line": 143, "column": 8 }, "end": { "line": 143, "column": 30 } },
        "39": { "start": { "line": 144, "column": 8 }, "end": { "line": 144, "column": 96 } },
        "40": { "start": { "line": 147, "column": 6 }, "end": { "line": 153, "column": 9 } },
        "41": { "start": { "line": 148, "column": 8 }, "end": { "line": 152, "column": 9 } },
        "42": { "start": { "line": 149, "column": 10 }, "end": { "line": 149, "column": 32 } },
        "43": { "start": { "line": 150, "column": 10 }, "end": { "line": 150, "column": 39 } },
        "44": { "start": { "line": 151, "column": 10 }, "end": { "line": 151, "column": 24 } },
        "45": { "start": { "line": 164, "column": 22 }, "end": { "line": 182, "column": 3 } },
        "46": { "start": { "line": 165, "column": 4 }, "end": { "line": 165, "column": 54 } },
        "47": { "start": { "line": 166, "column": 31 }, "end": { "line": 166, "column": 33 } },
        "48": { "start": { "line": 167, "column": 4 }, "end": { "line": 181, "column": 7 } },
        "49": { "start": { "line": 169, "column": 6 }, "end": { "line": 172, "column": 24 } },
        "50": { "start": { "line": 170, "column": 8 }, "end": { "line": 170, "column": 30 } },
        "51": { "start": { "line": 171, "column": 8 }, "end": { "line": 171, "column": 101 } },
        "52": { "start": { "line": 174, "column": 6 }, "end": { "line": 180, "column": 9 } },
        "53": { "start": { "line": 175, "column": 8 }, "end": { "line": 179, "column": 9 } },
        "54": { "start": { "line": 176, "column": 10 }, "end": { "line": 176, "column": 32 } },
        "55": { "start": { "line": 177, "column": 10 }, "end": { "line": 177, "column": 39 } },
        "56": { "start": { "line": 178, "column": 10 }, "end": { "line": 178, "column": 24 } },
        "57": { "start": { "line": 184, "column": 14 }, "end": { "line": 188, "column": 3 } },
        "58": { "start": { "line": 185, "column": 16 }, "end": { "line": 185, "column": 36 } },
        "59": { "start": { "line": 186, "column": 4 }, "end": { "line": 186, "column": 40 } },
        "60": { "start": { "line": 187, "column": 4 }, "end": { "line": 187, "column": 39 } },
        "61": { "start": { "line": 187, "column": 17 }, "end": { "line": 187, "column": 38 } },
        "62": { "start": { "line": 190, "column": 12 }, "end": { "line": 192, "column": 3 } },
        "63": { "start": { "line": 191, "column": 4 }, "end": { "line": 191, "column": 39 } },
        "64": { "start": { "line": 198, "column": 16 }, "end": { "line": 200, "column": 3 } },
        "65": { "start": { "line": 199, "column": 4 }, "end": { "line": 199, "column": 34 } },
        "66": { "start": { "line": 202, "column": 13 }, "end": { "line": 210, "column": 3 } },
        "67": { "start": { "line": 204, "column": 4 }, "end": { "line": 206, "column": 5 } },
        "68": { "start": { "line": 205, "column": 6 }, "end": { "line": 205, "column": 34 } },
        "69": { "start": { "line": 209, "column": 4 }, "end": { "line": 209, "column": 35 } },
        "70": { "start": { "line": 218, "column": 20 }, "end": { "line": 220, "column": 3 } },
        "71": { "start": { "line": 219, "column": 4 }, "end": { "line": 219, "column": 32 } },
        "72": { "start": { "line": 81, "column": 0 }, "end": { "line": 81, "column": 13 } }
      },
      "fnMap": {
        "0": {
          "name": "v2StoreKey",
          "decl": { "start": { "line": 20, "column": 16 }, "end": { "line": 20, "column": 26 } },
          "loc": { "start": { "line": 20, "column": 38 }, "end": { "line": 22, "column": 1 } }
        },
        "1": {
          "name": "v2UnescapedStoreKey",
          "decl": { "start": { "line": 24, "column": 16 }, "end": { "line": 24, "column": 35 } },
          "loc": { "start": { "line": 24, "column": 47 }, "end": { "line": 26, "column": 1 } }
        },
        "2": {
          "name": "stripV2Prefix",
          "decl": { "start": { "line": 28, "column": 16 }, "end": { "line": 28, "column": 29 } },
          "loc": { "start": { "line": 28, "column": 41 }, "end": { "line": 30, "column": 1 } }
        },
        "3": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 88, "column": 19 }, "end": { "line": 88, "column": 20 } },
          "loc": { "start": { "line": 88, "column": 46 }, "end": { "line": 90, "column": 3 } }
        },
        "4": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 92, "column": 12 }, "end": { "line": 92, "column": 13 } },
          "loc": { "start": { "line": 92, "column": 38 }, "end": { "line": 102, "column": 3 } }
        },
        "5": {
          "name": "(anonymous_6)",
          "decl": { "start": { "line": 104, "column": 12 }, "end": { "line": 104, "column": 13 } },
          "loc": { "start": { "line": 104, "column": 43 }, "end": { "line": 110, "column": 3 } }
        },
        "6": {
          "name": "(anonymous_7)",
          "decl": { "start": { "line": 112, "column": 10 }, "end": { "line": 112, "column": 19 } },
          "loc": { "start": { "line": 112, "column": 21 }, "end": { "line": 118, "column": 3 } }
        },
        "7": {
          "name": "(anonymous_8)",
          "decl": { "start": { "line": 116, "column": 37 }, "end": { "line": 116, "column": 40 } },
          "loc": { "start": { "line": 116, "column": 44 }, "end": { "line": 116, "column": 63 } }
        },
        "8": {
          "name": "(anonymous_9)",
          "decl": { "start": { "line": 120, "column": 15 }, "end": { "line": 120, "column": 16 } },
          "loc": { "start": { "line": 120, "column": 37 }, "end": { "line": 122, "column": 3 } }
        },
        "9": {
          "name": "(anonymous_10)",
          "decl": { "start": { "line": 124, "column": 12 }, "end": { "line": 124, "column": 13 } },
          "loc": { "start": { "line": 124, "column": 49 }, "end": { "line": 126, "column": 3 } }
        },
        "10": {
          "name": "(anonymous_11)",
          "decl": { "start": { "line": 136, "column": 19 }, "end": { "line": 136, "column": 20 } },
          "loc": { "start": { "line": 136, "column": 67 }, "end": { "line": 155, "column": 3 } }
        },
        "11": {
          "name": "(anonymous_12)",
          "decl": { "start": { "line": 140, "column": 31 }, "end": { "line": 140, "column": 32 } },
          "loc": { "start": { "line": 140, "column": 51 }, "end": { "line": 154, "column": 5 } }
        },
        "12": {
          "name": "(anonymous_13)",
          "decl": { "start": { "line": 142, "column": 34 }, "end": { "line": 142, "column": 37 } },
          "loc": { "start": { "line": 142, "column": 39 }, "end": { "line": 145, "column": 7 } }
        },
        "13": {
          "name": "(anonymous_14)",
          "decl": { "start": { "line": 147, "column": 42 }, "end": { "line": 147, "column": 46 } },
          "loc": { "start": { "line": 147, "column": 49 }, "end": { "line": 153, "column": 7 } }
        },
        "14": {
          "name": "(anonymous_15)",
          "decl": { "start": { "line": 164, "column": 22 }, "end": { "line": 164, "column": 23 } },
          "loc": { "start": { "line": 164, "column": 55 }, "end": { "line": 182, "column": 3 } }
        },
        "15": {
          "name": "(anonymous_16)",
          "decl": { "start": { "line": 167, "column": 31 }, "end": { "line": 167, "column": 32 } },
          "loc": { "start": { "line": 167, "column": 51 }, "end": { "line": 181, "column": 5 } }
        },
        "16": {
          "name": "(anonymous_17)",
          "decl": { "start": { "line": 169, "column": 34 }, "end": { "line": 169, "column": 37 } },
          "loc": { "start": { "line": 169, "column": 39 }, "end": { "line": 172, "column": 7 } }
        },
        "17": {
          "name": "(anonymous_18)",
          "decl": { "start": { "line": 174, "column": 42 }, "end": { "line": 174, "column": 46 } },
          "loc": { "start": { "line": 174, "column": 49 }, "end": { "line": 180, "column": 7 } }
        },
        "18": {
          "name": "(anonymous_19)",
          "decl": { "start": { "line": 184, "column": 14 }, "end": { "line": 184, "column": 15 } },
          "loc": { "start": { "line": 184, "column": 57 }, "end": { "line": 188, "column": 3 } }
        },
        "19": {
          "name": "(anonymous_20)",
          "decl": { "start": { "line": 187, "column": 11 }, "end": { "line": 187, "column": 14 } },
          "loc": { "start": { "line": 187, "column": 17 }, "end": { "line": 187, "column": 38 } }
        },
        "20": {
          "name": "(anonymous_21)",
          "decl": { "start": { "line": 190, "column": 12 }, "end": { "line": 190, "column": 13 } },
          "loc": { "start": { "line": 190, "column": 45 }, "end": { "line": 192, "column": 3 } }
        },
        "21": {
          "name": "(anonymous_22)",
          "decl": { "start": { "line": 198, "column": 16 }, "end": { "line": 198, "column": 17 } },
          "loc": { "start": { "line": 198, "column": 38 }, "end": { "line": 200, "column": 3 } }
        },
        "22": {
          "name": "(anonymous_23)",
          "decl": { "start": { "line": 202, "column": 13 }, "end": { "line": 202, "column": 22 } },
          "loc": { "start": { "line": 202, "column": 24 }, "end": { "line": 210, "column": 3 } }
        },
        "23": {
          "name": "(anonymous_24)",
          "decl": { "start": { "line": 209, "column": 20 }, "end": { "line": 209, "column": 29 } },
          "loc": { "start": { "line": 209, "column": 31 }, "end": { "line": 209, "column": 34 } }
        },
        "24": {
          "name": "(anonymous_25)",
          "decl": { "start": { "line": 218, "column": 20 }, "end": { "line": 218, "column": 21 } },
          "loc": { "start": { "line": 218, "column": 73 }, "end": { "line": 220, "column": 3 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 93, "column": 18 }, "end": { "line": 93, "column": 28 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 93, "column": 18 }, "end": { "line": 93, "column": 22 } },
            { "start": { "line": 93, "column": 26 }, "end": { "line": 93, "column": 28 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 105, "column": 19 }, "end": { "line": 105, "column": 64 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 105, "column": 19 }, "end": { "line": 105, "column": 56 } },
            { "start": { "line": 105, "column": 60 }, "end": { "line": 105, "column": 64 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 106, "column": 4 }, "end": { "line": 108, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 106, "column": 4 }, "end": { "line": 108, "column": 5 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 106, "column": 8 }, "end": { "line": 106, "column": 85 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 106, "column": 8 }, "end": { "line": 106, "column": 23 } },
            { "start": { "line": 106, "column": 27 }, "end": { "line": 106, "column": 55 } },
            { "start": { "line": 106, "column": 59 }, "end": { "line": 106, "column": 85 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 113, "column": 4 }, "end": { "line": 116, "column": null } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 113, "column": 4 }, "end": { "line": 113, "column": 39 } },
            { "start": { "line": 114, "column": 6 }, "end": { "line": 116, "column": null } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 148, "column": 8 }, "end": { "line": 152, "column": 9 } },
          "type": "if",
          "locations": [
            { "start": { "line": 148, "column": 8 }, "end": { "line": 152, "column": 9 } }
          ]
        },
        "6": {
          "loc": { "start": { "line": 175, "column": 8 }, "end": { "line": 179, "column": 9 } },
          "type": "if",
          "locations": [
            { "start": { "line": 175, "column": 8 }, "end": { "line": 179, "column": 9 } }
          ]
        }
      },
      "s": {
        "0": 4,
        "1": 4,
        "2": 4,
        "3": 4,
        "4": 4,
        "5": 4,
        "6": 4,
        "7": 416,
        "8": 621,
        "9": 5,
        "10": 24,
        "11": 24,
        "12": 24,
        "13": 24,
        "14": 24,
        "15": 9,
        "16": 24,
        "17": 212,
        "18": 212,
        "19": 212,
        "20": 2,
        "21": 24,
        "22": 408,
        "23": 408,
        "24": 186,
        "25": 222,
        "26": 24,
        "27": 1,
        "28": 3,
        "29": 24,
        "30": 101,
        "31": 24,
        "32": 301,
        "33": 24,
        "34": 3,
        "35": 3,
        "36": 3,
        "37": 3,
        "38": 0,
        "39": 0,
        "40": 3,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 24,
        "46": 1,
        "47": 1,
        "48": 1,
        "49": 1,
        "50": 0,
        "51": 0,
        "52": 1,
        "53": 0,
        "54": 0,
        "55": 0,
        "56": 0,
        "57": 24,
        "58": 6,
        "59": 6,
        "60": 6,
        "61": 1,
        "62": 24,
        "63": 1,
        "64": 24,
        "65": 1,
        "66": 24,
        "67": 7,
        "68": 1,
        "69": 7,
        "70": 24,
        "71": 407,
        "72": 4
      },
      "f": {
        "0": 416,
        "1": 621,
        "2": 5,
        "3": 9,
        "4": 212,
        "5": 408,
        "6": 1,
        "7": 3,
        "8": 101,
        "9": 301,
        "10": 3,
        "11": 3,
        "12": 0,
        "13": 0,
        "14": 1,
        "15": 1,
        "16": 0,
        "17": 0,
        "18": 6,
        "19": 1,
        "20": 1,
        "21": 1,
        "22": 7,
        "23": 205,
        "24": 407
      },
      "b": {
        "0": [212, 1],
        "1": [408, 222],
        "2": [186],
        "3": [408, 186, 186],
        "4": [1, 1],
        "5": [0],
        "6": [0]
      }
    },
    "/Users/sam/code/work/pepr/src/lib/core/schedule.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/core/schedule.ts",
      "statementMap": {
        "0": { "start": { "line": 41, "column": 38 }, "end": { "line": 41, "column": 42 } },
        "1": { "start": { "line": 53, "column": 4 }, "end": { "line": 53, "column": 30 } },
        "2": { "start": { "line": 54, "column": 4 }, "end": { "line": 54, "column": 28 } },
        "3": { "start": { "line": 55, "column": 4 }, "end": { "line": 55, "column": 32 } },
        "4": { "start": { "line": 56, "column": 4 }, "end": { "line": 56, "column": 30 } },
        "5": { "start": { "line": 57, "column": 4 }, "end": { "line": 57, "column": 41 } },
        "6": { "start": { "line": 58, "column": 4 }, "end": { "line": 58, "column": 45 } },
        "7": { "start": { "line": 61, "column": 4 }, "end": { "line": 61, "column": 23 } },
        "8": { "start": { "line": 62, "column": 4 }, "end": { "line": 62, "column": 25 } },
        "9": { "start": { "line": 65, "column": 4 }, "end": { "line": 65, "column": 22 } },
        "10": { "start": { "line": 66, "column": 4 }, "end": { "line": 66, "column": 23 } },
        "11": { "start": { "line": 67, "column": 4 }, "end": { "line": 67, "column": 25 } },
        "12": { "start": { "line": 74, "column": 19 }, "end": { "line": 74, "column": 62 } },
        "13": { "start": { "line": 75, "column": 4 }, "end": { "line": 80, "column": 5 } },
        "14": { "start": { "line": 76, "column": 29 }, "end": { "line": 76, "column": 47 } },
        "15": { "start": { "line": 77, "column": 6 }, "end": { "line": 77, "column": 53 } },
        "16": { "start": { "line": 78, "column": 6 }, "end": { "line": 78, "column": 49 } },
        "17": { "start": { "line": 79, "column": 6 }, "end": { "line": 79, "column": 57 } },
        "18": { "start": { "line": 88, "column": 21 }, "end": { "line": 93, "column": 6 } },
        "19": { "start": { "line": 94, "column": 4 }, "end": { "line": 94, "column": 74 } },
        "20": { "start": { "line": 101, "column": 4 }, "end": { "line": 116, "column": 5 } },
        "21": { "start": { "line": 103, "column": 8 }, "end": { "line": 103, "column": 92 } },
        "22": { "start": { "line": 103, "column": 29 }, "end": { "line": 103, "column": 92 } },
        "23": { "start": { "line": 104, "column": 8 }, "end": { "line": 104, "column": 42 } },
        "24": { "start": { "line": 105, "column": 8 }, "end": { "line": 105, "column": 14 } },
        "25": { "start": { "line": 108, "column": 8 }, "end": { "line": 108, "column": 47 } },
        "26": { "start": { "line": 109, "column": 8 }, "end": { "line": 109, "column": 14 } },
        "27": { "start": { "line": 112, "column": 8 }, "end": { "line": 112, "column": 52 } },
        "28": { "start": { "line": 113, "column": 8 }, "end": { "line": 113, "column": 14 } },
        "29": { "start": { "line": 115, "column": 8 }, "end": { "line": 115, "column": 45 } },
        "30": { "start": { "line": 123, "column": 16 }, "end": { "line": 123, "column": 26 } },
        "31": { "start": { "line": 126, "column": 4 }, "end": { "line": 128, "column": 5 } },
        "32": { "start": { "line": 127, "column": 6 }, "end": { "line": 127, "column": 33 } },
        "33": { "start": { "line": 130, "column": 4 }, "end": { "line": 135, "column": 5 } },
        "34": { "start": { "line": 131, "column": 6 }, "end": { "line": 131, "column": 55 } },
        "35": { "start": { "line": 132, "column": 11 }, "end": { "line": 135, "column": 5 } },
        "36": { "start": { "line": 133, "column": 28 }, "end": { "line": 133, "column": 56 } },
        "37": { "start": { "line": 134, "column": 6 }, "end": { "line": 134, "column": 72 } },
        "38": { "start": { "line": 137, "column": 4 }, "end": { "line": 143, "column": 5 } },
        "39": { "start": { "line": 138, "column": 6 }, "end": { "line": 138, "column": 19 } },
        "40": { "start": { "line": 140, "column": 6 }, "end": { "line": 142, "column": 16 } },
        "41": { "start": { "line": 141, "column": 8 }, "end": { "line": 141, "column": 21 } },
        "42": { "start": { "line": 150, "column": 4 }, "end": { "line": 162, "column": 22 } },
        "43": { "start": { "line": 151, "column": 6 }, "end": { "line": 161, "column": 7 } },
        "44": { "start": { "line": 152, "column": 8 }, "end": { "line": 152, "column": 20 } },
        "45": { "start": { "line": 153, "column": 8 }, "end": { "line": 153, "column": 15 } },
        "46": { "start": { "line": 155, "column": 8 }, "end": { "line": 155, "column": 19 } },
        "47": { "start": { "line": 157, "column": 8 }, "end": { "line": 159, "column": 9 } },
        "48": { "start": { "line": 158, "column": 10 }, "end": { "line": 158, "column": 32 } },
        "49": { "start": { "line": 160, "column": 8 }, "end": { "line": 160, "column": 27 } },
        "50": { "start": { "line": 169, "column": 4 }, "end": { "line": 172, "column": 5 } },
        "51": { "start": { "line": 170, "column": 6 }, "end": { "line": 170, "column": 37 } },
        "52": { "start": { "line": 171, "column": 6 }, "end": { "line": 171, "column": 29 } },
        "53": { "start": { "line": 173, "column": 4 }, "end": { "line": 173, "column": 51 } },
        "54": { "start": { "line": 40, "column": 0 }, "end": { "line": 40, "column": 13 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 52, "column": 2 }, "end": { "line": 52, "column": 14 } },
          "loc": { "start": { "line": 52, "column": 32 }, "end": { "line": 59, "column": 3 } }
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 60, "column": 2 }, "end": { "line": 60, "column": 10 } },
          "loc": { "start": { "line": 60, "column": 27 }, "end": { "line": 63, "column": 3 } }
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 64, "column": 2 }, "end": { "line": 64, "column": 15 } },
          "loc": { "start": { "line": 64, "column": 15 }, "end": { "line": 68, "column": 3 } }
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 73, "column": 2 }, "end": { "line": 73, "column": 12 } },
          "loc": { "start": { "line": 73, "column": 12 }, "end": { "line": 81, "column": 3 } }
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 87, "column": 2 }, "end": { "line": 87, "column": 13 } },
          "loc": { "start": { "line": 87, "column": 13 }, "end": { "line": 95, "column": 3 } }
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 100, "column": 2 }, "end": { "line": 100, "column": 13 } },
          "loc": { "start": { "line": 100, "column": 13 }, "end": { "line": 117, "column": 3 } }
        },
        "6": {
          "name": "(anonymous_6)",
          "decl": { "start": { "line": 122, "column": 2 }, "end": { "line": 122, "column": 15 } },
          "loc": { "start": { "line": 122, "column": 15 }, "end": { "line": 144, "column": 3 } }
        },
        "7": {
          "name": "(anonymous_7)",
          "decl": { "start": { "line": 140, "column": 17 }, "end": { "line": 140, "column": 20 } },
          "loc": { "start": { "line": 140, "column": 22 }, "end": { "line": 142, "column": 7 } }
        },
        "8": {
          "name": "(anonymous_8)",
          "decl": { "start": { "line": 149, "column": 2 }, "end": { "line": 149, "column": 7 } },
          "loc": { "start": { "line": 149, "column": 7 }, "end": { "line": 163, "column": 3 } }
        },
        "9": {
          "name": "(anonymous_9)",
          "decl": { "start": { "line": 150, "column": 34 }, "end": { "line": 150, "column": 37 } },
          "loc": { "start": { "line": 150, "column": 39 }, "end": { "line": 162, "column": 5 } }
        },
        "10": {
          "name": "(anonymous_10)",
          "decl": { "start": { "line": 168, "column": 2 }, "end": { "line": 168, "column": 6 } },
          "loc": { "start": { "line": 168, "column": 6 }, "end": { "line": 174, "column": 3 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 74, "column": 19 }, "end": { "line": 74, "column": 62 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 74, "column": 19 }, "end": { "line": 74, "column": 29 } },
            { "start": { "line": 74, "column": 33 }, "end": { "line": 74, "column": 62 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 75, "column": 4 }, "end": { "line": 80, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 75, "column": 4 }, "end": { "line": 80, "column": 5 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 94, "column": 4 }, "end": { "line": 94, "column": 73 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 94, "column": 4 }, "end": { "line": 94, "column": 14 } },
            { "start": { "line": 94, "column": 18 }, "end": { "line": 94, "column": 73 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 101, "column": 4 }, "end": { "line": 116, "column": 5 } },
          "type": "switch",
          "locations": [
            { "start": { "line": 102, "column": 6 }, "end": { "line": 105, "column": 14 } },
            { "start": { "line": 106, "column": 6 }, "end": { "line": 106, "column": 21 } },
            { "start": { "line": 107, "column": 6 }, "end": { "line": 109, "column": 14 } },
            { "start": { "line": 110, "column": 6 }, "end": { "line": 110, "column": 19 } },
            { "start": { "line": 111, "column": 6 }, "end": { "line": 113, "column": 14 } },
            { "start": { "line": 114, "column": 6 }, "end": { "line": 115, "column": 45 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 103, "column": 8 }, "end": { "line": 103, "column": 92 } },
          "type": "if",
          "locations": [
            { "start": { "line": 103, "column": 8 }, "end": { "line": 103, "column": 92 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 126, "column": 4 }, "end": { "line": 128, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 126, "column": 4 }, "end": { "line": 128, "column": 5 } }
          ]
        },
        "6": {
          "loc": { "start": { "line": 126, "column": 8 }, "end": { "line": 126, "column": 44 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 126, "column": 8 }, "end": { "line": 126, "column": 26 } },
            { "start": { "line": 126, "column": 30 }, "end": { "line": 126, "column": 44 } }
          ]
        },
        "7": {
          "loc": { "start": { "line": 130, "column": 4 }, "end": { "line": 135, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 130, "column": 4 }, "end": { "line": 135, "column": 5 } },
            { "start": { "line": 132, "column": 11 }, "end": { "line": 135, "column": 5 } }
          ]
        },
        "8": {
          "loc": { "start": { "line": 132, "column": 11 }, "end": { "line": 135, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 132, "column": 11 }, "end": { "line": 135, "column": 5 } }
          ]
        },
        "9": {
          "loc": { "start": { "line": 132, "column": 15 }, "end": { "line": 132, "column": 50 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 132, "column": 15 }, "end": { "line": 132, "column": 33 } },
            { "start": { "line": 132, "column": 37 }, "end": { "line": 132, "column": 50 } }
          ]
        },
        "10": {
          "loc": { "start": { "line": 137, "column": 4 }, "end": { "line": 143, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 137, "column": 4 }, "end": { "line": 143, "column": 5 } },
            { "start": { "line": 139, "column": 11 }, "end": { "line": 143, "column": 5 } }
          ]
        },
        "11": {
          "loc": { "start": { "line": 137, "column": 8 }, "end": { "line": 137, "column": 41 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 137, "column": 8 }, "end": { "line": 137, "column": 27 } },
            { "start": { "line": 137, "column": 31 }, "end": { "line": 137, "column": 41 } }
          ]
        },
        "12": {
          "loc": { "start": { "line": 151, "column": 6 }, "end": { "line": 161, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 151, "column": 6 }, "end": { "line": 161, "column": 7 } },
            { "start": { "line": 154, "column": 13 }, "end": { "line": 161, "column": 7 } }
          ]
        },
        "13": {
          "loc": { "start": { "line": 157, "column": 8 }, "end": { "line": 159, "column": 9 } },
          "type": "if",
          "locations": [
            { "start": { "line": 157, "column": 8 }, "end": { "line": 159, "column": 9 } }
          ]
        },
        "14": {
          "loc": { "start": { "line": 157, "column": 12 }, "end": { "line": 157, "column": 54 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 157, "column": 12 }, "end": { "line": 157, "column": 28 } },
            { "start": { "line": 157, "column": 32 }, "end": { "line": 157, "column": 54 } }
          ]
        },
        "15": {
          "loc": { "start": { "line": 169, "column": 4 }, "end": { "line": 172, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 169, "column": 4 }, "end": { "line": 172, "column": 5 } }
          ]
        },
        "16": {
          "loc": { "start": { "line": 173, "column": 4 }, "end": { "line": 173, "column": 50 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 173, "column": 4 }, "end": { "line": 173, "column": 14 } },
            { "start": { "line": 173, "column": 18 }, "end": { "line": 173, "column": 50 } }
          ]
        }
      },
      "s": {
        "0": 14,
        "1": 14,
        "2": 14,
        "3": 14,
        "4": 14,
        "5": 14,
        "6": 14,
        "7": 7,
        "8": 7,
        "9": 8,
        "10": 8,
        "11": 8,
        "12": 10,
        "13": 10,
        "14": 2,
        "15": 2,
        "16": 2,
        "17": 2,
        "18": 11,
        "19": 11,
        "20": 15,
        "21": 5,
        "22": 1,
        "23": 4,
        "24": 4,
        "25": 7,
        "26": 7,
        "27": 2,
        "28": 2,
        "29": 1,
        "30": 10,
        "31": 10,
        "32": 1,
        "33": 10,
        "34": 5,
        "35": 5,
        "36": 1,
        "37": 1,
        "38": 10,
        "39": 8,
        "40": 2,
        "41": 1,
        "42": 11,
        "43": 17,
        "44": 7,
        "45": 7,
        "46": 10,
        "47": 10,
        "48": 9,
        "49": 10,
        "50": 9,
        "51": 5,
        "52": 5,
        "53": 9,
        "54": 4
      },
      "f": {
        "0": 14,
        "1": 7,
        "2": 8,
        "3": 10,
        "4": 11,
        "5": 15,
        "6": 10,
        "7": 1,
        "8": 11,
        "9": 17,
        "10": 9
      },
      "b": {
        "0": [10, 10],
        "1": [2],
        "2": [11, 2],
        "3": [5, 6, 7, 1, 2, 1],
        "4": [1],
        "5": [1],
        "6": [10, 1],
        "7": [5, 5],
        "8": [1],
        "9": [5, 1],
        "10": [8, 2],
        "11": [10, 6],
        "12": [7, 10],
        "13": [9],
        "14": [10, 9],
        "15": [5],
        "16": [9, 8]
      }
    },
    "/Users/sam/code/work/pepr/integration/helpers/workdir.ts": {
      "path": "/Users/sam/code/work/pepr/integration/helpers/workdir.ts",
      "statementMap": {
        "0": { "start": { "line": 1, "column": 0 }, "end": { "line": 1, "column": 30 } },
        "1": { "start": { "line": 2, "column": 0 }, "end": { "line": 2, "column": 34 } },
        "2": { "start": { "line": 3, "column": 0 }, "end": { "line": 3, "column": 39 } },
        "3": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 37 } },
        "4": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 31 } },
        "5": { "start": { "line": 12, "column": 4 }, "end": { "line": 12, "column": 21 } },
        "6": { "start": { "line": 13, "column": 4 }, "end": { "line": 13, "column": 35 } },
        "7": { "start": { "line": 17, "column": 4 }, "end": { "line": 17, "column": 43 } },
        "8": { "start": { "line": 21, "column": 4 }, "end": { "line": 21, "column": 53 } },
        "9": { "start": { "line": 22, "column": 4 }, "end": { "line": 22, "column": 23 } },
        "10": { "start": { "line": 26, "column": 4 }, "end": { "line": 26, "column": 35 } },
        "11": { "start": { "line": 30, "column": 21 }, "end": { "line": 30, "column": 50 } },
        "12": { "start": { "line": 31, "column": 4 }, "end": { "line": 31, "column": 46 } },
        "13": { "start": { "line": 35, "column": 4 }, "end": { "line": 35, "column": 63 } },
        "14": { "start": { "line": 39, "column": 4 }, "end": { "line": 39, "column": 24 } },
        "15": { "start": { "line": 40, "column": 4 }, "end": { "line": 40, "column": 24 } },
        "16": { "start": { "line": 41, "column": 4 }, "end": { "line": 41, "column": 31 } },
        "17": { "start": { "line": 7, "column": 0 }, "end": { "line": 7, "column": 13 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_9)",
          "decl": { "start": { "line": 11, "column": 2 }, "end": { "line": 11, "column": 14 } },
          "loc": { "start": { "line": 11, "column": 54 }, "end": { "line": 14, "column": 3 } }
        },
        "1": {
          "name": "(anonymous_10)",
          "decl": { "start": { "line": 16, "column": 2 }, "end": { "line": 16, "column": 6 } },
          "loc": { "start": { "line": 16, "column": 6 }, "end": { "line": 18, "column": 3 } }
        },
        "2": {
          "name": "(anonymous_11)",
          "decl": { "start": { "line": 20, "column": 2 }, "end": { "line": 20, "column": 7 } },
          "loc": { "start": { "line": 20, "column": 14 }, "end": { "line": 23, "column": 3 } }
        },
        "3": {
          "name": "(anonymous_12)",
          "decl": { "start": { "line": 25, "column": 2 }, "end": { "line": 25, "column": 7 } },
          "loc": { "start": { "line": 25, "column": 14 }, "end": { "line": 27, "column": 3 } }
        },
        "4": {
          "name": "(anonymous_13)",
          "decl": { "start": { "line": 29, "column": 2 }, "end": { "line": 29, "column": 7 } },
          "loc": { "start": { "line": 29, "column": 15 }, "end": { "line": 32, "column": 3 } }
        },
        "5": {
          "name": "(anonymous_14)",
          "decl": { "start": { "line": 34, "column": 2 }, "end": { "line": 34, "column": 7 } },
          "loc": { "start": { "line": 34, "column": 14 }, "end": { "line": 36, "column": 3 } }
        },
        "6": {
          "name": "(anonymous_15)",
          "decl": { "start": { "line": 38, "column": 2 }, "end": { "line": 38, "column": 7 } },
          "loc": { "start": { "line": 38, "column": 16 }, "end": { "line": 42, "column": 3 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 11, "column": 28 }, "end": { "line": 11, "column": 54 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 11, "column": 43 }, "end": { "line": 11, "column": 54 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 31, "column": 11 }, "end": { "line": 31, "column": 45 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 31, "column": 33 }, "end": { "line": 31, "column": 38 } },
            { "start": { "line": 31, "column": 41 }, "end": { "line": 31, "column": 45 } }
          ]
        }
      },
      "s": {
        "0": 10,
        "1": 10,
        "2": 10,
        "3": 10,
        "4": 10,
        "5": 20,
        "6": 20,
        "7": 99,
        "8": 20,
        "9": 20,
        "10": 5,
        "11": 2,
        "12": 2,
        "13": 14,
        "14": 12,
        "15": 12,
        "16": 12,
        "17": 10
      },
      "f": { "0": 20, "1": 99, "2": 20, "3": 5, "4": 2, "5": 14, "6": 12 },
      "b": { "0": [8], "1": [1, 1] }
    },
    "/Users/sam/code/work/pepr/integration/helpers/time.ts": {
      "path": "/Users/sam/code/work/pepr/integration/helpers/time.ts",
      "statementMap": {
        "0": { "start": { "line": 14, "column": 0 }, "end": { "line": 14, "column": 7 } },
        "1": { "start": { "line": 18, "column": 0 }, "end": { "line": 18, "column": 16 } },
        "2": { "start": { "line": 62, "column": 0 }, "end": { "line": 62, "column": 16 } },
        "3": { "start": { "line": 4, "column": 38 }, "end": { "line": 4, "column": 40 } },
        "4": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 13 } },
        "5": { "start": { "line": 6, "column": 0 }, "end": { "line": 6, "column": 26 } },
        "6": { "start": { "line": 7, "column": 0 }, "end": { "line": 7, "column": 23 } },
        "7": { "start": { "line": 8, "column": 0 }, "end": { "line": 8, "column": 23 } },
        "8": { "start": { "line": 9, "column": 0 }, "end": { "line": 9, "column": 23 } },
        "9": { "start": { "line": 10, "column": 0 }, "end": { "line": 10, "column": 22 } },
        "10": { "start": { "line": 11, "column": 0 }, "end": { "line": 11, "column": 24 } },
        "11": { "start": { "line": 12, "column": 0 }, "end": { "line": 12, "column": 24 } },
        "12": { "start": { "line": 15, "column": 2 }, "end": { "line": 15, "column": 57 } },
        "13": { "start": { "line": 15, "column": 32 }, "end": { "line": 15, "column": 55 } },
        "14": { "start": { "line": 19, "column": 17 }, "end": { "line": 19, "column": 55 } },
        "15": { "start": { "line": 19, "column": 44 }, "end": { "line": 19, "column": 54 } },
        "16": { "start": { "line": 21, "column": 27 }, "end": { "line": 21, "column": 29 } },
        "17": { "start": { "line": 22, "column": 2 }, "end": { "line": 26, "column": 5 } },
        "18": { "start": { "line": 23, "column": 17 }, "end": { "line": 23, "column": 40 } },
        "19": { "start": { "line": 24, "column": 21 }, "end": { "line": 24, "column": 90 } },
        "20": { "start": { "line": 24, "column": 53 }, "end": { "line": 24, "column": 90 } },
        "21": { "start": { "line": 25, "column": 4 }, "end": { "line": 25, "column": 86 } },
        "22": { "start": { "line": 28, "column": 16 }, "end": { "line": 30, "column": null } },
        "23": { "start": { "line": 29, "column": 29 }, "end": { "line": 29, "column": 85 } },
        "24": { "start": { "line": 33, "column": 17 }, "end": { "line": 45, "column": 4 } },
        "25": { "start": { "line": 34, "column": 22 }, "end": { "line": 34, "column": 35 } },
        "26": { "start": { "line": 35, "column": 4 }, "end": { "line": 37, "column": 5 } },
        "27": { "start": { "line": 36, "column": 6 }, "end": { "line": 36, "column": 73 } },
        "28": { "start": { "line": 39, "column": 23 }, "end": { "line": 39, "column": 41 } },
        "29": { "start": { "line": 40, "column": 4 }, "end": { "line": 42, "column": 5 } },
        "30": { "start": { "line": 41, "column": 6 }, "end": { "line": 41, "column": 72 } },
        "31": { "start": { "line": 44, "column": 4 }, "end": { "line": 44, "column": 29 } },
        "32": { "start": { "line": 47, "column": 23 }, "end": { "line": 47, "column": 94 } },
        "33": { "start": { "line": 47, "column": 67 }, "end": { "line": 47, "column": 90 } },
        "34": { "start": { "line": 49, "column": 2 }, "end": { "line": 49, "column": 22 } },
        "35": { "start": { "line": 53, "column": 15 }, "end": { "line": 53, "column": 17 } },
        "36": { "start": { "line": 54, "column": 15 }, "end": { "line": 54, "column": 16 } },
        "37": { "start": { "line": 55, "column": 2 }, "end": { "line": 58, "column": 3 } },
        "38": { "start": { "line": 56, "column": 4 }, "end": { "line": 56, "column": 19 } },
        "39": { "start": { "line": 57, "column": 4 }, "end": { "line": 57, "column": 16 } },
        "40": { "start": { "line": 59, "column": 2 }, "end": { "line": 59, "column": 26 } },
        "41": { "start": { "line": 63, "column": 31 }, "end": { "line": 63, "column": 47 } },
        "42": { "start": { "line": 64, "column": 15 }, "end": { "line": 64, "column": 17 } },
        "43": { "start": { "line": 66, "column": 2 }, "end": { "line": 66, "column": 42 } },
        "44": { "start": { "line": 67, "column": 2 }, "end": { "line": 67, "column": 44 } },
        "45": { "start": { "line": 68, "column": 2 }, "end": { "line": 68, "column": 42 } },
        "46": { "start": { "line": 69, "column": 2 }, "end": { "line": 69, "column": 42 } },
        "47": { "start": { "line": 70, "column": 2 }, "end": { "line": 70, "column": 42 } },
        "48": { "start": { "line": 71, "column": 2 }, "end": { "line": 71, "column": 42 } },
        "49": { "start": { "line": 72, "column": 2 }, "end": { "line": 72, "column": 42 } },
        "50": { "start": { "line": 74, "column": 15 }, "end": { "line": 74, "column": 17 } },
        "51": { "start": { "line": 75, "column": 2 }, "end": { "line": 75, "column": 45 } },
        "52": { "start": { "line": 76, "column": 2 }, "end": { "line": 76, "column": 48 } },
        "53": { "start": { "line": 77, "column": 2 }, "end": { "line": 77, "column": 45 } },
        "54": { "start": { "line": 78, "column": 2 }, "end": { "line": 78, "column": 45 } },
        "55": { "start": { "line": 79, "column": 2 }, "end": { "line": 79, "column": 45 } },
        "56": { "start": { "line": 80, "column": 2 }, "end": { "line": 80, "column": 45 } },
        "57": { "start": { "line": 81, "column": 2 }, "end": { "line": 81, "column": 45 } },
        "58": { "start": { "line": 82, "column": 2 }, "end": { "line": 82, "column": 56 } },
        "59": { "start": { "line": 84, "column": 2 }, "end": { "line": 84, "column": 16 } }
      },
      "fnMap": {
        "0": {
          "name": "nap",
          "decl": { "start": { "line": 14, "column": 22 }, "end": { "line": 14, "column": 25 } },
          "loc": { "start": { "line": 14, "column": 36 }, "end": { "line": 16, "column": 1 } }
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 15, "column": 21 }, "end": { "line": 15, "column": 28 } },
          "loc": { "start": { "line": 15, "column": 32 }, "end": { "line": 15, "column": 55 } }
        },
        "2": {
          "name": "toMs",
          "decl": { "start": { "line": 18, "column": 16 }, "end": { "line": 18, "column": 20 } },
          "loc": { "start": { "line": 18, "column": 34 }, "end": { "line": 50, "column": 1 } }
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 19, "column": 37 }, "end": { "line": 19, "column": 40 } },
          "loc": { "start": { "line": 19, "column": 44 }, "end": { "line": 19, "column": 54 } }
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 22, "column": 17 }, "end": { "line": 22, "column": 21 } },
          "loc": { "start": { "line": 22, "column": 24 }, "end": { "line": 26, "column": 3 } }
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 24, "column": 21 }, "end": { "line": 24, "column": 22 } },
          "loc": { "start": { "line": 24, "column": 53 }, "end": { "line": 24, "column": 90 } }
        },
        "6": {
          "name": "(anonymous_6)",
          "decl": { "start": { "line": 29, "column": 4 }, "end": { "line": 29, "column": 5 } },
          "loc": { "start": { "line": 29, "column": 29 }, "end": { "line": 29, "column": 85 } }
        },
        "7": {
          "name": "(anonymous_7)",
          "decl": { "start": { "line": 33, "column": 45 }, "end": { "line": 33, "column": 46 } },
          "loc": { "start": { "line": 33, "column": 61 }, "end": { "line": 45, "column": 3 } }
        },
        "8": {
          "name": "(anonymous_8)",
          "decl": { "start": { "line": 47, "column": 45 }, "end": { "line": 47, "column": 46 } },
          "loc": { "start": { "line": 47, "column": 67 }, "end": { "line": 47, "column": 90 } }
        },
        "9": {
          "name": "reduceBy",
          "decl": { "start": { "line": 52, "column": 9 }, "end": { "line": 52, "column": 17 } },
          "loc": { "start": { "line": 52, "column": 42 }, "end": { "line": 60, "column": 1 } }
        },
        "10": {
          "name": "toHuman",
          "decl": { "start": { "line": 62, "column": 16 }, "end": { "line": 62, "column": 23 } },
          "loc": { "start": { "line": 62, "column": 34 }, "end": { "line": 85, "column": 1 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 25, "column": 4 }, "end": { "line": 25, "column": 85 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 25, "column": 27 }, "end": { "line": 25, "column": 65 } },
            { "start": { "line": 25, "column": 68 }, "end": { "line": 25, "column": 85 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 29, "column": 29 }, "end": { "line": 29, "column": 85 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 29, "column": 45 }, "end": { "line": 29, "column": 79 } },
            { "start": { "line": 29, "column": 82 }, "end": { "line": 29, "column": 85 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 35, "column": 4 }, "end": { "line": 37, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 35, "column": 4 }, "end": { "line": 37, "column": 5 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 40, "column": 4 }, "end": { "line": 42, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 40, "column": 4 }, "end": { "line": 42, "column": 5 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 75, "column": 11 }, "end": { "line": 75, "column": 44 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 75, "column": 19 }, "end": { "line": 75, "column": 35 } },
            { "start": { "line": 75, "column": 38 }, "end": { "line": 75, "column": 44 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 76, "column": 11 }, "end": { "line": 76, "column": 47 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 76, "column": 20 }, "end": { "line": 76, "column": 38 } },
            { "start": { "line": 76, "column": 41 }, "end": { "line": 76, "column": 47 } }
          ]
        },
        "6": {
          "loc": { "start": { "line": 77, "column": 11 }, "end": { "line": 77, "column": 44 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 77, "column": 19 }, "end": { "line": 77, "column": 35 } },
            { "start": { "line": 77, "column": 38 }, "end": { "line": 77, "column": 44 } }
          ]
        },
        "7": {
          "loc": { "start": { "line": 78, "column": 11 }, "end": { "line": 78, "column": 44 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 78, "column": 19 }, "end": { "line": 78, "column": 35 } },
            { "start": { "line": 78, "column": 38 }, "end": { "line": 78, "column": 44 } }
          ]
        },
        "8": {
          "loc": { "start": { "line": 79, "column": 11 }, "end": { "line": 79, "column": 44 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 79, "column": 19 }, "end": { "line": 79, "column": 35 } },
            { "start": { "line": 79, "column": 38 }, "end": { "line": 79, "column": 44 } }
          ]
        },
        "9": {
          "loc": { "start": { "line": 80, "column": 11 }, "end": { "line": 80, "column": 44 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 80, "column": 19 }, "end": { "line": 80, "column": 35 } },
            { "start": { "line": 80, "column": 38 }, "end": { "line": 80, "column": 44 } }
          ]
        },
        "10": {
          "loc": { "start": { "line": 81, "column": 11 }, "end": { "line": 81, "column": 44 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 81, "column": 19 }, "end": { "line": 81, "column": 35 } },
            { "start": { "line": 81, "column": 38 }, "end": { "line": 81, "column": 44 } }
          ]
        },
        "11": {
          "loc": { "start": { "line": 82, "column": 11 }, "end": { "line": 82, "column": 55 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 82, "column": 24 }, "end": { "line": 82, "column": 46 } },
            { "start": { "line": 82, "column": 49 }, "end": { "line": 82, "column": 55 } }
          ]
        }
      },
      "s": {
        "0": 11,
        "1": 11,
        "2": 11,
        "3": 11,
        "4": 11,
        "5": 11,
        "6": 11,
        "7": 11,
        "8": 11,
        "9": 11,
        "10": 11,
        "11": 11,
        "12": 12,
        "13": 12,
        "14": 41,
        "15": 138,
        "16": 41,
        "17": 41,
        "18": 138,
        "19": 138,
        "20": 138,
        "21": 138,
        "22": 41,
        "23": 113,
        "24": 41,
        "25": 55,
        "26": 55,
        "27": 1,
        "28": 54,
        "29": 54,
        "30": 1,
        "31": 53,
        "32": 39,
        "33": 53,
        "34": 39,
        "35": 63,
        "36": 63,
        "37": 63,
        "38": 14,
        "39": 14,
        "40": 63,
        "41": 9,
        "42": 9,
        "43": 9,
        "44": 9,
        "45": 9,
        "46": 9,
        "47": 9,
        "48": 9,
        "49": 9,
        "50": 9,
        "51": 9,
        "52": 9,
        "53": 9,
        "54": 9,
        "55": 9,
        "56": 9,
        "57": 9,
        "58": 9,
        "59": 9
      },
      "f": {
        "0": 12,
        "1": 12,
        "2": 41,
        "3": 138,
        "4": 138,
        "5": 138,
        "6": 113,
        "7": 55,
        "8": 53,
        "9": 63,
        "10": 9
      },
      "b": {
        "0": [26, 112],
        "1": [57, 56],
        "2": [1],
        "3": [1],
        "4": [2, 7],
        "5": [2, 7],
        "6": [2, 7],
        "7": [2, 7],
        "8": [2, 7],
        "9": [2, 7],
        "10": [2, 7],
        "11": [2, 7]
      }
    },
    "/Users/sam/code/work/pepr/integration/helpers/pepr.ts": {
      "path": "/Users/sam/code/work/pepr/integration/helpers/pepr.ts",
      "statementMap": {
        "0": { "start": { "line": 8, "column": 0 }, "end": { "line": 8, "column": 7 } },
        "1": { "start": { "line": 15, "column": 0 }, "end": { "line": 15, "column": 7 } },
        "2": { "start": { "line": 24, "column": 0 }, "end": { "line": 24, "column": 7 } },
        "3": { "start": { "line": 1, "column": 0 }, "end": { "line": 1, "column": 36 } },
        "4": { "start": { "line": 2, "column": 0 }, "end": { "line": 2, "column": 55 } },
        "5": { "start": { "line": 3, "column": 0 }, "end": { "line": 3, "column": 42 } },
        "6": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 30 } },
        "7": { "start": { "line": 6, "column": 13 }, "end": { "line": 6, "column": 22 } },
        "8": { "start": { "line": 9, "column": 14 }, "end": { "line": 9, "column": 53 } },
        "9": { "start": { "line": 10, "column": 14 }, "end": { "line": 10, "column": 29 } },
        "10": { "start": { "line": 11, "column": 18 }, "end": { "line": 11, "column": 44 } },
        "11": { "start": { "line": 12, "column": 2 }, "end": { "line": 12, "column": 32 } },
        "12": { "start": { "line": 16, "column": 22 }, "end": { "line": 16, "column": 50 } },
        "13": { "start": { "line": 17, "column": 22 }, "end": { "line": 17, "column": 83 } },
        "14": { "start": { "line": 19, "column": 15 }, "end": { "line": 19, "column": 34 } },
        "15": { "start": { "line": 20, "column": 2 }, "end": { "line": 20, "column": 78 } },
        "16": { "start": { "line": 21, "column": 2 }, "end": { "line": 21, "column": 69 } },
        "17": { "start": { "line": 25, "column": 15 }, "end": { "line": 25, "column": 34 } },
        "18": { "start": { "line": 26, "column": 14 }, "end": { "line": 26, "column": 57 } },
        "19": { "start": { "line": 28, "column": 16 }, "end": { "line": 28, "column": 27 } },
        "20": { "start": { "line": 29, "column": 2 }, "end": { "line": 29, "column": 22 } },
        "21": { "start": { "line": 31, "column": 15 }, "end": { "line": 31, "column": 70 } },
        "22": { "start": { "line": 32, "column": 2 }, "end": { "line": 32, "column": 19 } },
        "23": { "start": { "line": 33, "column": 2 }, "end": { "line": 33, "column": 86 } },
        "24": { "start": { "line": 35, "column": 14 }, "end": { "line": 35, "column": 28 } },
        "25": { "start": { "line": 36, "column": 2 }, "end": { "line": 36, "column": 28 } }
      },
      "fnMap": {
        "0": {
          "name": "projectRoot",
          "decl": { "start": { "line": 8, "column": 22 }, "end": { "line": 8, "column": 33 } },
          "loc": { "start": { "line": 8, "column": 33 }, "end": { "line": 13, "column": 1 } }
        },
        "1": {
          "name": "tgzifyModule",
          "decl": { "start": { "line": 15, "column": 22 }, "end": { "line": 15, "column": 34 } },
          "loc": { "start": { "line": 15, "column": 53 }, "end": { "line": 22, "column": 1 } }
        },
        "2": {
          "name": "cli",
          "decl": { "start": { "line": 24, "column": 22 }, "end": { "line": 24, "column": 25 } },
          "loc": { "start": { "line": 24, "column": 53 }, "end": { "line": 37, "column": 1 } }
        }
      },
      "branchMap": {},
      "s": {
        "0": 8,
        "1": 8,
        "2": 8,
        "3": 8,
        "4": 8,
        "5": 8,
        "6": 8,
        "7": 8,
        "8": 26,
        "9": 26,
        "10": 26,
        "11": 26,
        "12": 6,
        "13": 6,
        "14": 6,
        "15": 6,
        "16": 6,
        "17": 18,
        "18": 18,
        "19": 18,
        "20": 18,
        "21": 18,
        "22": 18,
        "23": 18,
        "24": 18,
        "25": 18
      },
      "f": { "0": 26, "1": 6, "2": 18 },
      "b": {}
    },
    "/Users/sam/code/work/pepr/integration/helpers/cmd.ts": {
      "path": "/Users/sam/code/work/pepr/integration/helpers/cmd.ts",
      "statementMap": {
        "0": { "start": { "line": 1, "column": 0 }, "end": { "line": 1, "column": 38 } },
        "1": { "start": { "line": 24, "column": 4 }, "end": { "line": 24, "column": 24 } },
        "2": { "start": { "line": 25, "column": 4 }, "end": { "line": 25, "column": 34 } },
        "3": { "start": { "line": 26, "column": 4 }, "end": { "line": 26, "column": 41 } },
        "4": { "start": { "line": 27, "column": 4 }, "end": { "line": 27, "column": 72 } },
        "5": { "start": { "line": 31, "column": 4 }, "end": { "line": 63, "column": 7 } },
        "6": { "start": { "line": 32, "column": 19 }, "end": { "line": 36, "column": 8 } },
        "7": { "start": { "line": 38, "column": 6 }, "end": { "line": 38, "column": 64 } },
        "8": { "start": { "line": 38, "column": 33 }, "end": { "line": 38, "column": 62 } },
        "9": { "start": { "line": 39, "column": 6 }, "end": { "line": 39, "column": 23 } },
        "10": { "start": { "line": 41, "column": 27 }, "end": { "line": 41, "column": 42 } },
        "11": { "start": { "line": 42, "column": 6 }, "end": { "line": 44, "column": 9 } },
        "12": { "start": { "line": 43, "column": 8 }, "end": { "line": 43, "column": 46 } },
        "13": { "start": { "line": 46, "column": 27 }, "end": { "line": 46, "column": 42 } },
        "14": { "start": { "line": 47, "column": 6 }, "end": { "line": 49, "column": 9 } },
        "15": { "start": { "line": 48, "column": 8 }, "end": { "line": 48, "column": 46 } },
        "16": { "start": { "line": 51, "column": 6 }, "end": { "line": 58, "column": 9 } },
        "17": { "start": { "line": 52, "column": 23 }, "end": { "line": 52, "column": 101 } },
        "18": { "start": { "line": 54, "column": 23 }, "end": { "line": 54, "column": 101 } },
        "19": { "start": { "line": 56, "column": 8 }, "end": { "line": 56, "column": 66 } },
        "20": { "start": { "line": 57, "column": 8 }, "end": { "line": 57, "column": 29 } },
        "21": { "start": { "line": 60, "column": 6 }, "end": { "line": 62, "column": 9 } },
        "22": { "start": { "line": 61, "column": 8 }, "end": { "line": 61, "column": 20 } },
        "23": { "start": { "line": 67, "column": 4 }, "end": { "line": 72, "column": 7 } },
        "24": { "start": { "line": 68, "column": 6 }, "end": { "line": 70, "column": 7 } },
        "25": { "start": { "line": 69, "column": 8 }, "end": { "line": 69, "column": 21 } },
        "26": { "start": { "line": 71, "column": 6 }, "end": { "line": 71, "column": 20 } },
        "27": { "start": { "line": 16, "column": 0 }, "end": { "line": 16, "column": 13 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 23, "column": 2 }, "end": { "line": 23, "column": 14 } },
          "loc": { "start": { "line": 23, "column": 24 }, "end": { "line": 28, "column": 3 } }
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 30, "column": 2 }, "end": { "line": 30, "column": 8 } },
          "loc": { "start": { "line": 30, "column": 8 }, "end": { "line": 64, "column": 3 } }
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 31, "column": 23 }, "end": { "line": 31, "column": 24 } },
          "loc": { "start": { "line": 31, "column": 43 }, "end": { "line": 63, "column": 5 } }
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 38, "column": 25 }, "end": { "line": 38, "column": 29 } },
          "loc": { "start": { "line": 38, "column": 33 }, "end": { "line": 38, "column": 62 } }
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 42, "column": 29 }, "end": { "line": 42, "column": 32 } },
          "loc": { "start": { "line": 42, "column": 35 }, "end": { "line": 44, "column": 7 } }
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 47, "column": 29 }, "end": { "line": 47, "column": 32 } },
          "loc": { "start": { "line": 47, "column": 35 }, "end": { "line": 49, "column": 7 } }
        },
        "6": {
          "name": "(anonymous_6)",
          "decl": { "start": { "line": 51, "column": 23 }, "end": { "line": 51, "column": 31 } },
          "loc": { "start": { "line": 51, "column": 34 }, "end": { "line": 58, "column": 7 } }
        },
        "7": {
          "name": "(anonymous_7)",
          "decl": { "start": { "line": 60, "column": 23 }, "end": { "line": 60, "column": 26 } },
          "loc": { "start": { "line": 60, "column": 29 }, "end": { "line": 62, "column": 7 } }
        },
        "8": {
          "name": "(anonymous_8)",
          "decl": { "start": { "line": 66, "column": 2 }, "end": { "line": 66, "column": 5 } },
          "loc": { "start": { "line": 66, "column": 5 }, "end": { "line": 73, "column": 3 } }
        },
        "9": {
          "name": "(anonymous_9)",
          "decl": { "start": { "line": 67, "column": 30 }, "end": { "line": 67, "column": 36 } },
          "loc": { "start": { "line": 67, "column": 39 }, "end": { "line": 72, "column": 5 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 25, "column": 17 }, "end": { "line": 25, "column": 33 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 25, "column": 17 }, "end": { "line": 25, "column": 27 } },
            { "start": { "line": 25, "column": 31 }, "end": { "line": 25, "column": 33 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 26, "column": 15 }, "end": { "line": 26, "column": 40 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 26, "column": 15 }, "end": { "line": 26, "column": 23 } },
            { "start": { "line": 26, "column": 27 }, "end": { "line": 26, "column": 40 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 27, "column": 15 }, "end": { "line": 27, "column": 71 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 27, "column": 26 }, "end": { "line": 27, "column": 57 } },
            { "start": { "line": 27, "column": 60 }, "end": { "line": 27, "column": 71 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 52, "column": 23 }, "end": { "line": 52, "column": 101 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 52, "column": 56 }, "end": { "line": 52, "column": 58 } },
            { "start": { "line": 52, "column": 61 }, "end": { "line": 52, "column": 101 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 54, "column": 23 }, "end": { "line": 54, "column": 101 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 54, "column": 56 }, "end": { "line": 54, "column": 58 } },
            { "start": { "line": 54, "column": 61 }, "end": { "line": 54, "column": 101 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 56, "column": 50 }, "end": { "line": 56, "column": 63 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 56, "column": 50 }, "end": { "line": 56, "column": 58 } },
            { "start": { "line": 56, "column": 62 }, "end": { "line": 56, "column": 63 } }
          ]
        },
        "6": {
          "loc": { "start": { "line": 68, "column": 6 }, "end": { "line": 70, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 68, "column": 6 }, "end": { "line": 70, "column": 7 } }
          ]
        }
      },
      "s": {
        "0": 9,
        "1": 52,
        "2": 52,
        "3": 52,
        "4": 52,
        "5": 52,
        "6": 52,
        "7": 52,
        "8": 0,
        "9": 52,
        "10": 52,
        "11": 52,
        "12": 86,
        "13": 52,
        "14": 52,
        "15": 1492,
        "16": 52,
        "17": 52,
        "18": 52,
        "19": 52,
        "20": 52,
        "21": 52,
        "22": 0,
        "23": 28,
        "24": 28,
        "25": 1,
        "26": 27,
        "27": 9
      },
      "f": {
        "0": 52,
        "1": 52,
        "2": 52,
        "3": 0,
        "4": 86,
        "5": 1492,
        "6": 52,
        "7": 0,
        "8": 28,
        "9": 28
      },
      "b": {
        "0": [52, 52],
        "1": [52, 7],
        "2": [19, 33],
        "3": [6, 46],
        "4": [42, 10],
        "5": [52, 45],
        "6": [1]
      }
    },
    "/Users/sam/code/work/pepr/integration/helpers/resource.ts": {
      "path": "/Users/sam/code/work/pepr/integration/helpers/resource.ts",
      "statementMap": {
        "0": { "start": { "line": 12, "column": 0 }, "end": { "line": 12, "column": 7 } },
        "1": { "start": { "line": 45, "column": 0 }, "end": { "line": 45, "column": 16 } },
        "2": { "start": { "line": 1, "column": 0 }, "end": { "line": 1, "column": 44 } },
        "3": { "start": { "line": 2, "column": 0 }, "end": { "line": 2, "column": 66 } },
        "4": { "start": { "line": 3, "column": 0 }, "end": { "line": 3, "column": 41 } },
        "5": { "start": { "line": 13, "column": 20 }, "end": { "line": 13, "column": 42 } },
        "6": { "start": { "line": 16, "column": 18 }, "end": { "line": 16, "column": 60 } },
        "7": { "start": { "line": 18, "column": 2 }, "end": { "line": 31, "column": 3 } },
        "8": { "start": { "line": 20, "column": 21 }, "end": { "line": 20, "column": 40 } },
        "9": { "start": { "line": 21, "column": 6 }, "end": { "line": 21, "column": 57 } },
        "10": { "start": { "line": 22, "column": 6 }, "end": { "line": 22, "column": 12 } },
        "11": { "start": { "line": 25, "column": 24 }, "end": { "line": 25, "column": 85 } },
        "12": { "start": { "line": 25, "column": 62 }, "end": { "line": 25, "column": 84 } },
        "13": { "start": { "line": 26, "column": 6 }, "end": { "line": 26, "column": 65 } },
        "14": { "start": { "line": 27, "column": 6 }, "end": { "line": 27, "column": 12 } },
        "15": { "start": { "line": 30, "column": 6 }, "end": { "line": 30, "column": 63 } },
        "16": { "start": { "line": 34, "column": 2 }, "end": { "line": 34, "column": 75 } },
        "17": { "start": { "line": 50, "column": 15 }, "end": { "line": 53, "column": 10 } },
        "18": { "start": { "line": 51, "column": 17 }, "end": { "line": 51, "column": 32 } },
        "19": { "start": { "line": 54, "column": 2 }, "end": { "line": 57, "column": 30 } },
        "20": { "start": { "line": 55, "column": 17 }, "end": { "line": 55, "column": 32 } },
        "21": { "start": { "line": 56, "column": 17 }, "end": { "line": 56, "column": 43 } }
      },
      "fnMap": {
        "0": {
          "name": "fromFile",
          "decl": { "start": { "line": 12, "column": 22 }, "end": { "line": 12, "column": 30 } },
          "loc": { "start": { "line": 12, "column": 43 }, "end": { "line": 35, "column": 1 } }
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 25, "column": 55 }, "end": { "line": 25, "column": 58 } },
          "loc": { "start": { "line": 25, "column": 62 }, "end": { "line": 25, "column": 84 } }
        },
        "2": {
          "name": "select",
          "decl": { "start": { "line": 45, "column": 16 }, "end": { "line": 45, "column": 22 } },
          "loc": { "start": { "line": 48, "column": 14 }, "end": { "line": 58, "column": 1 } }
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 51, "column": 12 }, "end": { "line": 51, "column": 13 } },
          "loc": { "start": { "line": 51, "column": 17 }, "end": { "line": 51, "column": 32 } }
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 55, "column": 12 }, "end": { "line": 55, "column": 13 } },
          "loc": { "start": { "line": 55, "column": 17 }, "end": { "line": 55, "column": 32 } }
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 56, "column": 12 }, "end": { "line": 56, "column": 13 } },
          "loc": { "start": { "line": 56, "column": 17 }, "end": { "line": 56, "column": 43 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 18, "column": 2 }, "end": { "line": 31, "column": 3 } },
          "type": "switch",
          "locations": [
            { "start": { "line": 19, "column": 4 }, "end": { "line": 23, "column": 5 } },
            { "start": { "line": 24, "column": 4 }, "end": { "line": 28, "column": 5 } },
            { "start": { "line": 29, "column": 4 }, "end": { "line": 30, "column": 63 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 21, "column": 15 }, "end": { "line": 21, "column": 56 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 21, "column": 39 }, "end": { "line": 21, "column": 45 } },
            { "start": { "line": 21, "column": 48 }, "end": { "line": 21, "column": 56 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 26, "column": 15 }, "end": { "line": 26, "column": 64 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 26, "column": 40 }, "end": { "line": 26, "column": 52 } },
            { "start": { "line": 26, "column": 55 }, "end": { "line": 26, "column": 64 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 34, "column": 9 }, "end": { "line": 34, "column": 74 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 34, "column": 56 }, "end": { "line": 34, "column": 65 } },
            { "start": { "line": 34, "column": 68 }, "end": { "line": 34, "column": 74 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 34, "column": 9 }, "end": { "line": 34, "column": 53 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 34, "column": 9 }, "end": { "line": 34, "column": 30 } },
            { "start": { "line": 34, "column": 34 }, "end": { "line": 34, "column": 53 } }
          ]
        }
      },
      "s": {
        "0": 4,
        "1": 4,
        "2": 4,
        "3": 4,
        "4": 4,
        "5": 9,
        "6": 9,
        "7": 9,
        "8": 3,
        "9": 3,
        "10": 3,
        "11": 6,
        "12": 23,
        "13": 6,
        "14": 6,
        "15": 0,
        "16": 9,
        "17": 4,
        "18": 192,
        "19": 4,
        "20": 34,
        "21": 6
      },
      "f": { "0": 9, "1": 23, "2": 4, "3": 192, "4": 34, "5": 6 },
      "b": { "0": [3, 6, 0], "1": [1, 2], "2": [3, 3], "3": [2, 7], "4": [9, 6] }
    },
    "/Users/sam/code/work/pepr/src/cli/init/walkthrough.ts": {
      "path": "/Users/sam/code/work/pepr/src/cli/init/walkthrough.ts",
      "statementMap": {
        "0": { "start": { "line": 20, "column": 0 }, "end": { "line": 20, "column": 7 } },
        "1": { "start": { "line": 29, "column": 0 }, "end": { "line": 29, "column": 7 } },
        "2": { "start": { "line": 74, "column": 0 }, "end": { "line": 74, "column": 7 } },
        "3": { "start": { "line": 112, "column": 0 }, "end": { "line": 112, "column": 7 } },
        "4": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 36 } },
        "5": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 56 } },
        "6": { "start": { "line": 7, "column": 0 }, "end": { "line": 7, "column": 76 } },
        "7": { "start": { "line": 8, "column": 0 }, "end": { "line": 8, "column": 39 } },
        "8": { "start": { "line": 9, "column": 0 }, "end": { "line": 9, "column": 34 } },
        "9": { "start": { "line": 10, "column": 0 }, "end": { "line": 10, "column": 45 } },
        "10": { "start": { "line": 21, "column": 17 }, "end": { "line": 25, "column": 4 } },
        "11": { "start": { "line": 26, "column": 2 }, "end": { "line": 26, "column": 33 } },
        "12": { "start": { "line": 30, "column": 32 }, "end": { "line": 45, "column": 4 } },
        "13": { "start": { "line": 36, "column": 6 }, "end": { "line": 43, "column": 7 } },
        "14": { "start": { "line": 37, "column": 21 }, "end": { "line": 37, "column": 38 } },
        "15": { "start": { "line": 38, "column": 8 }, "end": { "line": 38, "column": 49 } },
        "16": { "start": { "line": 40, "column": 8 }, "end": { "line": 40, "column": 59 } },
        "17": { "start": { "line": 42, "column": 8 }, "end": { "line": 42, "column": 79 } },
        "18": { "start": { "line": 47, "column": 2 }, "end": { "line": 55, "column": 3 } },
        "19": { "start": { "line": 48, "column": 4 }, "end": { "line": 54, "column": 5 } },
        "20": { "start": { "line": 49, "column": 6 }, "end": { "line": 49, "column": 90 } },
        "21": { "start": { "line": 50, "column": 23 }, "end": { "line": 50, "column": 40 } },
        "22": { "start": { "line": 51, "column": 6 }, "end": { "line": 51, "column": 22 } },
        "23": { "start": { "line": 53, "column": 6 }, "end": { "line": 53, "column": 22 } },
        "24": { "start": { "line": 57, "column": 2 }, "end": { "line": 57, "column": 27 } },
        "25": { "start": { "line": 61, "column": 39 }, "end": { "line": 65, "column": 4 } },
        "26": { "start": { "line": 67, "column": 2 }, "end": { "line": 69, "column": 3 } },
        "27": { "start": { "line": 68, "column": 4 }, "end": { "line": 68, "column": 27 } },
        "28": { "start": { "line": 71, "column": 2 }, "end": { "line": 71, "column": 34 } },
        "29": { "start": { "line": 75, "column": 41 }, "end": { "line": 100, "column": 4 } },
        "30": { "start": { "line": 102, "column": 2 }, "end": { "line": 107, "column": 3 } },
        "31": { "start": { "line": 103, "column": 4 }, "end": { "line": 105, "column": 5 } },
        "32": { "start": { "line": 104, "column": 6 }, "end": { "line": 104, "column": 40 } },
        "33": { "start": { "line": 106, "column": 4 }, "end": { "line": 106, "column": 29 } },
        "34": { "start": { "line": 109, "column": 2 }, "end": { "line": 109, "column": 36 } },
        "35": { "start": { "line": 118, "column": 43 }, "end": { "line": 122, "column": 4 } },
        "36": { "start": { "line": 123, "column": 30 }, "end": { "line": 137, "column": 4 } },
        "37": { "start": { "line": 139, "column": 2 }, "end": { "line": 149, "column": 3 } },
        "38": { "start": { "line": 140, "column": 4 }, "end": { "line": 140, "column": 22 } },
        "39": { "start": { "line": 142, "column": 4 }, "end": { "line": 142, "column": 37 } },
        "40": { "start": { "line": 143, "column": 20 }, "end": { "line": 143, "column": 54 } },
        "41": { "start": { "line": 145, "column": 6 }, "end": { "line": 147, "column": 15 } },
        "42": { "start": { "line": 148, "column": 4 }, "end": { "line": 148, "column": 30 } }
      },
      "fnMap": {
        "0": {
          "name": "walkthrough",
          "decl": { "start": { "line": 20, "column": 22 }, "end": { "line": 20, "column": 33 } },
          "loc": { "start": { "line": 20, "column": 61 }, "end": { "line": 27, "column": 1 } }
        },
        "1": {
          "name": "setName",
          "decl": { "start": { "line": 29, "column": 22 }, "end": { "line": 29, "column": 29 } },
          "loc": { "start": { "line": 29, "column": 43 }, "end": { "line": 58, "column": 1 } }
        },
        "2": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 35, "column": 14 }, "end": { "line": 35, "column": 19 } },
          "loc": { "start": { "line": 35, "column": 36 }, "end": { "line": 44, "column": 5 } }
        },
        "3": {
          "name": "setDescription",
          "decl": { "start": { "line": 60, "column": 15 }, "end": { "line": 60, "column": 29 } },
          "loc": { "start": { "line": 60, "column": 50 }, "end": { "line": 72, "column": 1 } }
        },
        "4": {
          "name": "setErrorBehavior",
          "decl": { "start": { "line": 74, "column": 22 }, "end": { "line": 74, "column": 38 } },
          "loc": { "start": { "line": 74, "column": 62 }, "end": { "line": 110, "column": 1 } }
        },
        "5": {
          "name": "confirm",
          "decl": { "start": { "line": 112, "column": 22 }, "end": { "line": 112, "column": 29 } },
          "loc": { "start": { "line": 116, "column": 22 }, "end": { "line": 150, "column": 1 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 42, "column": 15 }, "end": { "line": 42, "column": 78 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 42, "column": 15 }, "end": { "line": 42, "column": 29 } },
            { "start": { "line": 42, "column": 33 }, "end": { "line": 42, "column": 78 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 47, "column": 2 }, "end": { "line": 55, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 47, "column": 2 }, "end": { "line": 55, "column": 3 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 48, "column": 4 }, "end": { "line": 54, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 48, "column": 4 }, "end": { "line": 54, "column": 5 } },
            { "start": { "line": 52, "column": 11 }, "end": { "line": 54, "column": 5 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 67, "column": 2 }, "end": { "line": 69, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 67, "column": 2 }, "end": { "line": 69, "column": 3 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 102, "column": 2 }, "end": { "line": 107, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 102, "column": 2 }, "end": { "line": 107, "column": 3 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 103, "column": 4 }, "end": { "line": 105, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 103, "column": 4 }, "end": { "line": 105, "column": 5 } }
          ]
        },
        "6": {
          "loc": { "start": { "line": 139, "column": 2 }, "end": { "line": 149, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 139, "column": 2 }, "end": { "line": 149, "column": 3 } },
            { "start": { "line": 141, "column": 9 }, "end": { "line": 149, "column": 3 } }
          ]
        },
        "7": {
          "loc": { "start": { "line": 145, "column": 6 }, "end": { "line": 147, "column": 15 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 146, "column": 10 }, "end": { "line": 146, "column": 14 } },
            { "start": { "line": 147, "column": 10 }, "end": { "line": 147, "column": 15 } }
          ]
        },
        "8": {
          "loc": { "start": { "line": 145, "column": 6 }, "end": { "line": 145, "column": 86 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 145, "column": 6 }, "end": { "line": 145, "column": 29 } },
            { "start": { "line": 145, "column": 33 }, "end": { "line": 145, "column": 58 } },
            { "start": { "line": 145, "column": 62 }, "end": { "line": 145, "column": 86 } }
          ]
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 8,
        "11": 8,
        "12": 9,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 9,
        "19": 5,
        "20": 1,
        "21": 1,
        "22": 1,
        "23": 4,
        "24": 4,
        "25": 8,
        "26": 8,
        "27": 4,
        "28": 4,
        "29": 9,
        "30": 9,
        "31": 5,
        "32": 1,
        "33": 4,
        "34": 4,
        "35": 6,
        "36": 6,
        "37": 6,
        "38": 2,
        "39": 4,
        "40": 4,
        "41": 4,
        "42": 4
      },
      "f": { "0": 8, "1": 9, "2": 0, "3": 8, "4": 9, "5": 6 },
      "b": {
        "0": [0, 0],
        "1": [5],
        "2": [1, 4],
        "3": [4],
        "4": [5],
        "5": [1],
        "6": [2, 4],
        "7": [2, 2],
        "8": [4, 3, 2]
      }
    },
    "/Users/sam/code/work/pepr/src/cli/init/templates.ts": {
      "path": "/Users/sam/code/work/pepr/src/cli/init/templates.ts",
      "statementMap": {
        "0": { "start": { "line": 48, "column": 0 }, "end": { "line": 48, "column": 16 } },
        "1": { "start": { "line": 103, "column": 0 }, "end": { "line": 103, "column": 16 } },
        "2": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 51 } },
        "3": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 31 } },
        "4": { "start": { "line": 6, "column": 0 }, "end": { "line": 6, "column": 50 } },
        "5": { "start": { "line": 8, "column": 0 }, "end": { "line": 8, "column": 65 } },
        "6": { "start": { "line": 9, "column": 0 }, "end": { "line": 9, "column": 60 } },
        "7": { "start": { "line": 10, "column": 0 }, "end": { "line": 10, "column": 79 } },
        "8": { "start": { "line": 11, "column": 0 }, "end": { "line": 11, "column": 98 } },
        "9": { "start": { "line": 12, "column": 0 }, "end": { "line": 12, "column": 71 } },
        "10": { "start": { "line": 13, "column": 0 }, "end": { "line": 13, "column": 57 } },
        "11": { "start": { "line": 14, "column": 0 }, "end": { "line": 14, "column": 64 } },
        "12": { "start": { "line": 15, "column": 0 }, "end": { "line": 15, "column": 39 } },
        "13": { "start": { "line": 20, "column": 15 }, "end": { "line": 20, "column": 97 } },
        "14": { "start": { "line": 50, "column": 15 }, "end": { "line": 50, "column": 42 } },
        "15": { "start": { "line": 52, "column": 15 }, "end": { "line": 52, "column": 38 } },
        "16": { "start": { "line": 54, "column": 25 }, "end": { "line": 54, "column": 41 } },
        "17": { "start": { "line": 56, "column": 18 }, "end": { "line": 59, "column": 4 } },
        "18": { "start": { "line": 61, "column": 15 }, "end": { "line": 94, "column": 4 } },
        "19": { "start": { "line": 96, "column": 2 }, "end": { "line": 100, "column": 4 } },
        "20": { "start": { "line": 104, "column": 2 }, "end": { "line": 107, "column": 4 } },
        "21": { "start": { "line": 110, "column": 13 }, "end": { "line": 113, "column": 2 } },
        "22": { "start": { "line": 115, "column": 13 }, "end": { "line": 118, "column": 2 } },
        "23": { "start": { "line": 120, "column": 13 }, "end": { "line": 123, "column": 2 } },
        "24": { "start": { "line": 125, "column": 13 }, "end": { "line": 128, "column": 2 } },
        "25": { "start": { "line": 127, "column": 29 }, "end": { "line": 127, "column": 58 } },
        "26": { "start": { "line": 130, "column": 13 }, "end": { "line": 133, "column": 2 } },
        "27": { "start": { "line": 135, "column": 13 }, "end": { "line": 138, "column": 2 } },
        "28": { "start": { "line": 140, "column": 13 }, "end": { "line": 143, "column": 2 } },
        "29": { "start": { "line": 145, "column": 13 }, "end": { "line": 148, "column": 2 } },
        "30": { "start": { "line": 150, "column": 13 }, "end": { "line": 153, "column": 2 } }
      },
      "fnMap": {
        "0": {
          "name": "genPkgJSON",
          "decl": { "start": { "line": 48, "column": 16 }, "end": { "line": 48, "column": 26 } },
          "loc": { "start": { "line": 48, "column": 69 }, "end": { "line": 101, "column": 1 } }
        },
        "1": {
          "name": "genPeprTS",
          "decl": { "start": { "line": 103, "column": 16 }, "end": { "line": 103, "column": 25 } },
          "loc": { "start": { "line": 103, "column": 25 }, "end": { "line": 108, "column": 1 } }
        },
        "2": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 127, "column": 24 }, "end": { "line": 127, "column": 25 } },
          "loc": { "start": { "line": 127, "column": 29 }, "end": { "line": 127, "column": 58 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 70, "column": 12 }, "end": { "line": 70, "column": 49 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 70, "column": 29 }, "end": { "line": 70, "column": 42 } },
            { "start": { "line": 70, "column": 45 }, "end": { "line": 70, "column": 49 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 82, "column": 11 }, "end": { "line": 82, "column": 40 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 82, "column": 28 }, "end": { "line": 82, "column": 35 } },
            { "start": { "line": 82, "column": 38 }, "end": { "line": 82, "column": 40 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 88, "column": 12 }, "end": { "line": 88, "column": 37 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 88, "column": 12 }, "end": { "line": 88, "column": 26 } },
            { "start": { "line": 88, "column": 30 }, "end": { "line": 88, "column": 37 } }
          ]
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 1,
        "12": 1,
        "13": 1,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 1,
        "22": 1,
        "23": 1,
        "24": 1,
        "25": 11,
        "26": 1,
        "27": 1,
        "28": 1,
        "29": 1,
        "30": 1
      },
      "f": { "0": 0, "1": 0, "2": 11 },
      "b": { "0": [0, 0], "1": [0, 0], "2": [0, 0] }
    },
    "/Users/sam/code/work/pepr/src/cli/init/utils.ts": {
      "path": "/Users/sam/code/work/pepr/src/cli/init/utils.ts",
      "statementMap": {
        "0": { "start": { "line": 12, "column": 0 }, "end": { "line": 12, "column": 16 } },
        "1": { "start": { "line": 35, "column": 0 }, "end": { "line": 35, "column": 7 } },
        "2": { "start": { "line": 54, "column": 0 }, "end": { "line": 54, "column": 16 } },
        "3": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 36 } },
        "4": { "start": { "line": 13, "column": 2 }, "end": { "line": 17, "column": 3 } },
        "5": { "start": { "line": 14, "column": 4 }, "end": { "line": 16, "column": 6 } },
        "6": { "start": { "line": 19, "column": 18 }, "end": { "line": 19, "column": 66 } },
        "7": { "start": { "line": 22, "column": 2 }, "end": { "line": 22, "column": 48 } },
        "8": { "start": { "line": 25, "column": 2 }, "end": { "line": 25, "column": 45 } },
        "9": { "start": { "line": 27, "column": 2 }, "end": { "line": 27, "column": 19 } },
        "10": { "start": { "line": 36, "column": 2 }, "end": { "line": 45, "column": 3 } },
        "11": { "start": { "line": 37, "column": 4 }, "end": { "line": 37, "column": 24 } },
        "12": { "start": { "line": 40, "column": 4 }, "end": { "line": 44, "column": 5 } },
        "13": { "start": { "line": 41, "column": 6 }, "end": { "line": 41, "column": 57 } },
        "14": { "start": { "line": 43, "column": 6 }, "end": { "line": 43, "column": 16 } },
        "15": { "start": { "line": 56, "column": 2 }, "end": { "line": 58, "column": 3 } },
        "16": { "start": { "line": 57, "column": 4 }, "end": { "line": 57, "column": 41 } },
        "17": { "start": { "line": 59, "column": 2 }, "end": { "line": 59, "column": 44 } }
      },
      "fnMap": {
        "0": {
          "name": "sanitizeName",
          "decl": { "start": { "line": 12, "column": 16 }, "end": { "line": 12, "column": 28 } },
          "loc": { "start": { "line": 12, "column": 41 }, "end": { "line": 28, "column": 1 } }
        },
        "1": {
          "name": "createDir",
          "decl": { "start": { "line": 35, "column": 22 }, "end": { "line": 35, "column": 31 } },
          "loc": { "start": { "line": 35, "column": 43 }, "end": { "line": 46, "column": 1 } }
        },
        "2": {
          "name": "write",
          "decl": { "start": { "line": 54, "column": 16 }, "end": { "line": 54, "column": 21 } },
          "loc": { "start": { "line": 54, "column": 49 }, "end": { "line": 60, "column": 1 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 13, "column": 2 }, "end": { "line": 17, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 13, "column": 2 }, "end": { "line": 17, "column": 3 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 40, "column": 4 }, "end": { "line": 44, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 40, "column": 4 }, "end": { "line": 44, "column": 5 } },
            { "start": { "line": 42, "column": 11 }, "end": { "line": 44, "column": 5 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 40, "column": 8 }, "end": { "line": 40, "column": 63 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 40, "column": 8 }, "end": { "line": 40, "column": 11 } },
            { "start": { "line": 40, "column": 16 }, "end": { "line": 40, "column": 63 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 56, "column": 2 }, "end": { "line": 58, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 56, "column": 2 }, "end": { "line": 58, "column": 3 } }
          ]
        }
      },
      "s": {
        "0": 2,
        "1": 2,
        "2": 2,
        "3": 2,
        "4": 4,
        "5": 1,
        "6": 3,
        "7": 3,
        "8": 3,
        "9": 3,
        "10": 3,
        "11": 3,
        "12": 2,
        "13": 1,
        "14": 1,
        "15": 2,
        "16": 1,
        "17": 2
      },
      "f": { "0": 4, "1": 3, "2": 2 },
      "b": { "0": [1], "1": [1, 1], "2": [2, 2], "3": [1] }
    },
    "/Users/sam/code/work/pepr/src/lib/tls.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/tls.ts",
      "statementMap": {
        "0": { "start": { "line": 22, "column": 0 }, "end": { "line": 22, "column": 16 } },
        "1": { "start": { "line": 1, "column": 0 }, "end": { "line": 1, "column": 31 } },
        "2": { "start": { "line": 3, "column": 15 }, "end": { "line": 3, "column": 34 } },
        "3": { "start": { "line": 24, "column": 17 }, "end": { "line": 24, "column": 52 } },
        "4": { "start": { "line": 25, "column": 17 }, "end": { "line": 25, "column": 81 } },
        "5": { "start": { "line": 27, "column": 2 }, "end": { "line": 40, "column": 5 } },
        "6": { "start": { "line": 43, "column": 21 }, "end": { "line": 43, "column": 56 } },
        "7": { "start": { "line": 44, "column": 21 }, "end": { "line": 44, "column": 73 } },
        "8": { "start": { "line": 47, "column": 2 }, "end": { "line": 47, "column": 59 } },
        "9": { "start": { "line": 48, "column": 2 }, "end": { "line": 48, "column": 63 } },
        "10": { "start": { "line": 51, "column": 14 }, "end": { "line": 55, "column": 4 } },
        "11": { "start": { "line": 58, "column": 13 }, "end": { "line": 58, "column": 51 } },
        "12": { "start": { "line": 59, "column": 14 }, "end": { "line": 59, "column": 53 } },
        "13": { "start": { "line": 60, "column": 14 }, "end": { "line": 60, "column": 53 } },
        "14": { "start": { "line": 62, "column": 2 }, "end": { "line": 62, "column": 31 } },
        "15": { "start": { "line": 70, "column": 14 }, "end": { "line": 70, "column": 43 } },
        "16": { "start": { "line": 71, "column": 2 }, "end": { "line": 71, "column": 32 } },
        "17": { "start": { "line": 72, "column": 2 }, "end": { "line": 72, "column": 26 } },
        "18": { "start": { "line": 73, "column": 2 }, "end": { "line": 73, "column": 38 } },
        "19": { "start": { "line": 74, "column": 2 }, "end": { "line": 74, "column": 37 } },
        "20": { "start": { "line": 75, "column": 2 }, "end": { "line": 75, "column": 78 } },
        "21": { "start": { "line": 78, "column": 2 }, "end": { "line": 88, "column": 5 } },
        "22": { "start": { "line": 91, "column": 2 }, "end": { "line": 91, "column": 24 } },
        "23": { "start": { "line": 93, "column": 2 }, "end": { "line": 93, "column": 13 } }
      },
      "fnMap": {
        "0": {
          "name": "genTLS",
          "decl": { "start": { "line": 22, "column": 16 }, "end": { "line": 22, "column": 22 } },
          "loc": { "start": { "line": 22, "column": 35 }, "end": { "line": 63, "column": 1 } }
        },
        "1": {
          "name": "genCert",
          "decl": { "start": { "line": 65, "column": 9 }, "end": { "line": 65, "column": 16 } },
          "loc": { "start": { "line": 68, "column": 38 }, "end": { "line": 94, "column": 1 } }
        }
      },
      "branchMap": {},
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 1,
        "12": 1,
        "13": 1,
        "14": 1,
        "15": 2,
        "16": 2,
        "17": 2,
        "18": 2,
        "19": 2,
        "20": 2,
        "21": 2,
        "22": 2,
        "23": 2
      },
      "f": { "0": 1, "1": 2 },
      "b": {}
    },
    "/Users/sam/code/work/pepr/src/lib/helpers.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/helpers.ts",
      "statementMap": {
        "0": { "start": { "line": 8, "column": 0 }, "end": { "line": 8, "column": 16 } },
        "1": { "start": { "line": 14, "column": 0 }, "end": { "line": 14, "column": 16 } },
        "2": { "start": { "line": 24, "column": 0 }, "end": { "line": 24, "column": 16 } },
        "3": { "start": { "line": 40, "column": 0 }, "end": { "line": 40, "column": 16 } },
        "4": { "start": { "line": 75, "column": 0 }, "end": { "line": 75, "column": 16 } },
        "5": { "start": { "line": 83, "column": 0 }, "end": { "line": 83, "column": 16 } },
        "6": { "start": { "line": 91, "column": 0 }, "end": { "line": 91, "column": 16 } },
        "7": { "start": { "line": 95, "column": 0 }, "end": { "line": 95, "column": 16 } },
        "8": { "start": { "line": 102, "column": 0 }, "end": { "line": 102, "column": 16 } },
        "9": { "start": { "line": 128, "column": 0 }, "end": { "line": 128, "column": 16 } },
        "10": { "start": { "line": 185, "column": 0 }, "end": { "line": 185, "column": 16 } },
        "11": { "start": { "line": 207, "column": 0 }, "end": { "line": 207, "column": 16 } },
        "12": { "start": { "line": 224, "column": 0 }, "end": { "line": 224, "column": 16 } },
        "13": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 37 } },
        "14": { "start": { "line": 6, "column": 0 }, "end": { "line": 6, "column": 50 } },
        "15": { "start": { "line": 9, "column": 2 }, "end": { "line": 9, "column": 46 } },
        "16": { "start": { "line": 12, "column": 0 }, "end": { "line": 12, "column": 13 } },
        "17": { "start": { "line": 15, "column": 2 }, "end": { "line": 21, "column": 3 } },
        "18": { "start": { "line": 16, "column": 4 }, "end": { "line": 20, "column": 5 } },
        "19": { "start": { "line": 16, "column": 17 }, "end": { "line": 16, "column": 18 } },
        "20": { "start": { "line": 17, "column": 6 }, "end": { "line": 19, "column": 7 } },
        "21": { "start": { "line": 18, "column": 8 }, "end": { "line": 18, "column": 118 } },
        "22": { "start": { "line": 26, "column": 22 }, "end": { "line": 26, "column": 39 } },
        "23": { "start": { "line": 27, "column": 2 }, "end": { "line": 30, "column": 3 } },
        "24": { "start": { "line": 28, "column": 4 }, "end": { "line": 28, "column": 82 } },
        "25": { "start": { "line": 29, "column": 4 }, "end": { "line": 29, "column": 46 } },
        "26": { "start": { "line": 41, "column": 2 }, "end": { "line": 72, "column": 9 } },
        "27": { "start": { "line": 42, "column": 4 }, "end": { "line": 69, "column": 7 } },
        "28": { "start": { "line": 43, "column": 18 }, "end": { "line": 43, "column": 86 } },
        "29": { "start": { "line": 45, "column": 6 }, "end": { "line": 48, "column": 8 } },
        "30": { "start": { "line": 50, "column": 6 }, "end": { "line": 53, "column": 8 } },
        "31": { "start": { "line": 55, "column": 6 }, "end": { "line": 60, "column": 7 } },
        "32": { "start": { "line": 56, "column": 8 }, "end": { "line": 59, "column": 10 } },
        "33": { "start": { "line": 63, "column": 6 }, "end": { "line": 68, "column": 7 } },
        "34": { "start": { "line": 64, "column": 8 }, "end": { "line": 67, "column": 10 } },
        "35": { "start": { "line": 71, "column": 4 }, "end": { "line": 71, "column": 15 } },
        "36": { "start": { "line": 76, "column": 2 }, "end": { "line": 78, "column": 3 } },
        "37": { "start": { "line": 77, "column": 4 }, "end": { "line": 77, "column": 17 } },
        "38": { "start": { "line": 80, "column": 2 }, "end": { "line": 80, "column": 59 } },
        "39": { "start": { "line": 80, "column": 33 }, "end": { "line": 80, "column": 57 } },
        "40": { "start": { "line": 84, "column": 2 }, "end": { "line": 86, "column": 3 } },
        "41": { "start": { "line": 85, "column": 4 }, "end": { "line": 85, "column": 17 } },
        "42": { "start": { "line": 88, "column": 2 }, "end": { "line": 88, "column": 58 } },
        "43": { "start": { "line": 88, "column": 32 }, "end": { "line": 88, "column": 56 } },
        "44": { "start": { "line": 92, "column": 2 }, "end": { "line": 92, "column": 60 } },
        "45": { "start": { "line": 96, "column": 2 }, "end": { "line": 98, "column": 3 } },
        "46": { "start": { "line": 97, "column": 4 }, "end": { "line": 97, "column": 17 } },
        "47": { "start": { "line": 99, "column": 2 }, "end": { "line": 99, "column": 104 } },
        "48": { "start": { "line": 107, "column": 12 }, "end": { "line": 107, "column": 14 } },
        "49": { "start": { "line": 110, "column": 2 }, "end": { "line": 114, "column": 3 } },
        "50": { "start": { "line": 111, "column": 4 }, "end": { "line": 113, "column": 63 } },
        "51": { "start": { "line": 117, "column": 2 }, "end": { "line": 121, "column": 3 } },
        "52": { "start": { "line": 118, "column": 4 }, "end": { "line": 120, "column": 69 } },
        "53": { "start": { "line": 124, "column": 2 }, "end": { "line": 124, "column": 42 } },
        "54": { "start": { "line": 129, "column": 63 }, "end": { "line": 129, "column": 73 } },
        "55": { "start": { "line": 130, "column": 38 }, "end": { "line": 130, "column": 104 } },
        "56": { "start": { "line": 130, "column": 77 }, "end": { "line": 130, "column": 103 } },
        "57": { "start": { "line": 131, "column": 43 }, "end": { "line": 132, "column": null } },
        "58": { "start": { "line": 132, "column": 26 }, "end": { "line": 132, "column": 63 } },
        "59": { "start": { "line": 135, "column": 25 }, "end": { "line": 138, "column": null } },
        "60": { "start": { "line": 140, "column": 2 }, "end": { "line": 144, "column": 3 } },
        "61": { "start": { "line": 141, "column": 4 }, "end": { "line": 143, "column": 6 } },
        "62": { "start": { "line": 147, "column": 2 }, "end": { "line": 147, "column": 82 } },
        "63": { "start": { "line": 149, "column": 2 }, "end": { "line": 149, "column": 66 } },
        "64": { "start": { "line": 152, "column": 42 }, "end": { "line": 169, "column": 1 } },
        "65": { "start": { "line": 156, "column": 2 }, "end": { "line": 168, "column": 3 } },
        "66": { "start": { "line": 157, "column": 4 }, "end": { "line": 167, "column": 5 } },
        "67": { "start": { "line": 158, "column": 20 }, "end": { "line": 158, "column": 25 } },
        "68": { "start": { "line": 159, "column": 6 }, "end": { "line": 161, "column": 108 } },
        "69": { "start": { "line": 161, "column": 57 }, "end": { "line": 161, "column": 106 } },
        "70": { "start": { "line": 162, "column": 6 }, "end": { "line": 166, "column": 7 } },
        "71": { "start": { "line": 163, "column": 8 }, "end": { "line": 165, "column": 10 } },
        "72": { "start": { "line": 171, "column": 29 }, "end": { "line": 182, "column": 1 } },
        "73": { "start": { "line": 172, "column": 2 }, "end": { "line": 181, "column": 3 } },
        "74": { "start": { "line": 173, "column": 4 }, "end": { "line": 180, "column": 5 } },
        "75": { "start": { "line": 174, "column": 24 }, "end": { "line": 174, "column": 100 } },
        "76": { "start": { "line": 174, "column": 60 }, "end": { "line": 174, "column": 99 } },
        "77": { "start": { "line": 175, "column": 6 }, "end": { "line": 179, "column": 7 } },
        "78": { "start": { "line": 176, "column": 8 }, "end": { "line": 178, "column": 10 } },
        "79": { "start": { "line": 186, "column": 18 }, "end": { "line": 186, "column": 35 } },
        "80": { "start": { "line": 187, "column": 18 }, "end": { "line": 187, "column": 37 } },
        "81": { "start": { "line": 188, "column": 22 }, "end": { "line": 188, "column": 36 } },
        "82": { "start": { "line": 189, "column": 24 }, "end": { "line": 189, "column": 31 } },
        "83": { "start": { "line": 190, "column": 2 }, "end": { "line": 190, "column": 37 } },
        "84": { "start": { "line": 193, "column": 28 }, "end": { "line": 204, "column": 1 } },
        "85": { "start": { "line": 194, "column": 22 }, "end": { "line": 194, "column": 41 } },
        "86": { "start": { "line": 195, "column": 21 }, "end": { "line": 195, "column": 38 } },
        "87": { "start": { "line": 196, "column": 2 }, "end": { "line": 202, "column": 3 } },
        "88": { "start": { "line": 197, "column": 4 }, "end": { "line": 197, "column": 37 } },
        "89": { "start": { "line": 198, "column": 9 }, "end": { "line": 202, "column": 3 } },
        "90": { "start": { "line": 199, "column": 4 }, "end": { "line": 199, "column": 49 } },
        "91": { "start": { "line": 200, "column": 9 }, "end": { "line": 202, "column": 3 } },
        "92": { "start": { "line": 201, "column": 4 }, "end": { "line": 201, "column": 56 } },
        "93": { "start": { "line": 203, "column": 2 }, "end": { "line": 203, "column": 21 } },
        "94": { "start": { "line": 193, "column": 13 }, "end": { "line": 193, "column": 28 } },
        "95": { "start": { "line": 209, "column": 16 }, "end": { "line": 209, "column": 32 } },
        "96": { "start": { "line": 210, "column": 2 }, "end": { "line": 213, "column": 3 } },
        "97": { "start": { "line": 211, "column": 4 }, "end": { "line": 211, "column": 18 } },
        "98": { "start": { "line": 212, "column": 4 }, "end": { "line": 212, "column": 28 } },
        "99": { "start": { "line": 215, "column": 16 }, "end": { "line": 215, "column": 45 } },
        "100": { "start": { "line": 216, "column": 17 }, "end": { "line": 216, "column": 65 } },
        "101": { "start": { "line": 216, "column": 54 }, "end": { "line": 216, "column": 63 } },
        "102": { "start": { "line": 217, "column": 2 }, "end": { "line": 220, "column": 3 } },
        "103": { "start": { "line": 218, "column": 15 }, "end": { "line": 218, "column": 53 } },
        "104": { "start": { "line": 219, "column": 4 }, "end": { "line": 219, "column": 32 } },
        "105": { "start": { "line": 221, "column": 2 }, "end": { "line": 221, "column": 14 } },
        "106": { "start": { "line": 226, "column": 25 }, "end": { "line": 226, "column": 74 } },
        "107": { "start": { "line": 227, "column": 17 }, "end": { "line": 227, "column": 48 } },
        "108": { "start": { "line": 228, "column": 2 }, "end": { "line": 228, "column": 38 } }
      },
      "fnMap": {
        "0": {
          "name": "matchesRegex",
          "decl": { "start": { "line": 8, "column": 16 }, "end": { "line": 8, "column": 28 } },
          "loc": { "start": { "line": 8, "column": 64 }, "end": { "line": 10, "column": 1 } }
        },
        "1": {
          "name": "validateCapabilityNames",
          "decl": { "start": { "line": 14, "column": 16 }, "end": { "line": 14, "column": 39 } },
          "loc": { "start": { "line": 14, "column": 84 }, "end": { "line": 22, "column": 1 } }
        },
        "2": {
          "name": "validateHash",
          "decl": { "start": { "line": 24, "column": 16 }, "end": { "line": 24, "column": 28 } },
          "loc": { "start": { "line": 24, "column": 49 }, "end": { "line": 31, "column": 1 } }
        },
        "3": {
          "name": "createRBACMap",
          "decl": { "start": { "line": 40, "column": 16 }, "end": { "line": 40, "column": 29 } },
          "loc": { "start": { "line": 40, "column": 62 }, "end": { "line": 73, "column": 1 } }
        },
        "4": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 41, "column": 29 }, "end": { "line": 41, "column": 30 } },
          "loc": { "start": { "line": 41, "column": 76 }, "end": { "line": 72, "column": 3 } }
        },
        "5": {
          "name": "(anonymous_6)",
          "decl": { "start": { "line": 42, "column": 32 }, "end": { "line": 42, "column": 39 } },
          "loc": { "start": { "line": 42, "column": 42 }, "end": { "line": 69, "column": 5 } }
        },
        "6": {
          "name": "hasEveryOverlap",
          "decl": { "start": { "line": 75, "column": 16 }, "end": { "line": 75, "column": 31 } },
          "loc": { "start": { "line": 75, "column": 59 }, "end": { "line": 81, "column": 1 } }
        },
        "7": {
          "name": "(anonymous_8)",
          "decl": { "start": { "line": 80, "column": 22 }, "end": { "line": 80, "column": 29 } },
          "loc": { "start": { "line": 80, "column": 33 }, "end": { "line": 80, "column": 57 } }
        },
        "8": {
          "name": "hasAnyOverlap",
          "decl": { "start": { "line": 83, "column": 16 }, "end": { "line": 83, "column": 29 } },
          "loc": { "start": { "line": 83, "column": 57 }, "end": { "line": 89, "column": 1 } }
        },
        "9": {
          "name": "(anonymous_10)",
          "decl": { "start": { "line": 88, "column": 21 }, "end": { "line": 88, "column": 28 } },
          "loc": { "start": { "line": 88, "column": 32 }, "end": { "line": 88, "column": 56 } }
        },
        "10": {
          "name": "ignoredNamespaceConflict",
          "decl": { "start": { "line": 91, "column": 16 }, "end": { "line": 91, "column": 40 } },
          "loc": { "start": { "line": 91, "column": 96 }, "end": { "line": 93, "column": 1 } }
        },
        "11": {
          "name": "bindingAndCapabilityNSConflict",
          "decl": { "start": { "line": 95, "column": 16 }, "end": { "line": 95, "column": 46 } },
          "loc": { "start": { "line": 95, "column": 106 }, "end": { "line": 100, "column": 1 } }
        },
        "12": {
          "name": "generateWatchNamespaceError",
          "decl": { "start": { "line": 102, "column": 16 }, "end": { "line": 102, "column": 43 } },
          "loc": { "start": { "line": 105, "column": 32 }, "end": { "line": 125, "column": 1 } }
        },
        "13": {
          "name": "namespaceComplianceValidator",
          "decl": { "start": { "line": 128, "column": 16 }, "end": { "line": 128, "column": 44 } },
          "loc": { "start": { "line": 128, "column": 103 }, "end": { "line": 150, "column": 1 } }
        },
        "14": {
          "name": "(anonymous_15)",
          "decl": { "start": { "line": 130, "column": 55 }, "end": { "line": 130, "column": 56 } },
          "loc": { "start": { "line": 130, "column": 77 }, "end": { "line": 130, "column": 103 } }
        },
        "15": {
          "name": "(anonymous_16)",
          "decl": { "start": { "line": 132, "column": 4 }, "end": { "line": 132, "column": 5 } },
          "loc": { "start": { "line": 132, "column": 26 }, "end": { "line": 132, "column": 63 } }
        },
        "16": {
          "name": "(anonymous_17)",
          "decl": {
            "start": { "line": 152, "column": 42 },
            "end": { "line": 152, "column": null }
          },
          "loc": { "start": { "line": 155, "column": 10 }, "end": { "line": 169, "column": 1 } }
        },
        "17": {
          "name": "(anonymous_18)",
          "decl": { "start": { "line": 161, "column": 34 }, "end": { "line": 161, "column": 53 } },
          "loc": { "start": { "line": 161, "column": 57 }, "end": { "line": 161, "column": 106 } }
        },
        "18": {
          "name": "(anonymous_19)",
          "decl": { "start": { "line": 171, "column": 29 }, "end": { "line": 171, "column": 30 } },
          "loc": { "start": { "line": 171, "column": 113 }, "end": { "line": 182, "column": 1 } }
        },
        "19": {
          "name": "(anonymous_20)",
          "decl": { "start": { "line": 174, "column": 47 }, "end": { "line": 174, "column": 56 } },
          "loc": { "start": { "line": 174, "column": 60 }, "end": { "line": 174, "column": 99 } }
        },
        "20": {
          "name": "secretOverLimit",
          "decl": { "start": { "line": 185, "column": 16 }, "end": { "line": 185, "column": 31 } },
          "loc": { "start": { "line": 185, "column": 43 }, "end": { "line": 191, "column": 1 } }
        },
        "21": {
          "name": "(anonymous_22)",
          "decl": { "start": { "line": 193, "column": 28 }, "end": { "line": 193, "column": 29 } },
          "loc": { "start": { "line": 193, "column": 54 }, "end": { "line": 204, "column": 1 } }
        },
        "22": {
          "name": "dedent",
          "decl": { "start": { "line": 207, "column": 16 }, "end": { "line": 207, "column": 22 } },
          "loc": { "start": { "line": 207, "column": 35 }, "end": { "line": 222, "column": 1 } }
        },
        "23": {
          "name": "(anonymous_24)",
          "decl": { "start": { "line": 216, "column": 48 }, "end": { "line": 216, "column": 50 } },
          "loc": { "start": { "line": 216, "column": 54 }, "end": { "line": 216, "column": 63 } }
        },
        "24": {
          "name": "replaceString",
          "decl": { "start": { "line": 224, "column": 16 }, "end": { "line": 224, "column": 29 } },
          "loc": { "start": { "line": 224, "column": 75 }, "end": { "line": 229, "column": 1 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 15, "column": 2 }, "end": { "line": 21, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 15, "column": 2 }, "end": { "line": 21, "column": 3 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 15, "column": 6 }, "end": { "line": 15, "column": 45 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 15, "column": 6 }, "end": { "line": 15, "column": 18 } },
            { "start": { "line": 15, "column": 22 }, "end": { "line": 15, "column": 45 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 17, "column": 6 }, "end": { "line": 19, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 17, "column": 6 }, "end": { "line": 19, "column": 7 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 27, "column": 2 }, "end": { "line": 30, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 27, "column": 2 }, "end": { "line": 30, "column": 3 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 27, "column": 6 }, "end": { "line": 27, "column": 54 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 27, "column": 6 }, "end": { "line": 27, "column": 19 } },
            { "start": { "line": 27, "column": 23 }, "end": { "line": 27, "column": 54 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 55, "column": 6 }, "end": { "line": 60, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 55, "column": 6 }, "end": { "line": 60, "column": 7 } }
          ]
        },
        "6": {
          "loc": { "start": { "line": 55, "column": 10 }, "end": { "line": 55, "column": 38 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 55, "column": 10 }, "end": { "line": 55, "column": 19 } },
            { "start": { "line": 55, "column": 23 }, "end": { "line": 55, "column": 38 } }
          ]
        },
        "7": {
          "loc": { "start": { "line": 58, "column": 18 }, "end": { "line": 58, "column": 78 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 58, "column": 18 }, "end": { "line": 58, "column": 37 } },
            { "start": { "line": 58, "column": 41 }, "end": { "line": 58, "column": 78 } }
          ]
        },
        "8": {
          "loc": { "start": { "line": 63, "column": 6 }, "end": { "line": 68, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 63, "column": 6 }, "end": { "line": 68, "column": 7 } }
          ]
        },
        "9": {
          "loc": { "start": { "line": 66, "column": 18 }, "end": { "line": 66, "column": 78 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 66, "column": 18 }, "end": { "line": 66, "column": 37 } },
            { "start": { "line": 66, "column": 41 }, "end": { "line": 66, "column": 78 } }
          ]
        },
        "10": {
          "loc": { "start": { "line": 76, "column": 2 }, "end": { "line": 78, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 76, "column": 2 }, "end": { "line": 78, "column": 3 } }
          ]
        },
        "11": {
          "loc": { "start": { "line": 76, "column": 6 }, "end": { "line": 76, "column": 54 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 76, "column": 6 }, "end": { "line": 76, "column": 28 } },
            { "start": { "line": 76, "column": 32 }, "end": { "line": 76, "column": 54 } }
          ]
        },
        "12": {
          "loc": { "start": { "line": 84, "column": 2 }, "end": { "line": 86, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 84, "column": 2 }, "end": { "line": 86, "column": 3 } }
          ]
        },
        "13": {
          "loc": { "start": { "line": 84, "column": 6 }, "end": { "line": 84, "column": 54 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 84, "column": 6 }, "end": { "line": 84, "column": 28 } },
            { "start": { "line": 84, "column": 32 }, "end": { "line": 84, "column": 54 } }
          ]
        },
        "14": {
          "loc": { "start": { "line": 96, "column": 2 }, "end": { "line": 98, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 96, "column": 2 }, "end": { "line": 98, "column": 3 } }
          ]
        },
        "15": {
          "loc": { "start": { "line": 99, "column": 9 }, "end": { "line": 99, "column": 103 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 99, "column": 9 }, "end": { "line": 99, "column": 42 } },
            { "start": { "line": 99, "column": 46 }, "end": { "line": 99, "column": 103 } }
          ]
        },
        "16": {
          "loc": { "start": { "line": 110, "column": 2 }, "end": { "line": 114, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 110, "column": 2 }, "end": { "line": 114, "column": 3 } }
          ]
        },
        "17": {
          "loc": { "start": { "line": 117, "column": 2 }, "end": { "line": 121, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 117, "column": 2 }, "end": { "line": 121, "column": 3 } }
          ]
        },
        "18": {
          "loc": { "start": { "line": 132, "column": 26 }, "end": { "line": 132, "column": 63 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 132, "column": 26 }, "end": { "line": 132, "column": 57 } },
            { "start": { "line": 132, "column": 61 }, "end": { "line": 132, "column": 63 } }
          ]
        },
        "19": {
          "loc": { "start": { "line": 136, "column": 4 }, "end": { "line": 136, "column": 46 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 136, "column": 24 }, "end": { "line": 136, "column": 41 } },
            { "start": { "line": 136, "column": 44 }, "end": { "line": 136, "column": 46 } }
          ]
        },
        "20": {
          "loc": { "start": { "line": 138, "column": 4 }, "end": { "line": 138, "column": 52 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 138, "column": 27 }, "end": { "line": 138, "column": 47 } },
            { "start": { "line": 138, "column": 50 }, "end": { "line": 138, "column": 52 } }
          ]
        },
        "21": {
          "loc": { "start": { "line": 140, "column": 2 }, "end": { "line": 144, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 140, "column": 2 }, "end": { "line": 144, "column": 3 } }
          ]
        },
        "22": {
          "loc": { "start": { "line": 156, "column": 2 }, "end": { "line": 168, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 156, "column": 2 }, "end": { "line": 168, "column": 3 } }
          ]
        },
        "23": {
          "loc": { "start": { "line": 156, "column": 6 }, "end": { "line": 156, "column": 98 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 156, "column": 6 }, "end": { "line": 156, "column": 39 } },
            { "start": { "line": 156, "column": 43 }, "end": { "line": 156, "column": 63 } },
            { "start": { "line": 156, "column": 67 }, "end": { "line": 156, "column": 98 } }
          ]
        },
        "24": {
          "loc": { "start": { "line": 160, "column": 8 }, "end": { "line": 161, "column": 107 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 160, "column": 8 }, "end": { "line": 160, "column": 29 } },
            { "start": { "line": 161, "column": 8 }, "end": { "line": 161, "column": 107 } }
          ]
        },
        "25": {
          "loc": { "start": { "line": 162, "column": 6 }, "end": { "line": 166, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 162, "column": 6 }, "end": { "line": 166, "column": 7 } }
          ]
        },
        "26": {
          "loc": { "start": { "line": 172, "column": 2 }, "end": { "line": 181, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 172, "column": 2 }, "end": { "line": 181, "column": 3 } }
          ]
        },
        "27": {
          "loc": { "start": { "line": 172, "column": 6 }, "end": { "line": 172, "column": 92 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 172, "column": 6 }, "end": { "line": 172, "column": 39 } },
            { "start": { "line": 172, "column": 43 }, "end": { "line": 172, "column": 60 } },
            { "start": { "line": 172, "column": 64 }, "end": { "line": 172, "column": 92 } }
          ]
        },
        "28": {
          "loc": { "start": { "line": 175, "column": 6 }, "end": { "line": 179, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 175, "column": 6 }, "end": { "line": 179, "column": 7 } }
          ]
        },
        "29": {
          "loc": { "start": { "line": 196, "column": 2 }, "end": { "line": 202, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 196, "column": 2 }, "end": { "line": 202, "column": 3 } },
            { "start": { "line": 198, "column": 9 }, "end": { "line": 202, "column": 3 } }
          ]
        },
        "30": {
          "loc": { "start": { "line": 198, "column": 9 }, "end": { "line": 202, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 198, "column": 9 }, "end": { "line": 202, "column": 3 } },
            { "start": { "line": 200, "column": 9 }, "end": { "line": 202, "column": 3 } }
          ]
        },
        "31": {
          "loc": { "start": { "line": 200, "column": 9 }, "end": { "line": 202, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 200, "column": 9 }, "end": { "line": 202, "column": 3 } }
          ]
        },
        "32": {
          "loc": { "start": { "line": 200, "column": 13 }, "end": { "line": 200, "column": 48 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 200, "column": 13 }, "end": { "line": 200, "column": 28 } },
            { "start": { "line": 200, "column": 32 }, "end": { "line": 200, "column": 48 } }
          ]
        },
        "33": {
          "loc": { "start": { "line": 210, "column": 2 }, "end": { "line": 213, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 210, "column": 2 }, "end": { "line": 213, "column": 3 } }
          ]
        },
        "34": {
          "loc": { "start": { "line": 216, "column": 17 }, "end": { "line": 216, "column": 65 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 216, "column": 17 }, "end": { "line": 216, "column": 22 } },
            { "start": { "line": 216, "column": 26 }, "end": { "line": 216, "column": 65 } }
          ]
        },
        "35": {
          "loc": { "start": { "line": 217, "column": 2 }, "end": { "line": 220, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 217, "column": 2 }, "end": { "line": 220, "column": 3 } }
          ]
        },
        "36": {
          "loc": { "start": { "line": 217, "column": 6 }, "end": { "line": 217, "column": 26 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 217, "column": 6 }, "end": { "line": 217, "column": 12 } },
            { "start": { "line": 217, "column": 16 }, "end": { "line": 217, "column": 26 } }
          ]
        }
      },
      "s": {
        "0": 5,
        "1": 5,
        "2": 5,
        "3": 5,
        "4": 5,
        "5": 5,
        "6": 5,
        "7": 5,
        "8": 5,
        "9": 5,
        "10": 5,
        "11": 5,
        "12": 5,
        "13": 5,
        "14": 5,
        "15": 15,
        "16": 5,
        "17": 105,
        "18": 92,
        "19": 92,
        "20": 111,
        "21": 87,
        "22": 5,
        "23": 5,
        "24": 4,
        "25": 4,
        "26": 9,
        "27": 24,
        "28": 38,
        "29": 38,
        "30": 38,
        "31": 38,
        "32": 12,
        "33": 38,
        "34": 1,
        "35": 24,
        "36": 16,
        "37": 0,
        "38": 16,
        "39": 13,
        "40": 22,
        "41": 0,
        "42": 22,
        "43": 22,
        "44": 17,
        "45": 16,
        "46": 0,
        "47": 16,
        "48": 12,
        "49": 12,
        "50": 4,
        "51": 12,
        "52": 3,
        "53": 12,
        "54": 8,
        "55": 8,
        "56": 8,
        "57": 8,
        "58": 8,
        "59": 8,
        "60": 8,
        "61": 3,
        "62": 5,
        "63": 4,
        "64": 5,
        "65": 5,
        "66": 4,
        "67": 4,
        "68": 4,
        "69": 6,
        "70": 4,
        "71": 1,
        "72": 5,
        "73": 4,
        "74": 2,
        "75": 2,
        "76": 2,
        "77": 2,
        "78": 1,
        "79": 2,
        "80": 2,
        "81": 2,
        "82": 2,
        "83": 2,
        "84": 5,
        "85": 9,
        "86": 9,
        "87": 9,
        "88": 2,
        "89": 7,
        "90": 2,
        "91": 5,
        "92": 2,
        "93": 3,
        "94": 5,
        "95": 4,
        "96": 4,
        "97": 2,
        "98": 2,
        "99": 4,
        "100": 4,
        "101": 6,
        "102": 4,
        "103": 1,
        "104": 1,
        "105": 3,
        "106": 9,
        "107": 9,
        "108": 9
      },
      "f": {
        "0": 15,
        "1": 105,
        "2": 5,
        "3": 9,
        "4": 24,
        "5": 38,
        "6": 16,
        "7": 13,
        "8": 22,
        "9": 22,
        "10": 17,
        "11": 16,
        "12": 12,
        "13": 8,
        "14": 8,
        "15": 8,
        "16": 5,
        "17": 6,
        "18": 4,
        "19": 2,
        "20": 2,
        "21": 9,
        "22": 4,
        "23": 6,
        "24": 9
      },
      "b": {
        "0": [92],
        "1": [105, 104],
        "2": [87],
        "3": [4],
        "4": [5, 4],
        "5": [12],
        "6": [38, 21],
        "7": [12, 2],
        "8": [1],
        "9": [1, 0],
        "10": [0],
        "11": [16, 16],
        "12": [0],
        "13": [22, 22],
        "14": [0],
        "15": [16, 11],
        "16": [4],
        "17": [3],
        "18": [8, 2],
        "19": [4, 4],
        "20": [8, 0],
        "21": [3],
        "22": [4],
        "23": [5, 4, 4],
        "24": [4, 4],
        "25": [1],
        "26": [2],
        "27": [4, 3, 2],
        "28": [1],
        "29": [2, 7],
        "30": [2, 5],
        "31": [2],
        "32": [5, 4],
        "33": [2],
        "34": [4, 3],
        "35": [1],
        "36": [4, 1]
      }
    },
    "/Users/sam/code/work/pepr/src/lib/assets/rbac.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/assets/rbac.ts",
      "statementMap": {
        "0": { "start": { "line": 17, "column": 0 }, "end": { "line": 17, "column": 16 } },
        "1": { "start": { "line": 77, "column": 0 }, "end": { "line": 77, "column": 16 } },
        "2": { "start": { "line": 103, "column": 0 }, "end": { "line": 103, "column": 16 } },
        "3": { "start": { "line": 120, "column": 0 }, "end": { "line": 120, "column": 16 } },
        "4": { "start": { "line": 143, "column": 0 }, "end": { "line": 143, "column": 16 } },
        "5": { "start": { "line": 7, "column": 0 }, "end": { "line": 7, "column": 43 } },
        "6": { "start": { "line": 24, "column": 18 }, "end": { "line": 24, "column": 45 } },
        "7": { "start": { "line": 26, "column": 22 }, "end": { "line": 35, "column": 4 } },
        "8": { "start": { "line": 28, "column": 4 }, "end": { "line": 28, "column": 75 } },
        "9": { "start": { "line": 30, "column": 4 }, "end": { "line": 34, "column": 6 } },
        "10": { "start": { "line": 38, "column": 21 }, "end": { "line": 38, "column": 87 } },
        "11": { "start": { "line": 39, "column": 68 }, "end": { "line": 39, "column": 70 } },
        "12": { "start": { "line": 41, "column": 2 }, "end": { "line": 49, "column": 5 } },
        "13": { "start": { "line": 42, "column": 16 }, "end": { "line": 42, "column": 53 } },
        "14": { "start": { "line": 43, "column": 4 }, "end": { "line": 48, "column": 5 } },
        "15": { "start": { "line": 45, "column": 6 }, "end": { "line": 45, "column": 87 } },
        "16": { "start": { "line": 47, "column": 6 }, "end": { "line": 47, "column": 58 } },
        "17": { "start": { "line": 52, "column": 28 }, "end": { "line": 52, "column": 50 } },
        "18": { "start": { "line": 54, "column": 2 }, "end": { "line": 68, "column": 4 } },
        "19": { "start": { "line": 78, "column": 2 }, "end": { "line": 94, "column": 4 } },
        "20": { "start": { "line": 104, "column": 2 }, "end": { "line": 111, "column": 4 } },
        "21": { "start": { "line": 121, "column": 2 }, "end": { "line": 121, "column": 25 } },
        "22": { "start": { "line": 122, "column": 2 }, "end": { "line": 134, "column": 4 } },
        "23": { "start": { "line": 144, "column": 2 }, "end": { "line": 144, "column": 25 } },
        "24": { "start": { "line": 145, "column": 2 }, "end": { "line": 161, "column": 4 } }
      },
      "fnMap": {
        "0": {
          "name": "clusterRole",
          "decl": { "start": { "line": 17, "column": 16 }, "end": { "line": 17, "column": 27 } },
          "loc": { "start": { "line": 21, "column": 38 }, "end": { "line": 69, "column": 1 } }
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 26, "column": 47 }, "end": { "line": 26, "column": 50 } },
          "loc": { "start": { "line": 26, "column": 53 }, "end": { "line": 35, "column": 3 } }
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 41, "column": 21 }, "end": { "line": 41, "column": 25 } },
          "loc": { "start": { "line": 41, "column": 28 }, "end": { "line": 49, "column": 3 } }
        },
        "3": {
          "name": "clusterRoleBinding",
          "decl": { "start": { "line": 77, "column": 16 }, "end": { "line": 77, "column": 34 } },
          "loc": { "start": { "line": 77, "column": 47 }, "end": { "line": 95, "column": 1 } }
        },
        "4": {
          "name": "serviceAccount",
          "decl": { "start": { "line": 103, "column": 16 }, "end": { "line": 103, "column": 30 } },
          "loc": { "start": { "line": 103, "column": 43 }, "end": { "line": 112, "column": 1 } }
        },
        "5": {
          "name": "storeRole",
          "decl": { "start": { "line": 120, "column": 16 }, "end": { "line": 120, "column": 25 } },
          "loc": { "start": { "line": 120, "column": 38 }, "end": { "line": 135, "column": 1 } }
        },
        "6": {
          "name": "storeRoleBinding",
          "decl": { "start": { "line": 143, "column": 16 }, "end": { "line": 143, "column": 32 } },
          "loc": { "start": { "line": 143, "column": 45 }, "end": { "line": 162, "column": 1 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 20, "column": 2 }, "end": { "line": 20, "column": 28 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 20, "column": 21 }, "end": { "line": 20, "column": 28 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 28, "column": 4 }, "end": { "line": 28, "column": 74 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 28, "column": 33 }, "end": { "line": 28, "column": 43 } },
            { "start": { "line": 28, "column": 48 }, "end": { "line": 28, "column": 73 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 38, "column": 26 }, "end": { "line": 38, "column": 69 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 38, "column": 54 }, "end": { "line": 38, "column": 64 } },
            { "start": { "line": 38, "column": 67 }, "end": { "line": 38, "column": 69 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 43, "column": 4 }, "end": { "line": 48, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 43, "column": 4 }, "end": { "line": 48, "column": 5 } },
            { "start": { "line": 46, "column": 11 }, "end": { "line": 48, "column": 5 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 47, "column": 39 }, "end": { "line": 47, "column": 55 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 47, "column": 39 }, "end": { "line": 47, "column": 49 } },
            { "start": { "line": 47, "column": 53 }, "end": { "line": 47, "column": 55 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 59, "column": 6 }, "end": { "line": 67, "column": null } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 60, "column": 10 }, "end": { "line": 60, "column": 27 } },
            { "start": { "line": 61, "column": 10 }, "end": { "line": 67, "column": null } }
          ]
        }
      },
      "s": {
        "0": 2,
        "1": 2,
        "2": 2,
        "3": 2,
        "4": 2,
        "5": 2,
        "6": 10,
        "7": 10,
        "8": 26,
        "9": 26,
        "10": 10,
        "11": 10,
        "12": 10,
        "13": 40,
        "14": 40,
        "15": 13,
        "16": 27,
        "17": 10,
        "18": 10,
        "19": 1,
        "20": 1,
        "21": 1,
        "22": 1,
        "23": 1,
        "24": 1
      },
      "f": { "0": 10, "1": 26, "2": 40, "3": 1, "4": 1, "5": 1, "6": 1 },
      "b": { "0": [0], "1": [1, 25], "2": [10, 0], "3": [13, 27], "4": [27, 0], "5": [8, 2] }
    },
    "/Users/sam/code/work/pepr/src/cli/build.helpers.ts": {
      "path": "/Users/sam/code/work/pepr/src/cli/build.helpers.ts",
      "statementMap": {
        "0": { "start": { "line": 27, "column": 0 }, "end": { "line": 27, "column": 16 } },
        "1": { "start": { "line": 51, "column": 0 }, "end": { "line": 51, "column": 7 } },
        "2": { "start": { "line": 73, "column": 0 }, "end": { "line": 73, "column": 16 } },
        "3": { "start": { "line": 84, "column": 0 }, "end": { "line": 84, "column": 16 } },
        "4": { "start": { "line": 101, "column": 0 }, "end": { "line": 101, "column": 16 } },
        "5": { "start": { "line": 120, "column": 0 }, "end": { "line": 120, "column": 7 } },
        "6": { "start": { "line": 141, "column": 0 }, "end": { "line": 141, "column": 16 } },
        "7": { "start": { "line": 152, "column": 0 }, "end": { "line": 152, "column": 16 } },
        "8": { "start": { "line": 168, "column": 0 }, "end": { "line": 168, "column": 7 } },
        "9": { "start": { "line": 186, "column": 0 }, "end": { "line": 186, "column": 7 } },
        "10": { "start": { "line": 1, "column": 0 }, "end": { "line": 1, "column": 70 } },
        "11": { "start": { "line": 2, "column": 0 }, "end": { "line": 2, "column": 50 } },
        "12": { "start": { "line": 3, "column": 0 }, "end": { "line": 3, "column": 57 } },
        "13": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 41 } },
        "14": { "start": { "line": 6, "column": 0 }, "end": { "line": 6, "column": 57 } },
        "15": { "start": { "line": 7, "column": 0 }, "end": { "line": 7, "column": 75 } },
        "16": { "start": { "line": 9, "column": 0 }, "end": { "line": 9, "column": 31 } },
        "17": { "start": { "line": 10, "column": 0 }, "end": { "line": 10, "column": 36 } },
        "18": { "start": { "line": 11, "column": 0 }, "end": { "line": 11, "column": 69 } },
        "19": { "start": { "line": 12, "column": 0 }, "end": { "line": 12, "column": 64 } },
        "20": { "start": { "line": 13, "column": 0 }, "end": { "line": 13, "column": 78 } },
        "21": { "start": { "line": 32, "column": 2 }, "end": { "line": 34, "column": 3 } },
        "22": { "start": { "line": 33, "column": 4 }, "end": { "line": 33, "column": 25 } },
        "23": { "start": { "line": 37, "column": 2 }, "end": { "line": 39, "column": 3 } },
        "24": { "start": { "line": 38, "column": 4 }, "end": { "line": 38, "column": 19 } },
        "25": { "start": { "line": 42, "column": 2 }, "end": { "line": 42, "column": 38 } },
        "26": { "start": { "line": 52, "column": 27 }, "end": { "line": 52, "column": 33 } },
        "27": { "start": { "line": 53, "column": 2 }, "end": { "line": 61, "column": 3 } },
        "28": { "start": { "line": 54, "column": 4 }, "end": { "line": 60, "column": 5 } },
        "29": { "start": { "line": 55, "column": 6 }, "end": { "line": 55, "column": 50 } },
        "30": { "start": { "line": 56, "column": 6 }, "end": { "line": 56, "column": 23 } },
        "31": { "start": { "line": 58, "column": 6 }, "end": { "line": 58, "column": 73 } },
        "32": { "start": { "line": 59, "column": 6 }, "end": { "line": 59, "column": 22 } },
        "33": { "start": { "line": 62, "column": 2 }, "end": { "line": 62, "column": 26 } },
        "34": { "start": { "line": 74, "column": 2 }, "end": { "line": 76, "column": 12 } },
        "35": { "start": { "line": 85, "column": 2 }, "end": { "line": 92, "column": 3 } },
        "36": { "start": { "line": 86, "column": 18 }, "end": { "line": 86, "column": 96 } },
        "37": { "start": { "line": 87, "column": 4 }, "end": { "line": 91, "column": 5 } },
        "38": { "start": { "line": 89, "column": 6 }, "end": { "line": 89, "column": 27 } },
        "39": { "start": { "line": 90, "column": 6 }, "end": { "line": 90, "column": 22 } },
        "40": { "start": { "line": 102, "column": 21 }, "end": { "line": 102, "column": 23 } },
        "41": { "start": { "line": 103, "column": 2 }, "end": { "line": 109, "column": 3 } },
        "42": { "start": { "line": 104, "column": 4 }, "end": { "line": 107, "column": 5 } },
        "43": { "start": { "line": 105, "column": 6 }, "end": { "line": 105, "column": 74 } },
        "44": { "start": { "line": 106, "column": 6 }, "end": { "line": 106, "column": 22 } },
        "45": { "start": { "line": 108, "column": 4 }, "end": { "line": 108, "column": 31 } },
        "46": { "start": { "line": 110, "column": 2 }, "end": { "line": 110, "column": 22 } },
        "47": { "start": { "line": 126, "column": 2 }, "end": { "line": 132, "column": 3 } },
        "48": { "start": { "line": 127, "column": 4 }, "end": { "line": 127, "column": 68 } },
        "49": { "start": { "line": 128, "column": 4 }, "end": { "line": 130, "column": 7 } },
        "50": { "start": { "line": 131, "column": 4 }, "end": { "line": 131, "column": 59 } },
        "51": { "start": { "line": 142, "column": 2 }, "end": { "line": 145, "column": 3 } },
        "52": { "start": { "line": 143, "column": 4 }, "end": { "line": 143, "column": 59 } },
        "53": { "start": { "line": 144, "column": 4 }, "end": { "line": 144, "column": 11 } },
        "54": { "start": { "line": 153, "column": 2 }, "end": { "line": 159, "column": 3 } },
        "55": { "start": { "line": 155, "column": 4 }, "end": { "line": 155, "column": 42 } },
        "56": { "start": { "line": 157, "column": 4 }, "end": { "line": 157, "column": 50 } },
        "57": { "start": { "line": 158, "column": 4 }, "end": { "line": 158, "column": 20 } },
        "58": { "start": { "line": 172, "column": 14 }, "end": { "line": 172, "column": 35 } },
        "59": { "start": { "line": 175, "column": 2 }, "end": { "line": 181, "column": 3 } },
        "60": { "start": { "line": 176, "column": 4 }, "end": { "line": 176, "column": 22 } },
        "61": { "start": { "line": 179, "column": 4 }, "end": { "line": 179, "column": 24 } },
        "62": { "start": { "line": 180, "column": 4 }, "end": { "line": 180, "column": 24 } },
        "63": { "start": { "line": 183, "column": 2 }, "end": { "line": 183, "column": 13 } },
        "64": { "start": { "line": 193, "column": 61 }, "end": { "line": 193, "column": 64 } },
        "65": { "start": { "line": 194, "column": 19 }, "end": { "line": 194, "column": 45 } },
        "66": { "start": { "line": 195, "column": 20 }, "end": { "line": 195, "column": 35 } },
        "67": { "start": { "line": 196, "column": 19 }, "end": { "line": 196, "column": 47 } },
        "68": { "start": { "line": 197, "column": 15 }, "end": { "line": 197, "column": 69 } },
        "69": { "start": { "line": 198, "column": 19 }, "end": { "line": 198, "column": 50 } },
        "70": { "start": { "line": 200, "column": 18 }, "end": { "line": 200, "column": 20 } },
        "71": { "start": { "line": 201, "column": 2 }, "end": { "line": 205, "column": 3 } },
        "72": { "start": { "line": 202, "column": 4 }, "end": { "line": 202, "column": 73 } },
        "73": { "start": { "line": 204, "column": 4 }, "end": { "line": 204, "column": 67 } },
        "74": { "start": { "line": 206, "column": 2 }, "end": { "line": 206, "column": 37 } },
        "75": { "start": { "line": 207, "column": 2 }, "end": { "line": 207, "column": 42 } },
        "76": { "start": { "line": 209, "column": 2 }, "end": { "line": 209, "column": 68 } },
        "77": { "start": { "line": 210, "column": 2 }, "end": { "line": 210, "column": 69 } }
      },
      "fnMap": {
        "0": {
          "name": "determineRbacMode",
          "decl": { "start": { "line": 27, "column": 16 }, "end": { "line": 27, "column": 33 } },
          "loc": { "start": { "line": 29, "column": 38 }, "end": { "line": 43, "column": 1 } }
        },
        "1": {
          "name": "handleCustomOutputDir",
          "decl": { "start": { "line": 51, "column": 22 }, "end": { "line": 51, "column": 43 } },
          "loc": { "start": { "line": 51, "column": 61 }, "end": { "line": 63, "column": 1 } }
        },
        "2": {
          "name": "checkIronBankImage",
          "decl": { "start": { "line": 73, "column": 16 }, "end": { "line": 73, "column": 34 } },
          "loc": { "start": { "line": 73, "column": 87 }, "end": { "line": 77, "column": 1 } }
        },
        "3": {
          "name": "validImagePullSecret",
          "decl": { "start": { "line": 84, "column": 16 }, "end": { "line": 84, "column": 36 } },
          "loc": { "start": { "line": 84, "column": 64 }, "end": { "line": 93, "column": 1 } }
        },
        "4": {
          "name": "handleCustomImage",
          "decl": { "start": { "line": 101, "column": 16 }, "end": { "line": 101, "column": 33 } },
          "loc": { "start": { "line": 101, "column": 71 }, "end": { "line": 111, "column": 1 } }
        },
        "5": {
          "name": "handleCustomImageBuild",
          "decl": { "start": { "line": 120, "column": 22 }, "end": { "line": 120, "column": 44 } },
          "loc": { "start": { "line": 124, "column": 15 }, "end": { "line": 133, "column": 1 } }
        },
        "6": {
          "name": "handleEmbedding",
          "decl": { "start": { "line": 141, "column": 16 }, "end": { "line": 141, "column": 31 } },
          "loc": { "start": { "line": 141, "column": 60 }, "end": { "line": 146, "column": 1 } }
        },
        "7": {
          "name": "handleValidCapabilityNames",
          "decl": { "start": { "line": 152, "column": 16 }, "end": { "line": 152, "column": 42 } },
          "loc": { "start": { "line": 152, "column": 75 }, "end": { "line": 160, "column": 1 } }
        },
        "8": {
          "name": "watchForChanges",
          "decl": { "start": { "line": 168, "column": 22 }, "end": { "line": 168, "column": 37 } },
          "loc": { "start": { "line": 170, "column": 32 }, "end": { "line": 184, "column": 1 } }
        },
        "9": {
          "name": "generateYamlAndWriteToDisk",
          "decl": { "start": { "line": 186, "column": 22 }, "end": { "line": 186, "column": 48 } },
          "loc": { "start": { "line": 192, "column": 1 }, "end": { "line": 211, "column": 1 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 32, "column": 2 }, "end": { "line": 34, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 32, "column": 2 }, "end": { "line": 34, "column": 3 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 37, "column": 2 }, "end": { "line": 39, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 37, "column": 2 }, "end": { "line": 39, "column": 3 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 37, "column": 6 }, "end": { "line": 37, "column": 57 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 37, "column": 6 }, "end": { "line": 37, "column": 23 } },
            { "start": { "line": 37, "column": 27 }, "end": { "line": 37, "column": 57 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 42, "column": 9 }, "end": { "line": 42, "column": 37 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 42, "column": 9 }, "end": { "line": 42, "column": 26 } },
            { "start": { "line": 42, "column": 30 }, "end": { "line": 42, "column": 37 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 53, "column": 2 }, "end": { "line": 61, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 53, "column": 2 }, "end": { "line": 61, "column": 3 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 74, "column": 9 }, "end": { "line": 76, "column": 11 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 75, "column": 6 }, "end": { "line": 75, "column": 93 } },
            { "start": { "line": 76, "column": 6 }, "end": { "line": 76, "column": 11 } }
          ]
        },
        "6": {
          "loc": { "start": { "line": 85, "column": 2 }, "end": { "line": 92, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 85, "column": 2 }, "end": { "line": 92, "column": 3 } }
          ]
        },
        "7": {
          "loc": { "start": { "line": 87, "column": 4 }, "end": { "line": 91, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 87, "column": 4 }, "end": { "line": 91, "column": 5 } }
          ]
        },
        "8": {
          "loc": { "start": { "line": 103, "column": 2 }, "end": { "line": 109, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 103, "column": 2 }, "end": { "line": 109, "column": 3 } }
          ]
        },
        "9": {
          "loc": { "start": { "line": 104, "column": 4 }, "end": { "line": 107, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 104, "column": 4 }, "end": { "line": 107, "column": 5 } }
          ]
        },
        "10": {
          "loc": { "start": { "line": 126, "column": 2 }, "end": { "line": 132, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 126, "column": 2 }, "end": { "line": 132, "column": 3 } }
          ]
        },
        "11": {
          "loc": { "start": { "line": 142, "column": 2 }, "end": { "line": 145, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 142, "column": 2 }, "end": { "line": 145, "column": 3 } }
          ]
        },
        "12": {
          "loc": { "start": { "line": 175, "column": 2 }, "end": { "line": 181, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 175, "column": 2 }, "end": { "line": 181, "column": 3 } },
            { "start": { "line": 177, "column": 9 }, "end": { "line": 181, "column": 3 } }
          ]
        },
        "13": {
          "loc": { "start": { "line": 201, "column": 2 }, "end": { "line": 205, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 201, "column": 2 }, "end": { "line": 205, "column": 3 } },
            { "start": { "line": 203, "column": 9 }, "end": { "line": 205, "column": 3 } }
          ]
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 1,
        "12": 1,
        "13": 1,
        "14": 1,
        "15": 1,
        "16": 1,
        "17": 1,
        "18": 1,
        "19": 1,
        "20": 1,
        "21": 4,
        "22": 1,
        "23": 3,
        "24": 1,
        "25": 2,
        "26": 2,
        "27": 2,
        "28": 1,
        "29": 1,
        "30": 1,
        "31": 0,
        "32": 0,
        "33": 1,
        "34": 2,
        "35": 3,
        "36": 2,
        "37": 2,
        "38": 1,
        "39": 1,
        "40": 3,
        "41": 3,
        "42": 2,
        "43": 1,
        "44": 1,
        "45": 2,
        "46": 3,
        "47": 2,
        "48": 1,
        "49": 1,
        "50": 1,
        "51": 2,
        "52": 1,
        "53": 1,
        "54": 2,
        "55": 2,
        "56": 1,
        "57": 1,
        "58": 0,
        "59": 0,
        "60": 0,
        "61": 0,
        "62": 0,
        "63": 0,
        "64": 0,
        "65": 0,
        "66": 0,
        "67": 0,
        "68": 0,
        "69": 0,
        "70": 0,
        "71": 0,
        "72": 0,
        "73": 0,
        "74": 0,
        "75": 0,
        "76": 0,
        "77": 0
      },
      "f": { "0": 4, "1": 2, "2": 2, "3": 3, "4": 3, "5": 2, "6": 2, "7": 2, "8": 0, "9": 0 },
      "b": {
        "0": [1],
        "1": [1],
        "2": [3, 2],
        "3": [2, 1],
        "4": [1],
        "5": [1, 1],
        "6": [2],
        "7": [1],
        "8": [2],
        "9": [1],
        "10": [1],
        "11": [1],
        "12": [0, 0],
        "13": [0, 0]
      }
    },
    "/Users/sam/code/work/pepr/src/lib/assets/yaml/generateAllYaml.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/assets/yaml/generateAllYaml.ts",
      "statementMap": {
        "0": { "start": { "line": 16, "column": 0 }, "end": { "line": 16, "column": 7 } },
        "1": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 28 } },
        "2": { "start": { "line": 6, "column": 0 }, "end": { "line": 6, "column": 42 } },
        "3": { "start": { "line": 7, "column": 0 }, "end": { "line": 7, "column": 83 } },
        "4": { "start": { "line": 8, "column": 0 }, "end": { "line": 8, "column": 103 } },
        "5": { "start": { "line": 9, "column": 0 }, "end": { "line": 9, "column": 65 } },
        "6": { "start": { "line": 10, "column": 0 }, "end": { "line": 10, "column": 56 } },
        "7": { "start": { "line": 11, "column": 0 }, "end": { "line": 11, "column": 36 } },
        "8": { "start": { "line": 12, "column": 0 }, "end": { "line": 12, "column": 53 } },
        "9": { "start": { "line": 17, "column": 48 }, "end": { "line": 17, "column": 54 } },
        "10": { "start": { "line": 18, "column": 15 }, "end": { "line": 18, "column": 38 } },
        "11": { "start": { "line": 19, "column": 15 }, "end": { "line": 19, "column": 69 } },
        "12": { "start": { "line": 21, "column": 20 }, "end": { "line": 34, "column": 4 } },
        "13": { "start": { "line": 36, "column": 19 }, "end": { "line": 39, "column": 4 } },
        "14": { "start": { "line": 42, "column": 30 }, "end": { "line": 43, "column": null } },
        "15": { "start": { "line": 43, "column": 16 }, "end": { "line": 43, "column": 59 } },
        "16": { "start": { "line": 46, "column": 2 }, "end": { "line": 46, "column": 41 } },
        "17": { "start": { "line": 49, "column": 2 }, "end": { "line": 49, "column": 87 } },
        "18": { "start": { "line": 49, "column": 35 }, "end": { "line": 49, "column": 71 } }
      },
      "fnMap": {
        "0": {
          "name": "generateAllYaml",
          "decl": { "start": { "line": 16, "column": 22 }, "end": { "line": 16, "column": 37 } },
          "loc": { "start": { "line": 16, "column": 78 }, "end": { "line": 50, "column": 1 } }
        },
        "1": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 43, "column": 4 }, "end": { "line": 43, "column": 12 } },
          "loc": { "start": { "line": 43, "column": 16 }, "end": { "line": 43, "column": 59 } }
        },
        "2": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 49, "column": 23 }, "end": { "line": 49, "column": 31 } },
          "loc": { "start": { "line": 49, "column": 35 }, "end": { "line": 49, "column": 71 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 43, "column": 16 }, "end": { "line": 43, "column": 59 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 43, "column": 16 }, "end": { "line": 43, "column": 33 } },
            { "start": { "line": 43, "column": 37 }, "end": { "line": 43, "column": 59 } }
          ]
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0
      },
      "f": { "0": 0, "1": 0, "2": 0 },
      "b": { "0": [0, 0] }
    },
    "/Users/sam/code/work/pepr/src/lib/assets/networking.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/assets/networking.ts",
      "statementMap": {
        "0": { "start": { "line": 8, "column": 0 }, "end": { "line": 8, "column": 16 } },
        "1": { "start": { "line": 23, "column": 0 }, "end": { "line": 23, "column": 16 } },
        "2": { "start": { "line": 39, "column": 0 }, "end": { "line": 39, "column": 16 } },
        "3": { "start": { "line": 65, "column": 0 }, "end": { "line": 65, "column": 16 } },
        "4": { "start": { "line": 9, "column": 2 }, "end": { "line": 20, "column": 4 } },
        "5": { "start": { "line": 24, "column": 2 }, "end": { "line": 36, "column": 4 } },
        "6": { "start": { "line": 40, "column": 2 }, "end": { "line": 62, "column": 4 } },
        "7": { "start": { "line": 66, "column": 2 }, "end": { "line": 88, "column": 4 } }
      },
      "fnMap": {
        "0": {
          "name": "apiTokenSecret",
          "decl": { "start": { "line": 8, "column": 16 }, "end": { "line": 8, "column": 30 } },
          "loc": { "start": { "line": 8, "column": 61 }, "end": { "line": 21, "column": 1 } }
        },
        "1": {
          "name": "tlsSecret",
          "decl": { "start": { "line": 23, "column": 16 }, "end": { "line": 23, "column": 25 } },
          "loc": { "start": { "line": 23, "column": 51 }, "end": { "line": 37, "column": 1 } }
        },
        "2": {
          "name": "service",
          "decl": { "start": { "line": 39, "column": 16 }, "end": { "line": 39, "column": 23 } },
          "loc": { "start": { "line": 39, "column": 36 }, "end": { "line": 63, "column": 1 } }
        },
        "3": {
          "name": "watcherService",
          "decl": { "start": { "line": 65, "column": 16 }, "end": { "line": 65, "column": 30 } },
          "loc": { "start": { "line": 65, "column": 43 }, "end": { "line": 89, "column": 1 } }
        }
      },
      "branchMap": {},
      "s": { "0": 1, "1": 1, "2": 1, "3": 1, "4": 0, "5": 0, "6": 0, "7": 0 },
      "f": { "0": 0, "1": 0, "2": 0, "3": 0 },
      "b": {}
    },
    "/Users/sam/code/work/pepr/src/lib/assets/pods.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/assets/pods.ts",
      "statementMap": {
        "0": { "start": { "line": 13, "column": 0 }, "end": { "line": 13, "column": 16 } },
        "1": { "start": { "line": 34, "column": 0 }, "end": { "line": 34, "column": 16 } },
        "2": { "start": { "line": 194, "column": 0 }, "end": { "line": 194, "column": 16 } },
        "3": { "start": { "line": 344, "column": 0 }, "end": { "line": 344, "column": 16 } },
        "4": { "start": { "line": 369, "column": 0 }, "end": { "line": 369, "column": 16 } },
        "5": { "start": { "line": 6, "column": 0 }, "end": { "line": 6, "column": 32 } },
        "6": { "start": { "line": 7, "column": 0 }, "end": { "line": 7, "column": 45 } },
        "7": { "start": { "line": 14, "column": 2 }, "end": { "line": 31, "column": 3 } },
        "8": { "start": { "line": 15, "column": 4 }, "end": { "line": 22, "column": 6 } },
        "9": { "start": { "line": 24, "column": 4 }, "end": { "line": 30, "column": 6 } },
        "10": { "start": { "line": 40, "column": 48 }, "end": { "line": 40, "column": 54 } },
        "11": { "start": { "line": 42, "column": 20 }, "end": { "line": 42, "column": 25 } },
        "12": { "start": { "line": 45, "column": 14 }, "end": { "line": 45, "column": 31 } },
        "13": { "start": { "line": 46, "column": 30 }, "end": { "line": 46, "column": 32 } },
        "14": { "start": { "line": 49, "column": 2 }, "end": { "line": 55, "column": 3 } },
        "15": { "start": { "line": 50, "column": 4 }, "end": { "line": 52, "column": 5 } },
        "16": { "start": { "line": 51, "column": 6 }, "end": { "line": 51, "column": 25 } },
        "17": { "start": { "line": 53, "column": 21 }, "end": { "line": 53, "column": 75 } },
        "18": { "start": { "line": 53, "column": 59 }, "end": { "line": 53, "column": 74 } },
        "19": { "start": { "line": 54, "column": 4 }, "end": { "line": 54, "column": 31 } },
        "20": { "start": { "line": 58, "column": 2 }, "end": { "line": 60, "column": 3 } },
        "21": { "start": { "line": 59, "column": 4 }, "end": { "line": 59, "column": 16 } },
        "22": { "start": { "line": 62, "column": 34 }, "end": { "line": 185, "column": 4 } },
        "23": { "start": { "line": 187, "column": 2 }, "end": { "line": 189, "column": 3 } },
        "24": { "start": { "line": 188, "column": 4 }, "end": { "line": 188, "column": 79 } },
        "25": { "start": { "line": 191, "column": 2 }, "end": { "line": 191, "column": 16 } },
        "26": { "start": { "line": 200, "column": 34 }, "end": { "line": 200, "column": 40 } },
        "27": { "start": { "line": 201, "column": 14 }, "end": { "line": 201, "column": 18 } },
        "28": { "start": { "line": 203, "column": 34 }, "end": { "line": 335, "column": 4 } },
        "29": { "start": { "line": 337, "column": 2 }, "end": { "line": 339, "column": 3 } },
        "30": { "start": { "line": 338, "column": 4 }, "end": { "line": 338, "column": 79 } },
        "31": { "start": { "line": 341, "column": 2 }, "end": { "line": 341, "column": 16 } },
        "32": { "start": { "line": 346, "column": 21 }, "end": { "line": 346, "column": 35 } },
        "33": { "start": { "line": 347, "column": 15 }, "end": { "line": 347, "column": 37 } },
        "34": { "start": { "line": 348, "column": 25 }, "end": { "line": 348, "column": 54 } },
        "35": { "start": { "line": 349, "column": 2 }, "end": { "line": 366, "column": 3 } },
        "36": { "start": { "line": 350, "column": 18 }, "end": { "line": 350, "column": 78 } },
        "37": { "start": { "line": 351, "column": 4 }, "end": { "line": 351, "column": 48 } },
        "38": { "start": { "line": 352, "column": 4 }, "end": { "line": 352, "column": 20 } },
        "39": { "start": { "line": 354, "column": 4 }, "end": { "line": 365, "column": 6 } },
        "40": { "start": { "line": 370, "column": 21 }, "end": { "line": 373, "column": 4 } },
        "41": { "start": { "line": 375, "column": 14 }, "end": { "line": 378, "column": 4 } },
        "42": { "start": { "line": 380, "column": 2 }, "end": { "line": 382, "column": 3 } },
        "43": { "start": { "line": 381, "column": 4 }, "end": { "line": 381, "column": 41 } },
        "44": { "start": { "line": 383, "column": 14 }, "end": { "line": 383, "column": 30 } },
        "45": { "start": { "line": 384, "column": 2 }, "end": { "line": 386, "column": 83 } },
        "46": { "start": { "line": 385, "column": 72 }, "end": { "line": 385, "column": 87 } },
        "47": { "start": { "line": 386, "column": 65 }, "end": { "line": 386, "column": 80 } }
      },
      "fnMap": {
        "0": {
          "name": "getNamespace",
          "decl": { "start": { "line": 13, "column": 16 }, "end": { "line": 13, "column": 28 } },
          "loc": { "start": { "line": 13, "column": 69 }, "end": { "line": 32, "column": 1 } }
        },
        "1": {
          "name": "getWatcher",
          "decl": { "start": { "line": 34, "column": 16 }, "end": { "line": 34, "column": 26 } },
          "loc": { "start": { "line": 38, "column": 26 }, "end": { "line": 192, "column": 1 } }
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 53, "column": 48 }, "end": { "line": 53, "column": 55 } },
          "loc": { "start": { "line": 53, "column": 59 }, "end": { "line": 53, "column": 74 } }
        },
        "3": {
          "name": "getDeployment",
          "decl": { "start": { "line": 194, "column": 16 }, "end": { "line": 194, "column": 29 } },
          "loc": { "start": { "line": 198, "column": 26 }, "end": { "line": 342, "column": 1 } }
        },
        "4": {
          "name": "getModuleSecret",
          "decl": { "start": { "line": 344, "column": 16 }, "end": { "line": 344, "column": 31 } },
          "loc": { "start": { "line": 344, "column": 72 }, "end": { "line": 367, "column": 1 } }
        },
        "5": {
          "name": "genEnv",
          "decl": { "start": { "line": 369, "column": 16 }, "end": { "line": 369, "column": 22 } },
          "loc": { "start": { "line": 369, "column": 87 }, "end": { "line": 387, "column": 1 } }
        },
        "6": {
          "name": "(anonymous_6)",
          "decl": { "start": { "line": 385, "column": 52 }, "end": { "line": 385, "column": 53 } },
          "loc": { "start": { "line": 385, "column": 72 }, "end": { "line": 385, "column": 87 } }
        },
        "7": {
          "name": "(anonymous_7)",
          "decl": { "start": { "line": 386, "column": 45 }, "end": { "line": 386, "column": 46 } },
          "loc": { "start": { "line": 386, "column": 65 }, "end": { "line": 386, "column": 80 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 14, "column": 2 }, "end": { "line": 31, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 14, "column": 2 }, "end": { "line": 31, "column": 3 } },
            { "start": { "line": 23, "column": 9 }, "end": { "line": 31, "column": 3 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 20, "column": 16 }, "end": { "line": 20, "column": 37 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 20, "column": 16 }, "end": { "line": 20, "column": 31 } },
            { "start": { "line": 20, "column": 35 }, "end": { "line": 20, "column": 37 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 50, "column": 4 }, "end": { "line": 52, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 50, "column": 4 }, "end": { "line": 52, "column": 5 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 58, "column": 2 }, "end": { "line": 60, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 58, "column": 2 }, "end": { "line": 60, "column": 3 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 58, "column": 6 }, "end": { "line": 58, "column": 41 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 58, "column": 6 }, "end": { "line": 58, "column": 25 } },
            { "start": { "line": 58, "column": 29 }, "end": { "line": 58, "column": 41 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 69, "column": 32 }, "end": { "line": 69, "column": 56 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 69, "column": 32 }, "end": { "line": 69, "column": 50 } },
            { "start": { "line": 69, "column": 54 }, "end": { "line": 69, "column": 56 } }
          ]
        },
        "6": {
          "loc": { "start": { "line": 187, "column": 2 }, "end": { "line": 189, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 187, "column": 2 }, "end": { "line": 189, "column": 3 } }
          ]
        },
        "7": {
          "loc": { "start": { "line": 210, "column": 32 }, "end": { "line": 210, "column": 56 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 210, "column": 32 }, "end": { "line": 210, "column": 50 } },
            { "start": { "line": 210, "column": 54 }, "end": { "line": 210, "column": 56 } }
          ]
        },
        "8": {
          "loc": { "start": { "line": 337, "column": 2 }, "end": { "line": 339, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 337, "column": 2 }, "end": { "line": 339, "column": 3 } }
          ]
        },
        "9": {
          "loc": { "start": { "line": 349, "column": 2 }, "end": { "line": 366, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 349, "column": 2 }, "end": { "line": 366, "column": 3 } },
            { "start": { "line": 353, "column": 9 }, "end": { "line": 366, "column": 3 } }
          ]
        },
        "10": {
          "loc": { "start": { "line": 369, "column": 45 }, "end": { "line": 369, "column": 62 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 369, "column": 57 }, "end": { "line": 369, "column": 62 } }
          ]
        },
        "11": {
          "loc": { "start": { "line": 369, "column": 64 }, "end": { "line": 369, "column": 87 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 369, "column": 82 }, "end": { "line": 369, "column": 87 } }
          ]
        },
        "12": {
          "loc": { "start": { "line": 372, "column": 15 }, "end": { "line": 372, "column": 40 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 372, "column": 15 }, "end": { "line": 372, "column": 30 } },
            { "start": { "line": 372, "column": 34 }, "end": { "line": 372, "column": 40 } }
          ]
        },
        "13": {
          "loc": { "start": { "line": 376, "column": 21 }, "end": { "line": 376, "column": 49 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 376, "column": 33 }, "end": { "line": 376, "column": 39 } },
            { "start": { "line": 376, "column": 42 }, "end": { "line": 376, "column": 49 } }
          ]
        },
        "14": {
          "loc": { "start": { "line": 380, "column": 2 }, "end": { "line": 382, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 380, "column": 2 }, "end": { "line": 382, "column": 3 } }
          ]
        },
        "15": {
          "loc": { "start": { "line": 380, "column": 6 }, "end": { "line": 380, "column": 49 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 380, "column": 6 }, "end": { "line": 380, "column": 16 } },
            { "start": { "line": 380, "column": 20 }, "end": { "line": 380, "column": 49 } }
          ]
        },
        "16": {
          "loc": { "start": { "line": 383, "column": 14 }, "end": { "line": 383, "column": 30 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 383, "column": 14 }, "end": { "line": 383, "column": 24 } },
            { "start": { "line": 383, "column": 28 }, "end": { "line": 383, "column": 30 } }
          ]
        },
        "17": {
          "loc": { "start": { "line": 384, "column": 9 }, "end": { "line": 386, "column": 82 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 385, "column": 6 }, "end": { "line": 385, "column": 89 } },
            { "start": { "line": 386, "column": 6 }, "end": { "line": 386, "column": 82 } }
          ]
        }
      },
      "s": {
        "0": 2,
        "1": 2,
        "2": 2,
        "3": 2,
        "4": 2,
        "5": 2,
        "6": 2,
        "7": 4,
        "8": 3,
        "9": 1,
        "10": 2,
        "11": 2,
        "12": 2,
        "13": 2,
        "14": 2,
        "15": 1,
        "16": 0,
        "17": 1,
        "18": 15,
        "19": 1,
        "20": 2,
        "21": 1,
        "22": 1,
        "23": 1,
        "24": 0,
        "25": 1,
        "26": 1,
        "27": 1,
        "28": 1,
        "29": 1,
        "30": 0,
        "31": 1,
        "32": 2,
        "33": 2,
        "34": 2,
        "35": 2,
        "36": 1,
        "37": 1,
        "38": 1,
        "39": 1,
        "40": 9,
        "41": 9,
        "42": 9,
        "43": 1,
        "44": 9,
        "45": 9,
        "46": 2,
        "47": 29
      },
      "f": { "0": 4, "1": 2, "2": 15, "3": 1, "4": 2, "5": 9, "6": 2, "7": 29 },
      "b": {
        "0": [3, 1],
        "1": [3, 0],
        "2": [0],
        "3": [1],
        "4": [2, 1],
        "5": [1, 0],
        "6": [0],
        "7": [1, 0],
        "8": [0],
        "9": [1, 1],
        "10": [5],
        "11": [8],
        "12": [9, 4],
        "13": [3, 6],
        "14": [1],
        "15": [9, 5],
        "16": [9, 4],
        "17": [1, 8]
      }
    },
    "/Users/sam/code/work/pepr/src/lib/assets/yaml/generateZarfYaml.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/assets/yaml/generateZarfYaml.ts",
      "statementMap": {
        "0": { "start": { "line": 6, "column": 0 }, "end": { "line": 6, "column": 16 } },
        "1": { "start": { "line": 1, "column": 0 }, "end": { "line": 1, "column": 51 } },
        "2": { "start": { "line": 7, "column": 27 }, "end": { "line": 11, "column": 4 } },
        "3": { "start": { "line": 12, "column": 24 }, "end": { "line": 17, "column": 4 } },
        "4": { "start": { "line": 19, "column": 20 }, "end": { "line": 24, "column": 4 } },
        "5": { "start": { "line": 26, "column": 18 }, "end": { "line": 35, "column": 4 } },
        "6": { "start": { "line": 37, "column": 2 }, "end": { "line": 37, "column": 45 } }
      },
      "fnMap": {
        "0": {
          "name": "generateZarfYamlGeneric",
          "decl": { "start": { "line": 6, "column": 16 }, "end": { "line": 6, "column": 39 } },
          "loc": { "start": { "line": 6, "column": 86 }, "end": { "line": 38, "column": 1 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 15, "column": 16 }, "end": { "line": 15, "column": 51 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 15, "column": 16 }, "end": { "line": 15, "column": 40 } },
            { "start": { "line": 15, "column": 44 }, "end": { "line": 15, "column": 51 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 23, "column": 13 }, "end": { "line": 23, "column": 68 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 23, "column": 36 }, "end": { "line": 23, "column": 52 } },
            { "start": { "line": 23, "column": 55 }, "end": { "line": 23, "column": 68 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 32, "column": 18 }, "end": { "line": 32, "column": 53 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 32, "column": 18 }, "end": { "line": 32, "column": 42 } },
            { "start": { "line": 32, "column": 46 }, "end": { "line": 32, "column": 53 } }
          ]
        }
      },
      "s": { "0": 1, "1": 1, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0 },
      "f": { "0": 0 },
      "b": { "0": [0, 0], "1": [0, 0], "2": [0, 0] }
    },
    "/Users/sam/code/work/pepr/src/fixtures/loader.ts": {
      "path": "/Users/sam/code/work/pepr/src/fixtures/loader.ts",
      "statementMap": {
        "0": { "start": { "line": 9, "column": 0 }, "end": { "line": 9, "column": 16 } },
        "1": { "start": { "line": 13, "column": 0 }, "end": { "line": 13, "column": 16 } },
        "2": { "start": { "line": 17, "column": 0 }, "end": { "line": 17, "column": 16 } },
        "3": { "start": { "line": 21, "column": 0 }, "end": { "line": 21, "column": 16 } },
        "4": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 73 } },
        "5": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 73 } },
        "6": { "start": { "line": 6, "column": 0 }, "end": { "line": 6, "column": 89 } },
        "7": { "start": { "line": 7, "column": 0 }, "end": { "line": 7, "column": 87 } },
        "8": { "start": { "line": 10, "column": 2 }, "end": { "line": 10, "column": 72 } },
        "9": { "start": { "line": 14, "column": 2 }, "end": { "line": 14, "column": 58 } },
        "10": { "start": { "line": 18, "column": 2 }, "end": { "line": 18, "column": 58 } },
        "11": { "start": { "line": 22, "column": 2 }, "end": { "line": 22, "column": 74 } },
        "12": { "start": { "line": 27, "column": 2 }, "end": { "line": 27, "column": 64 } }
      },
      "fnMap": {
        "0": {
          "name": "AdmissionRequestCreateDeployment",
          "decl": { "start": { "line": 9, "column": 16 }, "end": { "line": 9, "column": 48 } },
          "loc": { "start": { "line": 9, "column": 48 }, "end": { "line": 11, "column": 1 } }
        },
        "1": {
          "name": "AdmissionRequestCreatePod",
          "decl": { "start": { "line": 13, "column": 16 }, "end": { "line": 13, "column": 41 } },
          "loc": { "start": { "line": 13, "column": 41 }, "end": { "line": 15, "column": 1 } }
        },
        "2": {
          "name": "AdmissionRequestDeletePod",
          "decl": { "start": { "line": 17, "column": 16 }, "end": { "line": 17, "column": 41 } },
          "loc": { "start": { "line": 17, "column": 41 }, "end": { "line": 19, "column": 1 } }
        },
        "3": {
          "name": "AdmissionRequestCreateClusterRole",
          "decl": { "start": { "line": 21, "column": 16 }, "end": { "line": 21, "column": 49 } },
          "loc": { "start": { "line": 21, "column": 49 }, "end": { "line": 23, "column": 1 } }
        },
        "4": {
          "name": "cloneObject",
          "decl": { "start": { "line": 25, "column": 9 }, "end": { "line": 25, "column": 20 } },
          "loc": { "start": { "line": 25, "column": 36 }, "end": { "line": 28, "column": 1 } }
        }
      },
      "branchMap": {},
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 0,
        "9": 18,
        "10": 6,
        "11": 0,
        "12": 24
      },
      "f": { "0": 0, "1": 18, "2": 6, "3": 0, "4": 24 },
      "b": {}
    },
    "/Users/sam/code/work/pepr/src/lib/filter/adjudicators/defaultTestObjects.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/filter/adjudicators/defaultTestObjects.ts",
      "statementMap": {
        "0": { "start": { "line": 1, "column": 0 }, "end": { "line": 1, "column": 84 } },
        "1": { "start": { "line": 2, "column": 0 }, "end": { "line": 2, "column": 47 } },
        "2": { "start": { "line": 5, "column": 13 }, "end": { "line": 13, "column": 2 } },
        "3": { "start": { "line": 15, "column": 50 }, "end": { "line": 18, "column": 2 } },
        "4": { "start": { "line": 20, "column": 13 }, "end": { "line": 30, "column": 2 } },
        "5": { "start": { "line": 32, "column": 13 }, "end": { "line": 40, "column": 2 } },
        "6": { "start": { "line": 42, "column": 13 }, "end": { "line": 46, "column": 2 } }
      },
      "fnMap": {},
      "branchMap": {},
      "s": { "0": 5, "1": 5, "2": 5, "3": 5, "4": 5, "5": 5, "6": 5 },
      "f": {},
      "b": {}
    },
    "/Users/sam/code/work/pepr/src/cli/monitor.ts": {
      "path": "/Users/sam/code/work/pepr/src/cli/monitor.ts",
      "statementMap": {
        "0": { "start": { "line": 25, "column": 0 }, "end": { "line": 25, "column": 25 } },
        "1": { "start": { "line": 60, "column": 0 }, "end": { "line": 60, "column": 16 } },
        "2": { "start": { "line": 78, "column": 0 }, "end": { "line": 78, "column": 16 } },
        "3": { "start": { "line": 117, "column": 0 }, "end": { "line": 117, "column": 16 } },
        "4": { "start": { "line": 131, "column": 0 }, "end": { "line": 131, "column": 16 } },
        "5": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 90 } },
        "6": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 53 } },
        "7": { "start": { "line": 6, "column": 0 }, "end": { "line": 6, "column": 28 } },
        "8": { "start": { "line": 26, "column": 2 }, "end": { "line": 57, "column": 7 } },
        "9": { "start": { "line": 30, "column": 39 }, "end": { "line": 30, "column": 69 } },
        "10": { "start": { "line": 33, "column": 51 }, "end": { "line": 36, "column": 14 } },
        "11": { "start": { "line": 39, "column": 33 }, "end": { "line": 39, "column": 84 } },
        "12": { "start": { "line": 39, "column": 59 }, "end": { "line": 39, "column": 83 } },
        "13": { "start": { "line": 41, "column": 6 }, "end": { "line": 44, "column": 7 } },
        "14": { "start": { "line": 42, "column": 8 }, "end": { "line": 42, "column": 36 } },
        "15": { "start": { "line": 43, "column": 8 }, "end": { "line": 43, "column": 24 } },
        "16": { "start": { "line": 46, "column": 18 }, "end": { "line": 46, "column": 43 } },
        "17": { "start": { "line": 48, "column": 24 }, "end": { "line": 48, "column": 41 } },
        "18": { "start": { "line": 50, "column": 6 }, "end": { "line": 56, "column": 7 } },
        "19": { "start": { "line": 51, "column": 8 }, "end": { "line": 55, "column": 11 } },
        "20": { "start": { "line": 67, "column": 2 }, "end": { "line": 73, "column": 3 } },
        "21": { "start": { "line": 68, "column": 4 }, "end": { "line": 68, "column": 50 } },
        "22": { "start": { "line": 69, "column": 4 }, "end": { "line": 69, "column": 57 } },
        "23": { "start": { "line": 71, "column": 4 }, "end": { "line": 71, "column": 37 } },
        "24": { "start": { "line": 72, "column": 4 }, "end": { "line": 72, "column": 54 } },
        "25": { "start": { "line": 75, "column": 2 }, "end": { "line": 75, "column": 34 } },
        "26": { "start": { "line": 79, "column": 13 }, "end": { "line": 79, "column": 29 } },
        "27": { "start": { "line": 80, "column": 2 }, "end": { "line": 80, "column": 23 } },
        "28": { "start": { "line": 81, "column": 2 }, "end": { "line": 81, "column": 24 } },
        "29": { "start": { "line": 85, "column": 20 }, "end": { "line": 85, "column": 44 } },
        "30": { "start": { "line": 87, "column": 2 }, "end": { "line": 95, "column": 5 } },
        "31": { "start": { "line": 88, "column": 18 }, "end": { "line": 88, "column": 46 } },
        "32": { "start": { "line": 89, "column": 20 }, "end": { "line": 89, "column": 44 } },
        "33": { "start": { "line": 91, "column": 4 }, "end": { "line": 94, "column": 5 } },
        "34": { "start": { "line": 92, "column": 6 }, "end": { "line": 92, "column": 44 } },
        "35": { "start": { "line": 92, "column": 35 }, "end": { "line": 92, "column": 44 } },
        "36": { "start": { "line": 93, "column": 6 }, "end": { "line": 93, "column": 27 } },
        "37": { "start": { "line": 97, "column": 2 }, "end": { "line": 97, "column": 19 } },
        "38": { "start": { "line": 101, "column": 2 }, "end": { "line": 114, "column": 3 } },
        "39": { "start": { "line": 102, "column": 32 }, "end": { "line": 102, "column": 55 } },
        "40": { "start": { "line": 103, "column": 21 }, "end": { "line": 103, "column": 66 } },
        "41": { "start": { "line": 104, "column": 17 }, "end": { "line": 104, "column": 54 } },
        "42": { "start": { "line": 105, "column": 16 }, "end": { "line": 105, "column": 31 } },
        "43": { "start": { "line": 107, "column": 4 }, "end": { "line": 111, "column": 5 } },
        "44": { "start": { "line": 108, "column": 6 }, "end": { "line": 108, "column": 43 } },
        "45": { "start": { "line": 110, "column": 6 }, "end": { "line": 110, "column": 45 } },
        "46": { "start": { "line": 119, "column": 4 }, "end": { "line": 119, "column": 96 } },
        "47": { "start": { "line": 121, "column": 16 }, "end": { "line": 121, "column": 84 } },
        "48": { "start": { "line": 122, "column": 20 }, "end": { "line": 122, "column": 71 } },
        "49": { "start": { "line": 123, "column": 22 }, "end": { "line": 123, "column": 55 } },
        "50": { "start": { "line": 125, "column": 2 }, "end": { "line": 125, "column": 63 } },
        "51": { "start": { "line": 126, "column": 2 }, "end": { "line": 128, "column": 3 } },
        "52": { "start": { "line": 127, "column": 4 }, "end": { "line": 127, "column": 51 } },
        "53": { "start": { "line": 132, "column": 19 }, "end": { "line": 132, "column": 75 } },
        "54": { "start": { "line": 134, "column": 27 }, "end": { "line": 136, "column": 54 } },
        "55": { "start": { "line": 135, "column": 33 }, "end": { "line": 135, "column": 43 } },
        "56": { "start": { "line": 136, "column": 30 }, "end": { "line": 136, "column": 53 } },
        "57": { "start": { "line": 138, "column": 2 }, "end": { "line": 138, "column": 91 } },
        "58": { "start": { "line": 139, "column": 2 }, "end": { "line": 141, "column": 3 } },
        "59": { "start": { "line": 140, "column": 4 }, "end": { "line": 140, "column": 60 } }
      },
      "fnMap": {
        "0": {
          "name": "default_1",
          "decl": { "start": { "line": 25, "column": 0 }, "end": { "line": 25, "column": 25 } },
          "loc": { "start": { "line": 25, "column": 41 }, "end": { "line": 58, "column": 1 } }
        },
        "1": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 29, "column": 12 }, "end": { "line": 29, "column": 17 } },
          "loc": { "start": { "line": 29, "column": 25 }, "end": { "line": 57, "column": 5 } }
        },
        "2": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 39, "column": 52 }, "end": { "line": 39, "column": 55 } },
          "loc": { "start": { "line": 39, "column": 59 }, "end": { "line": 39, "column": 83 } }
        },
        "3": {
          "name": "getLabelsAndErrorMessage",
          "decl": { "start": { "line": 60, "column": 16 }, "end": { "line": 60, "column": 40 } },
          "loc": { "start": { "line": 60, "column": 54 }, "end": { "line": 76, "column": 1 } }
        },
        "4": {
          "name": "getK8sLogFromKubeConfig",
          "decl": { "start": { "line": 78, "column": 16 }, "end": { "line": 78, "column": 39 } },
          "loc": { "start": { "line": 78, "column": 39 }, "end": { "line": 82, "column": 1 } }
        },
        "5": {
          "name": "createLogStream",
          "decl": { "start": { "line": 84, "column": 9 }, "end": { "line": 84, "column": 24 } },
          "loc": { "start": { "line": 84, "column": 24 }, "end": { "line": 98, "column": 1 } }
        },
        "6": {
          "name": "(anonymous_7)",
          "decl": { "start": { "line": 87, "column": 23 }, "end": { "line": 87, "column": 28 } },
          "loc": { "start": { "line": 87, "column": 37 }, "end": { "line": 95, "column": 3 } }
        },
        "7": {
          "name": "processLogLine",
          "decl": { "start": { "line": 100, "column": 9 }, "end": { "line": 100, "column": 23 } },
          "loc": { "start": { "line": 100, "column": 36 }, "end": { "line": 115, "column": 1 } }
        },
        "8": {
          "name": "processMutateLog",
          "decl": { "start": { "line": 117, "column": 16 }, "end": { "line": 117, "column": 32 } },
          "loc": { "start": { "line": 117, "column": 79 }, "end": { "line": 129, "column": 1 } }
        },
        "9": {
          "name": "processValidateLog",
          "decl": { "start": { "line": 131, "column": 16 }, "end": { "line": 131, "column": 34 } },
          "loc": { "start": { "line": 131, "column": 81 }, "end": { "line": 142, "column": 1 } }
        },
        "10": {
          "name": "(anonymous_11)",
          "decl": { "start": { "line": 135, "column": 12 }, "end": { "line": 135, "column": 13 } },
          "loc": { "start": { "line": 135, "column": 33 }, "end": { "line": 135, "column": 43 } }
        },
        "11": {
          "name": "(anonymous_12)",
          "decl": { "start": { "line": 136, "column": 9 }, "end": { "line": 136, "column": 10 } },
          "loc": { "start": { "line": 136, "column": 30 }, "end": { "line": 136, "column": 53 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 39, "column": 59 }, "end": { "line": 39, "column": 83 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 39, "column": 59 }, "end": { "line": 39, "column": 77 } },
            { "start": { "line": 39, "column": 81 }, "end": { "line": 39, "column": 83 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 41, "column": 6 }, "end": { "line": 44, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 41, "column": 6 }, "end": { "line": 44, "column": 7 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 67, "column": 2 }, "end": { "line": 73, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 67, "column": 2 }, "end": { "line": 73, "column": 3 } },
            { "start": { "line": 70, "column": 9 }, "end": { "line": 73, "column": 3 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 92, "column": 6 }, "end": { "line": 92, "column": 44 } },
          "type": "if",
          "locations": [
            { "start": { "line": 92, "column": 6 }, "end": { "line": 92, "column": 44 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 103, "column": 21 }, "end": { "line": 103, "column": 66 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 103, "column": 21 }, "end": { "line": 103, "column": 42 } },
            { "start": { "line": 103, "column": 46 }, "end": { "line": 103, "column": 66 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 107, "column": 4 }, "end": { "line": 111, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 107, "column": 4 }, "end": { "line": 111, "column": 5 } },
            { "start": { "line": 109, "column": 11 }, "end": { "line": 111, "column": 5 } }
          ]
        },
        "6": {
          "loc": { "start": { "line": 119, "column": 4 }, "end": { "line": 119, "column": 96 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 119, "column": 68 }, "end": { "line": 119, "column": 91 } },
            { "start": { "line": 119, "column": 94 }, "end": { "line": 119, "column": 96 } }
          ]
        },
        "7": {
          "loc": { "start": { "line": 119, "column": 4 }, "end": { "line": 119, "column": 65 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 119, "column": 4 }, "end": { "line": 119, "column": 35 } },
            { "start": { "line": 119, "column": 39 }, "end": { "line": 119, "column": 65 } }
          ]
        },
        "8": {
          "loc": { "start": { "line": 121, "column": 16 }, "end": { "line": 121, "column": 84 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 121, "column": 16 }, "end": { "line": 121, "column": 33 } },
            { "start": { "line": 121, "column": 37 }, "end": { "line": 121, "column": 84 } }
          ]
        },
        "9": {
          "loc": { "start": { "line": 122, "column": 20 }, "end": { "line": 122, "column": 71 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 122, "column": 20 }, "end": { "line": 122, "column": 41 } },
            { "start": { "line": 122, "column": 45 }, "end": { "line": 122, "column": 65 } },
            { "start": { "line": 122, "column": 69 }, "end": { "line": 122, "column": 71 } }
          ]
        },
        "10": {
          "loc": { "start": { "line": 123, "column": 22 }, "end": { "line": 123, "column": 55 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 123, "column": 44 }, "end": { "line": 123, "column": 48 } },
            { "start": { "line": 123, "column": 51 }, "end": { "line": 123, "column": 55 } }
          ]
        },
        "11": {
          "loc": { "start": { "line": 126, "column": 2 }, "end": { "line": 128, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 126, "column": 2 }, "end": { "line": 128, "column": 3 } }
          ]
        },
        "12": {
          "loc": { "start": { "line": 132, "column": 19 }, "end": { "line": 132, "column": 75 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 132, "column": 48 }, "end": { "line": 132, "column": 59 } },
            { "start": { "line": 132, "column": 62 }, "end": { "line": 132, "column": 75 } }
          ]
        },
        "13": {
          "loc": { "start": { "line": 136, "column": 30 }, "end": { "line": 136, "column": 53 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 136, "column": 30 }, "end": { "line": 136, "column": 47 } },
            { "start": { "line": 136, "column": 51 }, "end": { "line": 136, "column": 53 } }
          ]
        },
        "14": {
          "loc": { "start": { "line": 138, "column": 19 }, "end": { "line": 138, "column": 58 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 138, "column": 49 }, "end": { "line": 138, "column": 52 } },
            { "start": { "line": 138, "column": 55 }, "end": { "line": 138, "column": 58 } }
          ]
        },
        "15": {
          "loc": { "start": { "line": 139, "column": 2 }, "end": { "line": 141, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 139, "column": 2 }, "end": { "line": 141, "column": 3 } }
          ]
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 5,
        "21": 1,
        "22": 1,
        "23": 4,
        "24": 4,
        "25": 5,
        "26": 1,
        "27": 1,
        "28": 1,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 2,
        "47": 2,
        "48": 2,
        "49": 2,
        "50": 2,
        "51": 2,
        "52": 2,
        "53": 2,
        "54": 2,
        "55": 2,
        "56": 1,
        "57": 2,
        "58": 2,
        "59": 1
      },
      "f": {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 5,
        "4": 1,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 2,
        "9": 2,
        "10": 2,
        "11": 1
      },
      "b": {
        "0": [0, 0],
        "1": [0],
        "2": [1, 4],
        "3": [0],
        "4": [0, 0],
        "5": [0, 0],
        "6": [2, 0],
        "7": [2, 2],
        "8": [2, 2],
        "9": [2, 0, 0],
        "10": [1, 1],
        "11": [2],
        "12": [0, 2],
        "13": [1, 0],
        "14": [1, 1],
        "15": [1]
      }
    },
    "/Users/sam/code/work/pepr/src/lib/assets/index.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/assets/index.ts",
      "statementMap": {
        "0": { "start": { "line": 11, "column": 0 }, "end": { "line": 11, "column": 16 } },
        "1": { "start": { "line": 16, "column": 0 }, "end": { "line": 16, "column": 16 } },
        "2": { "start": { "line": 56, "column": 0 }, "end": { "line": 56, "column": 16 } },
        "3": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 51 } },
        "4": { "start": { "line": 6, "column": 0 }, "end": { "line": 6, "column": 43 } },
        "5": { "start": { "line": 7, "column": 0 }, "end": { "line": 7, "column": 31 } },
        "6": { "start": { "line": 12, "column": 2 }, "end": { "line": 12, "column": 41 } },
        "7": { "start": { "line": 21, "column": 15 }, "end": { "line": 21, "column": 43 } },
        "8": { "start": { "line": 22, "column": 23 }, "end": { "line": 51, "column": 4 } },
        "9": { "start": { "line": 53, "column": 2 }, "end": { "line": 53, "column": 118 } },
        "10": { "start": { "line": 53, "column": 67 }, "end": { "line": 53, "column": 110 } },
        "11": { "start": { "line": 57, "column": 55 }, "end": { "line": 62, "column": 4 } },
        "12": { "start": { "line": 64, "column": 2 }, "end": { "line": 68, "column": 4 } },
        "13": { "start": { "line": 70, "column": 2 }, "end": { "line": 91, "column": 4 } },
        "14": { "start": { "line": 93, "column": 2 }, "end": { "line": 93, "column": 14 } }
      },
      "fnMap": {
        "0": {
          "name": "toYaml",
          "decl": { "start": { "line": 11, "column": 16 }, "end": { "line": 11, "column": 22 } },
          "loc": { "start": { "line": 11, "column": 31 }, "end": { "line": 13, "column": 1 } }
        },
        "1": {
          "name": "createWebhookYaml",
          "decl": { "start": { "line": 16, "column": 16 }, "end": { "line": 16, "column": 33 } },
          "loc": { "start": { "line": 19, "column": 95 }, "end": { "line": 54, "column": 1 } }
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 53, "column": 29 }, "end": { "line": 53, "column": 30 } },
          "loc": { "start": { "line": 53, "column": 67 }, "end": { "line": 53, "column": 110 } }
        },
        "3": {
          "name": "helmLayout",
          "decl": { "start": { "line": 56, "column": 16 }, "end": { "line": 56, "column": 26 } },
          "loc": { "start": { "line": 56, "column": 59 }, "end": { "line": 94, "column": 1 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 25, "column": 14 }, "end": { "line": 25, "column": 61 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 25, "column": 44 }, "end": { "line": 25, "column": 50 } },
            { "start": { "line": 25, "column": 53 }, "end": { "line": 25, "column": 61 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 29, "column": 14 }, "end": { "line": 29, "column": 48 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 29, "column": 14 }, "end": { "line": 29, "column": 40 } },
            { "start": { "line": 29, "column": 44 }, "end": { "line": 29, "column": 48 } }
          ]
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 4,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0
      },
      "f": { "0": 1, "1": 1, "2": 4, "3": 0 },
      "b": { "0": [1, 0], "1": [1, 0] }
    },
    "/Users/sam/code/work/pepr/hack/load.lib.ts": {
      "path": "/Users/sam/code/work/pepr/hack/load.lib.ts",
      "statementMap": {
        "0": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 16 } },
        "1": { "start": { "line": 48, "column": 0 }, "end": { "line": 48, "column": 16 } },
        "2": { "start": { "line": 117, "column": 0 }, "end": { "line": 117, "column": 16 } },
        "3": { "start": { "line": 206, "column": 0 }, "end": { "line": 206, "column": 16 } },
        "4": { "start": { "line": 254, "column": 0 }, "end": { "line": 254, "column": 16 } },
        "5": { "start": { "line": 299, "column": 0 }, "end": { "line": 299, "column": 16 } },
        "6": { "start": { "line": 5, "column": 40 }, "end": { "line": 5, "column": 42 } },
        "7": { "start": { "line": 6, "column": 2 }, "end": { "line": 6, "column": 15 } },
        "8": { "start": { "line": 7, "column": 2 }, "end": { "line": 7, "column": 28 } },
        "9": { "start": { "line": 8, "column": 2 }, "end": { "line": 8, "column": 25 } },
        "10": { "start": { "line": 9, "column": 2 }, "end": { "line": 9, "column": 25 } },
        "11": { "start": { "line": 10, "column": 2 }, "end": { "line": 10, "column": 25 } },
        "12": { "start": { "line": 11, "column": 2 }, "end": { "line": 11, "column": 24 } },
        "13": { "start": { "line": 12, "column": 2 }, "end": { "line": 12, "column": 26 } },
        "14": { "start": { "line": 13, "column": 2 }, "end": { "line": 13, "column": 26 } },
        "15": { "start": { "line": 15, "column": 15 }, "end": { "line": 15, "column": 49 } },
        "16": { "start": { "line": 15, "column": 40 }, "end": { "line": 15, "column": 48 } },
        "17": { "start": { "line": 17, "column": 25 }, "end": { "line": 17, "column": 27 } },
        "18": { "start": { "line": 18, "column": 2 }, "end": { "line": 22, "column": 5 } },
        "19": { "start": { "line": 19, "column": 17 }, "end": { "line": 19, "column": 40 } },
        "20": { "start": { "line": 20, "column": 21 }, "end": { "line": 20, "column": 90 } },
        "21": { "start": { "line": 20, "column": 53 }, "end": { "line": 20, "column": 90 } },
        "22": { "start": { "line": 21, "column": 4 }, "end": { "line": 21, "column": 86 } },
        "23": { "start": { "line": 24, "column": 14 }, "end": { "line": 26, "column": null } },
        "24": { "start": { "line": 25, "column": 29 }, "end": { "line": 25, "column": 85 } },
        "25": { "start": { "line": 29, "column": 15 }, "end": { "line": 41, "column": 4 } },
        "26": { "start": { "line": 30, "column": 20 }, "end": { "line": 30, "column": 33 } },
        "27": { "start": { "line": 31, "column": 4 }, "end": { "line": 33, "column": 5 } },
        "28": { "start": { "line": 32, "column": 6 }, "end": { "line": 32, "column": 73 } },
        "29": { "start": { "line": 35, "column": 21 }, "end": { "line": 35, "column": 39 } },
        "30": { "start": { "line": 36, "column": 4 }, "end": { "line": 38, "column": 5 } },
        "31": { "start": { "line": 37, "column": 6 }, "end": { "line": 37, "column": 72 } },
        "32": { "start": { "line": 40, "column": 4 }, "end": { "line": 40, "column": 29 } },
        "33": { "start": { "line": 43, "column": 21 }, "end": { "line": 43, "column": 92 } },
        "34": { "start": { "line": 43, "column": 65 }, "end": { "line": 43, "column": 88 } },
        "35": { "start": { "line": 45, "column": 2 }, "end": { "line": 45, "column": 22 } },
        "36": { "start": { "line": 49, "column": 40 }, "end": { "line": 49, "column": 42 } },
        "37": { "start": { "line": 50, "column": 2 }, "end": { "line": 50, "column": 15 } },
        "38": { "start": { "line": 51, "column": 2 }, "end": { "line": 51, "column": 28 } },
        "39": { "start": { "line": 52, "column": 2 }, "end": { "line": 52, "column": 25 } },
        "40": { "start": { "line": 53, "column": 2 }, "end": { "line": 53, "column": 25 } },
        "41": { "start": { "line": 54, "column": 2 }, "end": { "line": 54, "column": 25 } },
        "42": { "start": { "line": 55, "column": 2 }, "end": { "line": 55, "column": 24 } },
        "43": { "start": { "line": 56, "column": 2 }, "end": { "line": 56, "column": 26 } },
        "44": { "start": { "line": 57, "column": 2 }, "end": { "line": 57, "column": 26 } },
        "45": { "start": { "line": 59, "column": 10 }, "end": { "line": 59, "column": 11 } },
        "46": { "start": { "line": 60, "column": 11 }, "end": { "line": 60, "column": 12 } },
        "47": { "start": { "line": 61, "column": 10 }, "end": { "line": 61, "column": 11 } },
        "48": { "start": { "line": 62, "column": 10 }, "end": { "line": 62, "column": 11 } },
        "49": { "start": { "line": 63, "column": 10 }, "end": { "line": 63, "column": 11 } },
        "50": { "start": { "line": 64, "column": 10 }, "end": { "line": 64, "column": 11 } },
        "51": { "start": { "line": 65, "column": 10 }, "end": { "line": 65, "column": 11 } },
        "52": { "start": { "line": 66, "column": 15 }, "end": { "line": 66, "column": 17 } },
        "53": { "start": { "line": 68, "column": 2 }, "end": { "line": 71, "column": 3 } },
        "54": { "start": { "line": 69, "column": 4 }, "end": { "line": 69, "column": 22 } },
        "55": { "start": { "line": 70, "column": 4 }, "end": { "line": 70, "column": 11 } },
        "56": { "start": { "line": 72, "column": 2 }, "end": { "line": 75, "column": 3 } },
        "57": { "start": { "line": 73, "column": 4 }, "end": { "line": 73, "column": 23 } },
        "58": { "start": { "line": 74, "column": 4 }, "end": { "line": 74, "column": 12 } },
        "59": { "start": { "line": 76, "column": 2 }, "end": { "line": 79, "column": 3 } },
        "60": { "start": { "line": 77, "column": 4 }, "end": { "line": 77, "column": 22 } },
        "61": { "start": { "line": 78, "column": 4 }, "end": { "line": 78, "column": 11 } },
        "62": { "start": { "line": 80, "column": 2 }, "end": { "line": 83, "column": 3 } },
        "63": { "start": { "line": 81, "column": 4 }, "end": { "line": 81, "column": 22 } },
        "64": { "start": { "line": 82, "column": 4 }, "end": { "line": 82, "column": 11 } },
        "65": { "start": { "line": 84, "column": 2 }, "end": { "line": 87, "column": 3 } },
        "66": { "start": { "line": 85, "column": 4 }, "end": { "line": 85, "column": 22 } },
        "67": { "start": { "line": 86, "column": 4 }, "end": { "line": 86, "column": 11 } },
        "68": { "start": { "line": 88, "column": 2 }, "end": { "line": 91, "column": 3 } },
        "69": { "start": { "line": 89, "column": 4 }, "end": { "line": 89, "column": 22 } },
        "70": { "start": { "line": 90, "column": 4 }, "end": { "line": 90, "column": 11 } },
        "71": { "start": { "line": 92, "column": 2 }, "end": { "line": 95, "column": 3 } },
        "72": { "start": { "line": 93, "column": 4 }, "end": { "line": 93, "column": 22 } },
        "73": { "start": { "line": 94, "column": 4 }, "end": { "line": 94, "column": 11 } },
        "74": { "start": { "line": 97, "column": 15 }, "end": { "line": 97, "column": 17 } },
        "75": { "start": { "line": 98, "column": 2 }, "end": { "line": 98, "column": 45 } },
        "76": { "start": { "line": 99, "column": 2 }, "end": { "line": 99, "column": 48 } },
        "77": { "start": { "line": 100, "column": 2 }, "end": { "line": 100, "column": 45 } },
        "78": { "start": { "line": 101, "column": 2 }, "end": { "line": 101, "column": 45 } },
        "79": { "start": { "line": 102, "column": 2 }, "end": { "line": 102, "column": 45 } },
        "80": { "start": { "line": 103, "column": 2 }, "end": { "line": 103, "column": 45 } },
        "81": { "start": { "line": 104, "column": 2 }, "end": { "line": 104, "column": 45 } },
        "82": { "start": { "line": 105, "column": 2 }, "end": { "line": 105, "column": 56 } },
        "83": { "start": { "line": 107, "column": 2 }, "end": { "line": 107, "column": 16 } },
        "84": { "start": { "line": 130, "column": 17 }, "end": { "line": 130, "column": 33 } },
        "85": { "start": { "line": 131, "column": 22 }, "end": { "line": 131, "column": 43 } },
        "86": { "start": { "line": 132, "column": 22 }, "end": { "line": 132, "column": 51 } },
        "87": { "start": { "line": 134, "column": 15 }, "end": { "line": 134, "column": 87 } },
        "88": { "start": { "line": 136, "column": 17 }, "end": { "line": 137, "column": 32 } },
        "89": { "start": { "line": 137, "column": 4 }, "end": { "line": 137, "column": 32 } },
        "90": { "start": { "line": 139, "column": 15 }, "end": { "line": 155, "column": 3 } },
        "91": { "start": { "line": 140, "column": 4 }, "end": { "line": 154, "column": 5 } },
        "92": { "start": { "line": 142, "column": 8 }, "end": { "line": 142, "column": 27 } },
        "93": { "start": { "line": 145, "column": 8 }, "end": { "line": 145, "column": 27 } },
        "94": { "start": { "line": 148, "column": 8 }, "end": { "line": 150, "column": 23 } },
        "95": { "start": { "line": 153, "column": 8 }, "end": { "line": 153, "column": 38 } },
        "96": { "start": { "line": 157, "column": 15 }, "end": { "line": 173, "column": 3 } },
        "97": { "start": { "line": 158, "column": 4 }, "end": { "line": 172, "column": 5 } },
        "98": { "start": { "line": 160, "column": 8 }, "end": { "line": 160, "column": 27 } },
        "99": { "start": { "line": 163, "column": 8 }, "end": { "line": 163, "column": 27 } },
        "100": { "start": { "line": 166, "column": 8 }, "end": { "line": 168, "column": 24 } },
        "101": { "start": { "line": 171, "column": 8 }, "end": { "line": 171, "column": 38 } },
        "102": { "start": { "line": 175, "column": 22 }, "end": { "line": 175, "column": 65 } },
        "103": { "start": { "line": 177, "column": 18 }, "end": { "line": 177, "column": 39 } },
        "104": { "start": { "line": 178, "column": 23 }, "end": { "line": 201, "column": 4 } },
        "105": { "start": { "line": 179, "column": 22 }, "end": { "line": 179, "column": 51 } },
        "106": { "start": { "line": 180, "column": 22 }, "end": { "line": 180, "column": 67 } },
        "107": { "start": { "line": 181, "column": 20 }, "end": { "line": 181, "column": 43 } },
        "108": { "start": { "line": 182, "column": 18 }, "end": { "line": 182, "column": 75 } },
        "109": { "start": { "line": 183, "column": 16 }, "end": { "line": 183, "column": 55 } },
        "110": { "start": { "line": 184, "column": 16 }, "end": { "line": 184, "column": 55 } },
        "111": { "start": { "line": 186, "column": 14 }, "end": { "line": 186, "column": 25 } },
        "112": { "start": { "line": 188, "column": 25 }, "end": { "line": 188, "column": 66 } },
        "113": { "start": { "line": 189, "column": 4 }, "end": { "line": 189, "column": 69 } },
        "114": { "start": { "line": 191, "column": 4 }, "end": { "line": 191, "column": 58 } },
        "115": { "start": { "line": 192, "column": 4 }, "end": { "line": 192, "column": 65 } },
        "116": { "start": { "line": 194, "column": 4 }, "end": { "line": 194, "column": 57 } },
        "117": { "start": { "line": 195, "column": 4 }, "end": { "line": 195, "column": 61 } },
        "118": { "start": { "line": 197, "column": 4 }, "end": { "line": 197, "column": 57 } },
        "119": { "start": { "line": 198, "column": 4 }, "end": { "line": 198, "column": 61 } },
        "120": { "start": { "line": 200, "column": 4 }, "end": { "line": 200, "column": 15 } },
        "121": { "start": { "line": 203, "column": 2 }, "end": { "line": 203, "column": 14 } },
        "122": { "start": { "line": 207, "column": 16 }, "end": { "line": 207, "column": 47 } },
        "123": { "start": { "line": 207, "column": 45 }, "end": { "line": 207, "column": 46 } },
        "124": { "start": { "line": 208, "column": 75 }, "end": { "line": 208, "column": 77 } },
        "125": { "start": { "line": 209, "column": 2 }, "end": { "line": 250, "column": 3 } },
        "126": { "start": { "line": 210, "column": 23 }, "end": { "line": 210, "column": 58 } },
        "127": { "start": { "line": 210, "column": 49 }, "end": { "line": 210, "column": 57 } },
        "128": { "start": { "line": 211, "column": 18 }, "end": { "line": 211, "column": 28 } },
        "129": { "start": { "line": 212, "column": 29 }, "end": { "line": 212, "column": 65 } },
        "130": { "start": { "line": 212, "column": 56 }, "end": { "line": 212, "column": 64 } },
        "131": { "start": { "line": 214, "column": 21 }, "end": { "line": 218, "column": 5 } },
        "132": { "start": { "line": 215, "column": 18 }, "end": { "line": 215, "column": 54 } },
        "133": { "start": { "line": 216, "column": 19 }, "end": { "line": 216, "column": 50 } },
        "134": { "start": { "line": 217, "column": 6 }, "end": { "line": 217, "column": 25 } },
        "135": { "start": { "line": 219, "column": 20 }, "end": { "line": 243, "column": 5 } },
        "136": { "start": { "line": 221, "column": 18 }, "end": { "line": 221, "column": 19 } },
        "137": { "start": { "line": 222, "column": 6 }, "end": { "line": 241, "column": 7 } },
        "138": { "start": { "line": 224, "column": 10 }, "end": { "line": 224, "column": 34 } },
        "139": { "start": { "line": 225, "column": 10 }, "end": { "line": 225, "column": 16 } },
        "140": { "start": { "line": 227, "column": 10 }, "end": { "line": 227, "column": 34 } },
        "141": { "start": { "line": 228, "column": 10 }, "end": { "line": 228, "column": 16 } },
        "142": { "start": { "line": 230, "column": 10 }, "end": { "line": 230, "column": 34 } },
        "143": { "start": { "line": 231, "column": 10 }, "end": { "line": 231, "column": 16 } },
        "144": { "start": { "line": 233, "column": 10 }, "end": { "line": 233, "column": 34 } },
        "145": { "start": { "line": 234, "column": 10 }, "end": { "line": 234, "column": 16 } },
        "146": { "start": { "line": 236, "column": 10 }, "end": { "line": 236, "column": 34 } },
        "147": { "start": { "line": 237, "column": 10 }, "end": { "line": 237, "column": 16 } },
        "148": { "start": { "line": 239, "column": 10 }, "end": { "line": 239, "column": 34 } },
        "149": { "start": { "line": 240, "column": 10 }, "end": { "line": 240, "column": 16 } },
        "150": { "start": { "line": 242, "column": 6 }, "end": { "line": 242, "column": 26 } },
        "151": { "start": { "line": 244, "column": 30 }, "end": { "line": 244, "column": 43 } },
        "152": { "start": { "line": 245, "column": 30 }, "end": { "line": 245, "column": 52 } },
        "153": { "start": { "line": 247, "column": 4 }, "end": { "line": 249, "column": 69 } },
        "154": { "start": { "line": 251, "column": 2 }, "end": { "line": 251, "column": 16 } },
        "155": { "start": { "line": 255, "column": 16 }, "end": { "line": 255, "column": 47 } },
        "156": { "start": { "line": 255, "column": 45 }, "end": { "line": 255, "column": 46 } },
        "157": { "start": { "line": 257, "column": 52 }, "end": { "line": 257, "column": 77 } },
        "158": { "start": { "line": 258, "column": 2 }, "end": { "line": 258, "column": 57 } },
        "159": { "start": { "line": 260, "column": 2 }, "end": { "line": 264, "column": 3 } },
        "160": { "start": { "line": 261, "column": 15 }, "end": { "line": 261, "column": 45 } },
        "161": { "start": { "line": 262, "column": 18 }, "end": { "line": 262, "column": 28 } },
        "162": { "start": { "line": 263, "column": 4 }, "end": { "line": 263, "column": 31 } },
        "163": { "start": { "line": 266, "column": 2 }, "end": { "line": 266, "column": 16 } },
        "164": { "start": { "line": 300, "column": 12 }, "end": { "line": 311, "column": 4 } },
        "165": { "start": { "line": 302, "column": 32 }, "end": { "line": 302, "column": 34 } },
        "166": { "start": { "line": 303, "column": 4 }, "end": { "line": 309, "column": 5 } },
        "167": { "start": { "line": 303, "column": 17 }, "end": { "line": 303, "column": 20 } },
        "168": { "start": { "line": 304, "column": 24 }, "end": { "line": 304, "column": 30 } },
        "169": { "start": { "line": 305, "column": 6 }, "end": { "line": 307, "column": 7 } },
        "170": { "start": { "line": 306, "column": 8 }, "end": { "line": 306, "column": 14 } },
        "171": { "start": { "line": 308, "column": 6 }, "end": { "line": 308, "column": 32 } },
        "172": { "start": { "line": 310, "column": 4 }, "end": { "line": 310, "column": 35 } },
        "173": { "start": { "line": 313, "column": 2 }, "end": { "line": 313, "column": 13 } }
      },
      "fnMap": {
        "0": {
          "name": "toMs",
          "decl": { "start": { "line": 4, "column": 16 }, "end": { "line": 4, "column": 20 } },
          "loc": { "start": { "line": 4, "column": 34 }, "end": { "line": 46, "column": 1 } }
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 15, "column": 35 }, "end": { "line": 15, "column": 36 } },
          "loc": { "start": { "line": 15, "column": 40 }, "end": { "line": 15, "column": 48 } }
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 18, "column": 17 }, "end": { "line": 18, "column": 21 } },
          "loc": { "start": { "line": 18, "column": 24 }, "end": { "line": 22, "column": 3 } }
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 20, "column": 21 }, "end": { "line": 20, "column": 22 } },
          "loc": { "start": { "line": 20, "column": 53 }, "end": { "line": 20, "column": 90 } }
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 25, "column": 4 }, "end": { "line": 25, "column": 5 } },
          "loc": { "start": { "line": 25, "column": 29 }, "end": { "line": 25, "column": 85 } }
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 29, "column": 43 }, "end": { "line": 29, "column": 44 } },
          "loc": { "start": { "line": 29, "column": 59 }, "end": { "line": 41, "column": 3 } }
        },
        "6": {
          "name": "(anonymous_6)",
          "decl": { "start": { "line": 43, "column": 43 }, "end": { "line": 43, "column": 44 } },
          "loc": { "start": { "line": 43, "column": 65 }, "end": { "line": 43, "column": 88 } }
        },
        "7": {
          "name": "toHuman",
          "decl": { "start": { "line": 48, "column": 16 }, "end": { "line": 48, "column": 23 } },
          "loc": { "start": { "line": 48, "column": 34 }, "end": { "line": 108, "column": 1 } }
        },
        "8": {
          "name": "generateAudienceData",
          "decl": { "start": { "line": 117, "column": 16 }, "end": { "line": 117, "column": 36 } },
          "loc": { "start": { "line": 128, "column": 3 }, "end": { "line": 204, "column": 1 } }
        },
        "9": {
          "name": "(anonymous_9)",
          "decl": { "start": { "line": 136, "column": 17 }, "end": { "line": 136, "column": 18 } },
          "loc": { "start": { "line": 137, "column": 4 }, "end": { "line": 137, "column": 32 } }
        },
        "10": {
          "name": "(anonymous_10)",
          "decl": { "start": { "line": 139, "column": 15 }, "end": { "line": 139, "column": 16 } },
          "loc": { "start": { "line": 139, "column": 58 }, "end": { "line": 155, "column": 3 } }
        },
        "11": {
          "name": "(anonymous_11)",
          "decl": { "start": { "line": 157, "column": 15 }, "end": { "line": 157, "column": 16 } },
          "loc": { "start": { "line": 157, "column": 58 }, "end": { "line": 173, "column": 3 } }
        },
        "12": {
          "name": "(anonymous_12)",
          "decl": { "start": { "line": 178, "column": 55 }, "end": { "line": 178, "column": 56 } },
          "loc": { "start": { "line": 178, "column": 68 }, "end": { "line": 201, "column": 3 } }
        },
        "13": {
          "name": "parseAudienceData",
          "decl": { "start": { "line": 206, "column": 16 }, "end": { "line": 206, "column": 33 } },
          "loc": { "start": { "line": 206, "column": 46 }, "end": { "line": 252, "column": 1 } }
        },
        "14": {
          "name": "(anonymous_14)",
          "decl": { "start": { "line": 207, "column": 40 }, "end": { "line": 207, "column": 41 } },
          "loc": { "start": { "line": 207, "column": 45 }, "end": { "line": 207, "column": 46 } }
        },
        "15": {
          "name": "(anonymous_15)",
          "decl": { "start": { "line": 210, "column": 44 }, "end": { "line": 210, "column": 45 } },
          "loc": { "start": { "line": 210, "column": 49 }, "end": { "line": 210, "column": 57 } }
        },
        "16": {
          "name": "(anonymous_16)",
          "decl": { "start": { "line": 212, "column": 51 }, "end": { "line": 212, "column": 52 } },
          "loc": { "start": { "line": 212, "column": 56 }, "end": { "line": 212, "column": 64 } }
        },
        "17": {
          "name": "(anonymous_17)",
          "decl": { "start": { "line": 214, "column": 21 }, "end": { "line": 214, "column": 22 } },
          "loc": { "start": { "line": 214, "column": 59 }, "end": { "line": 218, "column": 5 } }
        },
        "18": {
          "name": "(anonymous_18)",
          "decl": { "start": { "line": 219, "column": 20 }, "end": { "line": 219, "column": 21 } },
          "loc": { "start": { "line": 219, "column": 72 }, "end": { "line": 243, "column": 5 } }
        },
        "19": {
          "name": "parseActressData",
          "decl": { "start": { "line": 254, "column": 16 }, "end": { "line": 254, "column": 32 } },
          "loc": { "start": { "line": 254, "column": 45 }, "end": { "line": 267, "column": 1 } }
        },
        "20": {
          "name": "(anonymous_20)",
          "decl": { "start": { "line": 255, "column": 40 }, "end": { "line": 255, "column": 41 } },
          "loc": { "start": { "line": 255, "column": 45 }, "end": { "line": 255, "column": 46 } }
        },
        "21": {
          "name": "injectsToRps",
          "decl": { "start": { "line": 299, "column": 16 }, "end": { "line": 299, "column": 28 } },
          "loc": { "start": { "line": 299, "column": 46 }, "end": { "line": 314, "column": 1 } }
        },
        "22": {
          "name": "(anonymous_22)",
          "decl": { "start": { "line": 300, "column": 42 }, "end": { "line": 300, "column": 43 } },
          "loc": { "start": { "line": 300, "column": 60 }, "end": { "line": 311, "column": 3 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 21, "column": 4 }, "end": { "line": 21, "column": 85 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 21, "column": 27 }, "end": { "line": 21, "column": 65 } },
            { "start": { "line": 21, "column": 68 }, "end": { "line": 21, "column": 85 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 25, "column": 29 }, "end": { "line": 25, "column": 85 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 25, "column": 45 }, "end": { "line": 25, "column": 79 } },
            { "start": { "line": 25, "column": 82 }, "end": { "line": 25, "column": 85 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 31, "column": 4 }, "end": { "line": 33, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 31, "column": 4 }, "end": { "line": 33, "column": 5 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 36, "column": 4 }, "end": { "line": 38, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 36, "column": 4 }, "end": { "line": 38, "column": 5 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 98, "column": 11 }, "end": { "line": 98, "column": 44 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 98, "column": 19 }, "end": { "line": 98, "column": 35 } },
            { "start": { "line": 98, "column": 38 }, "end": { "line": 98, "column": 44 } }
          ]
        },
        "5": {
          "loc": { "start": { "line": 99, "column": 11 }, "end": { "line": 99, "column": 47 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 99, "column": 20 }, "end": { "line": 99, "column": 38 } },
            { "start": { "line": 99, "column": 41 }, "end": { "line": 99, "column": 47 } }
          ]
        },
        "6": {
          "loc": { "start": { "line": 100, "column": 11 }, "end": { "line": 100, "column": 44 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 100, "column": 19 }, "end": { "line": 100, "column": 35 } },
            { "start": { "line": 100, "column": 38 }, "end": { "line": 100, "column": 44 } }
          ]
        },
        "7": {
          "loc": { "start": { "line": 101, "column": 11 }, "end": { "line": 101, "column": 44 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 101, "column": 19 }, "end": { "line": 101, "column": 35 } },
            { "start": { "line": 101, "column": 38 }, "end": { "line": 101, "column": 44 } }
          ]
        },
        "8": {
          "loc": { "start": { "line": 102, "column": 11 }, "end": { "line": 102, "column": 44 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 102, "column": 19 }, "end": { "line": 102, "column": 35 } },
            { "start": { "line": 102, "column": 38 }, "end": { "line": 102, "column": 44 } }
          ]
        },
        "9": {
          "loc": { "start": { "line": 103, "column": 11 }, "end": { "line": 103, "column": 44 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 103, "column": 19 }, "end": { "line": 103, "column": 35 } },
            { "start": { "line": 103, "column": 38 }, "end": { "line": 103, "column": 44 } }
          ]
        },
        "10": {
          "loc": { "start": { "line": 104, "column": 11 }, "end": { "line": 104, "column": 44 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 104, "column": 19 }, "end": { "line": 104, "column": 35 } },
            { "start": { "line": 104, "column": 38 }, "end": { "line": 104, "column": 44 } }
          ]
        },
        "11": {
          "loc": { "start": { "line": 105, "column": 11 }, "end": { "line": 105, "column": 55 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 105, "column": 24 }, "end": { "line": 105, "column": 46 } },
            { "start": { "line": 105, "column": 49 }, "end": { "line": 105, "column": 55 } }
          ]
        },
        "12": {
          "loc": { "start": { "line": 118, "column": 2 }, "end": { "line": 118, "column": 25 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 118, "column": 17 }, "end": { "line": 118, "column": 25 } }
          ]
        },
        "13": {
          "loc": { "start": { "line": 119, "column": 2 }, "end": { "line": 119, "column": 22 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 119, "column": 20 }, "end": { "line": 119, "column": 22 } }
          ]
        },
        "14": {
          "loc": { "start": { "line": 120, "column": 2 }, "end": { "line": 120, "column": 40 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 120, "column": 18 }, "end": { "line": 120, "column": 40 } }
          ]
        },
        "15": {
          "loc": { "start": { "line": 121, "column": 2 }, "end": { "line": 121, "column": 31 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 121, "column": 21 }, "end": { "line": 121, "column": 31 } }
          ]
        },
        "16": {
          "loc": { "start": { "line": 122, "column": 2 }, "end": { "line": 128, "column": null } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 125, "column": 6 }, "end": { "line": 128, "column": null } }
          ]
        },
        "17": {
          "loc": { "start": { "line": 140, "column": 4 }, "end": { "line": 154, "column": 5 } },
          "type": "switch",
          "locations": [
            { "start": { "line": 141, "column": 6 }, "end": { "line": 142, "column": 27 } },
            { "start": { "line": 144, "column": 6 }, "end": { "line": 145, "column": 27 } },
            { "start": { "line": 147, "column": 6 }, "end": { "line": 150, "column": 23 } },
            { "start": { "line": 152, "column": 6 }, "end": { "line": 153, "column": 38 } }
          ]
        },
        "18": {
          "loc": { "start": { "line": 158, "column": 4 }, "end": { "line": 172, "column": 5 } },
          "type": "switch",
          "locations": [
            { "start": { "line": 159, "column": 6 }, "end": { "line": 160, "column": 27 } },
            { "start": { "line": 162, "column": 6 }, "end": { "line": 163, "column": 27 } },
            { "start": { "line": 165, "column": 6 }, "end": { "line": 168, "column": 24 } },
            { "start": { "line": 170, "column": 6 }, "end": { "line": 171, "column": 38 } }
          ]
        },
        "19": {
          "loc": { "start": { "line": 182, "column": 18 }, "end": { "line": 182, "column": 75 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 182, "column": 48 }, "end": { "line": 182, "column": 60 } },
            { "start": { "line": 182, "column": 63 }, "end": { "line": 182, "column": 75 } }
          ]
        },
        "20": {
          "loc": { "start": { "line": 222, "column": 6 }, "end": { "line": 241, "column": 7 } },
          "type": "switch",
          "locations": [
            { "start": { "line": 223, "column": 8 }, "end": { "line": 225, "column": 16 } },
            { "start": { "line": 226, "column": 8 }, "end": { "line": 228, "column": 16 } },
            { "start": { "line": 229, "column": 8 }, "end": { "line": 231, "column": 16 } },
            { "start": { "line": 232, "column": 8 }, "end": { "line": 234, "column": 16 } },
            { "start": { "line": 235, "column": 8 }, "end": { "line": 237, "column": 16 } },
            { "start": { "line": 238, "column": 8 }, "end": { "line": 240, "column": 16 } }
          ]
        },
        "21": {
          "loc": { "start": { "line": 247, "column": 4 }, "end": { "line": 249, "column": 68 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 248, "column": 8 }, "end": { "line": 248, "column": 68 } },
            { "start": { "line": 249, "column": 9 }, "end": { "line": 249, "column": 67 } }
          ]
        },
        "22": {
          "loc": { "start": { "line": 305, "column": 6 }, "end": { "line": 307, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 305, "column": 6 }, "end": { "line": 307, "column": 7 } }
          ]
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 21,
        "7": 21,
        "8": 21,
        "9": 21,
        "10": 21,
        "11": 21,
        "12": 21,
        "13": 21,
        "14": 21,
        "15": 21,
        "16": 91,
        "17": 21,
        "18": 21,
        "19": 91,
        "20": 91,
        "21": 91,
        "22": 91,
        "23": 21,
        "24": 73,
        "25": 21,
        "26": 35,
        "27": 35,
        "28": 1,
        "29": 34,
        "30": 34,
        "31": 1,
        "32": 33,
        "33": 19,
        "34": 33,
        "35": 19,
        "36": 9,
        "37": 9,
        "38": 9,
        "39": 9,
        "40": 9,
        "41": 9,
        "42": 9,
        "43": 9,
        "44": 9,
        "45": 9,
        "46": 9,
        "47": 9,
        "48": 9,
        "49": 9,
        "50": 9,
        "51": 9,
        "52": 9,
        "53": 9,
        "54": 2,
        "55": 2,
        "56": 9,
        "57": 2,
        "58": 2,
        "59": 9,
        "60": 2,
        "61": 2,
        "62": 9,
        "63": 2,
        "64": 2,
        "65": 9,
        "66": 2,
        "67": 2,
        "68": 9,
        "69": 2,
        "70": 2,
        "71": 9,
        "72": 2,
        "73": 2,
        "74": 9,
        "75": 9,
        "76": 9,
        "77": 9,
        "78": 9,
        "79": 9,
        "80": 9,
        "81": 9,
        "82": 9,
        "83": 9,
        "84": 1,
        "85": 1,
        "86": 1,
        "87": 1,
        "88": 1,
        "89": 6,
        "90": 1,
        "91": 6,
        "92": 0,
        "93": 0,
        "94": 6,
        "95": 0,
        "96": 1,
        "97": 6,
        "98": 0,
        "99": 0,
        "100": 6,
        "101": 0,
        "102": 1,
        "103": 1,
        "104": 1,
        "105": 6,
        "106": 6,
        "107": 6,
        "108": 6,
        "109": 6,
        "110": 6,
        "111": 6,
        "112": 6,
        "113": 6,
        "114": 6,
        "115": 6,
        "116": 6,
        "117": 6,
        "118": 6,
        "119": 6,
        "120": 6,
        "121": 1,
        "122": 1,
        "123": 7,
        "124": 1,
        "125": 1,
        "126": 6,
        "127": 12,
        "128": 6,
        "129": 6,
        "130": 18,
        "131": 6,
        "132": 12,
        "133": 12,
        "134": 12,
        "135": 6,
        "136": 6,
        "137": 6,
        "138": 0,
        "139": 0,
        "140": 6,
        "141": 6,
        "142": 0,
        "143": 0,
        "144": 0,
        "145": 0,
        "146": 0,
        "147": 0,
        "148": 0,
        "149": 0,
        "150": 6,
        "151": 6,
        "152": 6,
        "153": 6,
        "154": 1,
        "155": 1,
        "156": 8,
        "157": 1,
        "158": 1,
        "159": 1,
        "160": 6,
        "161": 6,
        "162": 6,
        "163": 1,
        "164": 1,
        "165": 7,
        "166": 7,
        "167": 7,
        "168": 22,
        "169": 22,
        "170": 3,
        "171": 19,
        "172": 7,
        "173": 1
      },
      "f": {
        "0": 21,
        "1": 91,
        "2": 91,
        "3": 91,
        "4": 73,
        "5": 35,
        "6": 33,
        "7": 9,
        "8": 1,
        "9": 6,
        "10": 6,
        "11": 6,
        "12": 6,
        "13": 1,
        "14": 7,
        "15": 12,
        "16": 18,
        "17": 12,
        "18": 6,
        "19": 1,
        "20": 8,
        "21": 1,
        "22": 7
      },
      "b": {
        "0": [19, 72],
        "1": [37, 36],
        "2": [1],
        "3": [1],
        "4": [2, 7],
        "5": [2, 7],
        "6": [2, 7],
        "7": [2, 7],
        "8": [2, 7],
        "9": [2, 7],
        "10": [2, 7],
        "11": [2, 7],
        "12": [0],
        "13": [0],
        "14": [1],
        "15": [1],
        "16": [1],
        "17": [0, 0, 6, 0],
        "18": [0, 0, 6, 0],
        "19": [2, 4],
        "20": [0, 6, 0, 0, 0, 0],
        "21": [3, 3],
        "22": [3]
      }
    },
    "/Users/sam/code/work/pepr/src/lib/deploymentChecks.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/deploymentChecks.ts",
      "statementMap": {
        "0": { "start": { "line": 7, "column": 0 }, "end": { "line": 7, "column": 7 } },
        "1": { "start": { "line": 32, "column": 0 }, "end": { "line": 32, "column": 7 } },
        "2": { "start": { "line": 3, "column": 0 }, "end": { "line": 3, "column": 53 } },
        "3": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 37 } },
        "4": { "start": { "line": 8, "column": 22 }, "end": { "line": 8, "column": 77 } },
        "5": { "start": { "line": 9, "column": 15 }, "end": { "line": 9, "column": 20 } },
        "6": { "start": { "line": 10, "column": 19 }, "end": { "line": 10, "column": 20 } },
        "7": { "start": { "line": 12, "column": 2 }, "end": { "line": 24, "column": 3 } },
        "8": { "start": { "line": 13, "column": 26 }, "end": { "line": 13, "column": 97 } },
        "9": { "start": { "line": 14, "column": 4 }, "end": { "line": 23, "column": 5 } },
        "10": { "start": { "line": 15, "column": 6 }, "end": { "line": 17, "column": 8 } },
        "11": { "start": { "line": 19, "column": 6 }, "end": { "line": 21, "column": 8 } },
        "12": { "start": { "line": 22, "column": 6 }, "end": { "line": 22, "column": 19 } },
        "13": { "start": { "line": 25, "column": 2 }, "end": { "line": 27, "column": 3 } },
        "14": { "start": { "line": 26, "column": 4 }, "end": { "line": 26, "column": 18 } },
        "15": { "start": { "line": 28, "column": 2 }, "end": { "line": 28, "column": 16 } },
        "16": { "start": { "line": 33, "column": 2 }, "end": { "line": 33, "column": 58 } },
        "17": { "start": { "line": 34, "column": 14 }, "end": { "line": 34, "column": 19 } },
        "18": { "start": { "line": 35, "column": 2 }, "end": { "line": 41, "column": 3 } },
        "19": { "start": { "line": 36, "column": 4 }, "end": { "line": 36, "column": 51 } },
        "20": { "start": { "line": 37, "column": 4 }, "end": { "line": 39, "column": 5 } },
        "21": { "start": { "line": 38, "column": 6 }, "end": { "line": 38, "column": 19 } },
        "22": { "start": { "line": 40, "column": 4 }, "end": { "line": 40, "column": 60 } },
        "23": { "start": { "line": 40, "column": 33 }, "end": { "line": 40, "column": 58 } },
        "24": { "start": { "line": 42, "column": 2 }, "end": { "line": 42, "column": 53 } }
      },
      "fnMap": {
        "0": {
          "name": "checkDeploymentStatus",
          "decl": { "start": { "line": 7, "column": 22 }, "end": { "line": 7, "column": 43 } },
          "loc": { "start": { "line": 7, "column": 61 }, "end": { "line": 29, "column": 1 } }
        },
        "1": {
          "name": "namespaceDeploymentsReady",
          "decl": { "start": { "line": 32, "column": 22 }, "end": { "line": 32, "column": 47 } },
          "loc": { "start": { "line": 32, "column": 81 }, "end": { "line": 43, "column": 1 } }
        },
        "2": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 40, "column": 22 }, "end": { "line": 40, "column": 29 } },
          "loc": { "start": { "line": 40, "column": 33 }, "end": { "line": 40, "column": 58 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 13, "column": 26 }, "end": { "line": 13, "column": 97 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 13, "column": 61 }, "end": { "line": 13, "column": 93 } },
            { "start": { "line": 13, "column": 96 }, "end": { "line": 13, "column": 97 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 14, "column": 4 }, "end": { "line": 23, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 14, "column": 4 }, "end": { "line": 23, "column": 5 } },
            { "start": { "line": 18, "column": 11 }, "end": { "line": 23, "column": 5 } }
          ]
        },
        "2": {
          "loc": { "start": { "line": 25, "column": 2 }, "end": { "line": 27, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 25, "column": 2 }, "end": { "line": 27, "column": 3 } }
          ]
        },
        "3": {
          "loc": { "start": { "line": 32, "column": 48 }, "end": { "line": 32, "column": 81 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 32, "column": 68 }, "end": { "line": 32, "column": 81 } }
          ]
        },
        "4": {
          "loc": { "start": { "line": 37, "column": 4 }, "end": { "line": 39, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 37, "column": 4 }, "end": { "line": 39, "column": 5 } }
          ]
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 4,
        "5": 4,
        "6": 4,
        "7": 4,
        "8": 8,
        "9": 8,
        "10": 1,
        "11": 7,
        "12": 7,
        "13": 4,
        "14": 3,
        "15": 4,
        "16": 2,
        "17": 2,
        "18": 2,
        "19": 2,
        "20": 2,
        "21": 2,
        "22": 0,
        "23": 0,
        "24": 0
      },
      "f": { "0": 4, "1": 2, "2": 0 },
      "b": { "0": [8, 0], "1": [1, 7], "2": [3], "3": [2], "4": [2] }
    },
    "/Users/sam/code/work/pepr/src/lib/assets/helm.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/assets/helm.ts",
      "statementMap": {
        "0": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 16 } },
        "1": { "start": { "line": 18, "column": 0 }, "end": { "line": 18, "column": 16 } },
        "2": { "start": { "line": 35, "column": 0 }, "end": { "line": 35, "column": 16 } },
        "3": { "start": { "line": 64, "column": 0 }, "end": { "line": 64, "column": 16 } },
        "4": { "start": { "line": 154, "column": 0 }, "end": { "line": 154, "column": 16 } },
        "5": { "start": { "line": 249, "column": 0 }, "end": { "line": 249, "column": 16 } },
        "6": { "start": { "line": 5, "column": 2 }, "end": { "line": 15, "column": 4 } },
        "7": { "start": { "line": 19, "column": 2 }, "end": { "line": 32, "column": 6 } },
        "8": { "start": { "line": 36, "column": 2 }, "end": { "line": 61, "column": 2 } },
        "9": { "start": { "line": 65, "column": 2 }, "end": { "line": 151, "column": 6 } },
        "10": { "start": { "line": 155, "column": 2 }, "end": { "line": 246, "column": 6 } },
        "11": { "start": { "line": 250, "column": 2 }, "end": { "line": 273, "column": 6 } }
      },
      "fnMap": {
        "0": {
          "name": "clusterRoleTemplate",
          "decl": { "start": { "line": 4, "column": 16 }, "end": { "line": 4, "column": 35 } },
          "loc": { "start": { "line": 4, "column": 35 }, "end": { "line": 16, "column": 1 } }
        },
        "1": {
          "name": "namespaceTemplate",
          "decl": { "start": { "line": 18, "column": 16 }, "end": { "line": 18, "column": 33 } },
          "loc": { "start": { "line": 18, "column": 33 }, "end": { "line": 33, "column": 1 } }
        },
        "2": {
          "name": "chartYaml",
          "decl": { "start": { "line": 35, "column": 16 }, "end": { "line": 35, "column": 25 } },
          "loc": { "start": { "line": 35, "column": 60 }, "end": { "line": 62, "column": 1 } }
        },
        "3": {
          "name": "watcherDeployTemplate",
          "decl": { "start": { "line": 64, "column": 16 }, "end": { "line": 64, "column": 37 } },
          "loc": { "start": { "line": 64, "column": 60 }, "end": { "line": 152, "column": 1 } }
        },
        "4": {
          "name": "admissionDeployTemplate",
          "decl": { "start": { "line": 154, "column": 16 }, "end": { "line": 154, "column": 39 } },
          "loc": { "start": { "line": 154, "column": 62 }, "end": { "line": 247, "column": 1 } }
        },
        "5": {
          "name": "serviceMonitorTemplate",
          "decl": { "start": { "line": 249, "column": 16 }, "end": { "line": 249, "column": 38 } },
          "loc": { "start": { "line": 249, "column": 51 }, "end": { "line": 274, "column": 1 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 39, "column": 19 }, "end": { "line": 39, "column": 36 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 39, "column": 19 }, "end": { "line": 39, "column": 30 } },
            { "start": { "line": 39, "column": 34 }, "end": { "line": 39, "column": 36 } }
          ]
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 0,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 2
      },
      "f": { "0": 0, "1": 1, "2": 1, "3": 1, "4": 1, "5": 2 },
      "b": { "0": [1, 0] }
    },
    "/Users/sam/code/work/pepr/src/lib/filesystemService.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/filesystemService.ts",
      "statementMap": {
        "0": { "start": { "line": 6, "column": 0 }, "end": { "line": 6, "column": 7 } },
        "1": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 30 } },
        "2": { "start": { "line": 7, "column": 2 }, "end": { "line": 15, "column": 3 } },
        "3": { "start": { "line": 8, "column": 4 }, "end": { "line": 8, "column": 32 } },
        "4": { "start": { "line": 10, "column": 4 }, "end": { "line": 14, "column": 5 } },
        "5": { "start": { "line": 11, "column": 6 }, "end": { "line": 11, "column": 54 } },
        "6": { "start": { "line": 13, "column": 6 }, "end": { "line": 13, "column": 18 } }
      },
      "fnMap": {
        "0": {
          "name": "createDirectoryIfNotExists",
          "decl": { "start": { "line": 6, "column": 22 }, "end": { "line": 6, "column": 48 } },
          "loc": { "start": { "line": 6, "column": 61 }, "end": { "line": 16, "column": 1 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 10, "column": 4 }, "end": { "line": 14, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 10, "column": 4 }, "end": { "line": 14, "column": 5 } },
            { "start": { "line": 12, "column": 11 }, "end": { "line": 14, "column": 5 } }
          ]
        }
      },
      "s": { "0": 1, "1": 1, "2": 3, "3": 3, "4": 2, "5": 1, "6": 1 },
      "f": { "0": 3 },
      "b": { "0": [1, 1] }
    },
    "/Users/sam/code/work/pepr/src/cli/format.helpers.ts": {
      "path": "/Users/sam/code/work/pepr/src/cli/format.helpers.ts",
      "statementMap": {
        "0": { "start": { "line": 8, "column": 0 }, "end": { "line": 8, "column": 7 } },
        "1": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 36 } },
        "2": { "start": { "line": 6, "column": 0 }, "end": { "line": 6, "column": 49 } },
        "3": { "start": { "line": 12, "column": 19 }, "end": { "line": 12, "column": 24 } },
        "4": { "start": { "line": 13, "column": 2 }, "end": { "line": 25, "column": 3 } },
        "5": { "start": { "line": 14, "column": 20 }, "end": { "line": 14, "column": 55 } },
        "6": { "start": { "line": 15, "column": 16 }, "end": { "line": 15, "column": 45 } },
        "7": { "start": { "line": 16, "column": 22 }, "end": { "line": 16, "column": 75 } },
        "8": { "start": { "line": 19, "column": 4 }, "end": { "line": 24, "column": 5 } },
        "9": { "start": { "line": 20, "column": 6 }, "end": { "line": 20, "column": 24 } },
        "10": { "start": { "line": 21, "column": 6 }, "end": { "line": 21, "column": 67 } },
        "11": { "start": { "line": 23, "column": 6 }, "end": { "line": 23, "column": 46 } },
        "12": { "start": { "line": 26, "column": 2 }, "end": { "line": 26, "column": 20 } }
      },
      "fnMap": {
        "0": {
          "name": "formatWithPrettier",
          "decl": { "start": { "line": 8, "column": 22 }, "end": { "line": 8, "column": 40 } },
          "loc": { "start": { "line": 10, "column": 23 }, "end": { "line": 27, "column": 1 } }
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 19, "column": 4 }, "end": { "line": 24, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 19, "column": 4 }, "end": { "line": 24, "column": 5 } },
            { "start": { "line": 22, "column": 11 }, "end": { "line": 24, "column": 5 } }
          ]
        },
        "1": {
          "loc": { "start": { "line": 19, "column": 8 }, "end": { "line": 19, "column": 45 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 19, "column": 8 }, "end": { "line": 19, "column": 20 } },
            { "start": { "line": 19, "column": 24 }, "end": { "line": 19, "column": 45 } }
          ]
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 2,
        "4": 2,
        "5": 4,
        "6": 4,
        "7": 4,
        "8": 4,
        "9": 2,
        "10": 2,
        "11": 2,
        "12": 2
      },
      "f": { "0": 2 },
      "b": { "0": [2, 2], "1": [4, 2] }
    },
    "/Users/sam/code/work/pepr/src/lib/included-files.ts": {
      "path": "/Users/sam/code/work/pepr/src/lib/included-files.ts",
      "statementMap": {
        "0": { "start": { "line": 6, "column": 0 }, "end": { "line": 6, "column": 7 } },
        "1": { "start": { "line": 4, "column": 0 }, "end": { "line": 4, "column": 36 } },
        "2": { "start": { "line": 7, "column": 15 }, "end": { "line": 16, "column": 6 } },
        "3": { "start": { "line": 14, "column": 29 }, "end": { "line": 14, "column": 44 } },
        "4": { "start": { "line": 18, "column": 2 }, "end": { "line": 18, "column": 75 } }
      },
      "fnMap": {
        "0": {
          "name": "createDockerfile",
          "decl": { "start": { "line": 6, "column": 22 }, "end": { "line": 6, "column": 38 } },
          "loc": { "start": { "line": 6, "column": 100 }, "end": { "line": 19, "column": 1 } }
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 14, "column": 24 }, "end": { "line": 14, "column": 25 } },
          "loc": { "start": { "line": 14, "column": 29 }, "end": { "line": 14, "column": 44 } }
        }
      },
      "branchMap": {},
      "s": { "0": 1, "1": 1, "2": 1, "3": 2, "4": 1 },
      "f": { "0": 1, "1": 2 },
      "b": {}
    }
  }
}
