name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Use Node.js latest
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: latest
          cache: "npm"
      - run: npm ci
      - run: npm run format:check

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20, latest]
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npm run test:unit
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673 # v4.5.0
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_ORG_TOKEN }}
  journey:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Use Node.js latest
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: latest
          cache: "npm"
      - name: Setup Helm
        uses: azure/setup-helm@fe7b79cd5ee1e45176fcad797de68ecaf3ca4814 # v4.2.0
        with:
          version: v3.3.4
      - name: "Install K3d"
        run: "curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash"
        shell: bash

      - run: npm ci
      - run: npm run test:journey
      - run: npm run test:journey-wasm
# Now do the soak test

# Clone the watch-auditor repo 
# CLone Pepr Soak CI 
# Deploy Pepr Soak CI 
# Deploy Watch Auditor
# Publish results every 32 mins and every 5 mins
      - name: clone pepr-excellent-examples
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          repository: defenseunicorns/pepr-excellent-examples
          path: pepr-excellent-examples

      - name: "set env: PEXEX"
        run: echo "PEXEX=${GITHUB_WORKSPACE}/pepr-excellent-examples" >> "$GITHUB_ENV"

      - name: clone watch-auditor
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          repository: cmwylie19/watch-auditor
          path: watch-auditor

      - name: "set env: SOAK"
        run: echo "SOAK=${GITHUB_WORKSPACE}/watch-auditor" >> "$GITHUB_ENV"

      - name: install pepr-excellent-examples deps
        run: |
          cd "$PEXEX"
          npm ci

      - name: deploy the soak test and environment
        run: |
          cd "$PEXEX"/hello-pepr-soak-ci
          npx pepr deploy -i pepr:dev

      - name: deploy the watch-auditor 
        run: |
          cd "$SOAK"/watch-auditor
          kubectl apply -f k8s/

      - name: Run background tasks
        run: |
          chmod +x ./get-metrics.sh
          ./get-metrics.sh &



      - name: Build the Project
        run: |
          echo "Building the project..."
          # Replace this with the actual build command
          mkdir build
          echo "Example build output" > build/output.txt

      - name: Run Tests
        run: |
          echo "Running tests..."
          # Your commands to run tests
          mkdir logs
          echo "Example test log" > logs/test-log.txt

      - name: Upload Build Output as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-output
          path: build/

      - name: Upload Test Logs as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: test-logs
          path: logs/

      - name: Cleanup
        if: always()
        run: |
          kill $(jobs -p)
