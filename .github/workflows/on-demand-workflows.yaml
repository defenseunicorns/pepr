# Workflows that can be called on demand
name: on-demand-workflows

on:
  workflow_call:
    inputs:
      run-format:
        description: "Run format check"
        required: false
        default: false
        type: boolean
      run-units:
        description: "Run unit tests"
        required: false
        default: false
        type: boolean
      run-integration:
        description: "Run integration tests"
        required: false
        default: false
        type: boolean
      node-version:
        description: "Node.js version"
        required: false
        type: string

    secrets:
      CODECOV_ORG_TOKEN:
        required: true
      CHAINGUARD_IDENTITY:
        required: false

permissions:
  id-token: write # This is needed for OIDC federation.
  contents: read

jobs:
  format:
    if: inputs.run-format == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Use Node.js latest
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: latest
          cache: "npm"
      - run: npm ci
      - run: npm run format:check

  test:
    if: inputs.run-units == true
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20, 22, 24]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npm run build
      - run: npm run test:unit
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          token: ${{ secrets.CODECOV_ORG_TOKEN }}

  test-docs:
    if: inputs.run-units == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Use Node.js 22
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: 22
          cache: "npm"
      - run: npm ci
      - run: npm install ts-node
      - run: npm run gen-data-json
      - run: npm run test:docs

  integration:
    if: inputs.run-integration == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Use Node.js 22
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: 22
          cache: "npm"
      - name: "Install K3d"
        run: "curl -s --retry 5 --retry-all-errors --fail https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash"
        shell: bash
      - name: Setup Helm
        uses: azure/setup-helm@1a275c3b69536ee54be43f2070a358922e12c8d4 # v4.3.1
        with:
          version: v3.3.4
      - run: npm ci
      - run: npm run test:integration
        timeout-minutes: 10

  build-artifacts:
    if: inputs.run-units == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Use Node.js 24
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: 24
          cache: "npm"
      - run: npm ci
      - run: npm run test:artifacts
        timeout-minutes: 10
