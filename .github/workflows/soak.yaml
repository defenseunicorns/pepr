name: Soak Test

permissions: read-all
on:
  workflow_dispatch:
  # schedule:
  #   - cron: '0 4 * * *' # 12AM EST/9PM PST
  # push:
  #   paths-ignore:
  #   - "**.md"
  #   - "**.jpg"
  #   - "**.png"
  #   - "**.gif"
  #   - "**.svg"
  #   - "adr/**"
  #   - "__mocks__/**"
  #   - ".npmignore"
  #   - ".prettierignore"
  #   - "scripts/**"
  #   - "hack/**"
  #   - "_images/**"
  #   - "**.yaml"
  #   - "**.toml"
  #   - "**.json"
  #   - "docs/**"
  #   - "CODEOWNERS"
  #   branches: ["main"]
  # pull_request:
  #   branches: ["main"]
  #   paths-ignore:
  #   - "**.md"
  #   - "**.jpg"
  #   - "**.png"
  #   - "**.gif"
  #   - "**.svg"
  #   - "adr/**"
  #   - "__mocks__/**"
  #   - ".npmignore"
  #   - ".prettierignore"
  #   - "scripts/**"
  #   - "hack/**"
  #   - "_images/**"
  #   - "**.yaml"
  #   - "**.toml"
  #   - "docs/**"
  #   - "**.json"
  #   - "CODEOWNERS"
# refs
# https://frontside.com/blog/2022-12-12-dynamic-github-action-jobs/
# https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands/

jobs:
  pepr-build:
    name: controller image
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
        with:
          egress-policy: audit

      - name: clone pepr
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          repository: defenseunicorns/pepr
          path: pepr

      - name: "set env: PEPR"
        run: echo "PEPR=${GITHUB_WORKSPACE}/pepr" >> "$GITHUB_ENV"

      - name: setup node
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: pepr

      - name: install pepr deps
        run: |
          cd "$PEPR"
          npm ci

      - name: build pepr image
        run: |
          cd "$PEPR"
          npm run build:image

      - name: tar pepr image
        run: |
          PEPR_TAR="${GITHUB_WORKSPACE}/pepr-img.tar"
          echo "PEPR_TAR=${PEPR_TAR}" >> "$GITHUB_ENV"
          docker image save --output "$PEPR_TAR" pepr:dev

      - name: upload image tar artifact
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
        with:
          name: pepr-img.tar
          path: pepr-img.tar
          retention-days: 1

  watch-auditor:
    name: prepare watch auditor
    runs-on: ubuntu-latest
    needs:
      - pepr-build

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
        with:
          egress-policy: audit

      - name: clone watch-auditor
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          repository: cmwylie19/watch-auditor
          path: watch-auditor

      - name: "set env: AUDITOR"
        run: echo "AUDITOR=${GITHUB_WORKSPACE}/watch-auditor" >> "$GITHUB_ENV"

      - name: Setup golang
        uses: ./.github/actions/golang

      - name: build watch-auditor image
        run: |
          cd "$AUDITOR"
          make build-prod-image

  soak-test:
    name: soak-test
    runs-on: ubuntu-latest
    needs:
      - pepr-build
      - watch-auditor
      
    steps:
      - name: clone pepr-excellent-examples
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          repository: defenseunicorns/pepr-excellent-examples
          path: pepr-excellent-examples

      - name: "set env: PEXEX"
        run: echo "PEXEX=${GITHUB_WORKSPACE}/pepr-excellent-examples" >> "$GITHUB_ENV"

      - name: setup node
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: pepr-excellent-examples

      - name: install pepr-excellent-examples deps
        run: |
          cd "$PEXEX"
          npm ci

      - name: make logs directory
        run: |
          cd "$PEXEX"
          mkdir logs
          
      - name: deploy the soak test and environment
        run: |
          cd "$PEXEX"
          npm run test:soak -w hello-pepr-soak-ci -- -i pepr:dev

      - name: Upload Log Output as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: log-output
          path: pepr-excellent-examples/logs/
