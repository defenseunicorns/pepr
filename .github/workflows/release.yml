name: Version Release

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Use Node.js 20
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"
          cache: "npm"

      - name: Chainguard Login
        uses: chainguard-dev/setup-chainctl@2302a56a61228140753b428d1018cb0d0addbec6 # v0.3.0
        with:
          identity: ${{ secrets.CHAINGUARD_IDENTITY }}

      - name: "Pepr Controller: Login to GHCR"
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: dummy
          password: ${{ github.token }}

      - name: Publish to GHCR 
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          #!/bin/bash

          npm install -g npm

          npm run set:version

          # Build Controller Images
          docker buildx build --push --platform linux/arm64/v8,linux/amd64 --tag ghcr.io/defenseunicorns/pepr/controller:${{ github.ref_name }} .
          docker buildx build -f Dockerfile.unicorn --push --platform linux/arm64/v8,linux/amd64 --tag ghcr.io/defenseunicorns/pepr/private/controller:${{ github.ref_name }} .
  slsa:
    permissions:
      id-token: write
      contents: read
      actions: read
    uses: slsa-framework/slsa-github-generator/.github/workflows/builder_nodejs_slsa3.yml@v2.1.0
    with:
      run-scripts: "set:version, ci, build"

  publish:
    needs: [slsa]
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit
      - name: Set up Node registry authentication
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"
      - name: Publish package
        id: publish
        uses: slsa-framework/slsa-github-generator/actions/nodejs/publish@9103ac683d00ceecdb1c21507a9c7a9983ef46f4 # v2.0.0
        with:
          access: public
          node-auth-token: ${{ secrets.NPM_TOKEN }}
          package-name: ${{ needs.slsa.outputs.package-name }}
          package-download-name: ${{ needs.slsa.outputs.package-download-name }}
          package-download-sha256: ${{ needs.slsa.outputs.package-download-sha256 }}
          provenance-name: ${{ needs.slsa.outputs.provenance-name }}
          provenance-download-name: ${{ needs.slsa.outputs.provenance-download-name }}
          provenance-download-sha256: ${{ needs.slsa.outputs.provenance-download-sha256 }}
