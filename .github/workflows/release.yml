name: Version Release

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Use Node.js 20
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"
          cache: "npm"

      - name: Rapidfort Login
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3.0.2
        with:
          max_attempts: 5
          retry_on: error
          timeout_minutes: 1
          command: |
            echo "${{ secrets.RAPIDFORT_PASSWORD }}" | docker login quay.io --username "${{ secrets.RAPIDFORT_USERNAME }}" --password-stdin

      - name: UDS Registry Login
        run: echo "${{ secrets.UDS_REGISTRY_PASSWORD }}" | docker login -u "${{ secrets.UDS_REGISTRY_USERNAME }}" --password-stdin registry.defenseunicorns.com
        shell: bash

      - name: "Pepr Controller: Login to GHCR"
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: dummy
          password: ${{ github.token }}

      - name: Publish to GHCR 
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: VERSION=${{ github.ref_name }} && ./.github/workflows/scripts/release.sh "${VERSION:1}" # Strip the leading 'v' to match nightly release process
  slsa:
    permissions:
      id-token: write
      contents: read
      actions: read
    uses: slsa-framework/slsa-github-generator/.github/workflows/builder_nodejs_slsa3.yml@v2.1.0
    with:
      run-scripts: "set:version, ci, build"

  tutorials-test:
    uses: ./.github/workflows/tutorials-test.yml

  publish:
    needs: [slsa, tutorials-test]
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit
      - name: Set up Node registry authentication
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"
      - name: Publish package
        id: publish
        uses: slsa-framework/slsa-github-generator/actions/nodejs/publish@9103ac683d00ceecdb1c21507a9c7a9983ef46f4 # v2.0.0
        with:
          access: public
          node-auth-token: ${{ secrets.NPM_TOKEN }}
          package-name: ${{ needs.slsa.outputs.package-name }}
          package-download-name: ${{ needs.slsa.outputs.package-download-name }}
          package-download-sha256: ${{ needs.slsa.outputs.package-download-sha256 }}
          provenance-name: ${{ needs.slsa.outputs.provenance-name }}
          provenance-download-name: ${{ needs.slsa.outputs.provenance-download-name }}
          provenance-download-sha256: ${{ needs.slsa.outputs.provenance-download-sha256 }}

  pack-and-push:
    needs: [publish]
    runs-on: ubuntu-latest

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Use Node.js 24
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 24
          registry-url: "https://registry.npmjs.org"
          cache: "npm"

      - name: Download ORAS
        run: |
          VERSION="1.2.2"
          curl -LO "https://github.com/oras-project/oras/releases/download/v${VERSION}/oras_${VERSION}_linux_amd64.tar.gz"
          mkdir -p oras-install/
          tar -zxf oras_${VERSION}_*.tar.gz -C oras-install/
          sudo mv oras-install/oras /usr/local/bin/
          rm -rf oras_${VERSION}_*.tar.gz oras-install/

      - name: Docker login to UDS registry
        run: echo "${{ secrets.UDS_REGISTRY_PASSWORD }}" | docker login -u "${{ secrets.UDS_REGISTRY_USERNAME }}" --password-stdin registry.defenseunicorns.com

      - name: Push package to UDS OCI registry
        run: |
          npm install --global npm
          npm install
          npm run set:version
          npm run build
          VERSION=${{ github.ref_name }}
          oras push registry.defenseunicorns.com/pepr-dev/npm/pepr:${VERSION} \
            --artifact-type application/vnd.pepr.module.layer.v1 pepr-${VERSION:1}.tgz
