name: Deploy Test - Zarf

permissions: read-all
on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  MOD_NAME: pepr-test-zarf

jobs:
  zarf:
    name: deploy test
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
        with:
          egress-policy: audit

      - name: Set up Kubernetes
        uses: azure/setup-kubectl@776406bce94f63e41d621b960d78ee25c8b76ede # v4.0.1
        with:
          version: 'latest'

      - name: "install k3d"
        run: "curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash"
        shell: bash

      - name: Install The Latest Release Version of Zarf
        uses: zarf-dev/setup-zarf@10e539efed02f75ec39eb8823e22a5c795f492ae #v1.0.1
        with:
          download-init-package: true

      - name: clone pepr
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: defenseunicorns/pepr
          path: pepr

      - name: setup node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22
          cache: "npm"
          cache-dependency-path: pepr

      - name: "set env: PEPR"
        run: echo "PEPR=${GITHUB_WORKSPACE}/pepr" >> "$GITHUB_ENV"

      - name: Install Pepr Dependencies
        run: |
          cd "$PEPR"
          npm ci

      - name: Build Pepr Package + Image
        run: |
          cd "$PEPR"
          npm run build:image

      - name: "set env: MOD_PATH"
        run: |
          echo "MOD_PATH=${PEPR}/${MOD_NAME}" >> "$GITHUB_ENV"

      - name: Init Pepr Module
        run: |
          cd "$PEPR"
          npx pepr init --name "$MOD_NAME" --description "$MOD_NAME" --errorBehavior "ignore" --uuid "$MOD_NAME" --skip-post-init --confirm
          sed -i 's/uuid": ".*",/uuid": "'$MOD_NAME'",/g' "$MOD_PATH/package.json"

      - name: Build Pepr Module
        run: |
          cd "$MOD_PATH"
          npm install "${PEPR}/pepr-0.0.0-development.tgz"
          npx pepr build --custom-image pepr:dev

      - name: "set env: CLUSTER"
        run: echo "CLUSTER=$MOD_NAME" >> "$GITHUB_ENV"

      - name: Prepare Test Cluster
        run: |
          k3d cluster create "$CLUSTER"
          k3d image import pepr:dev --cluster "$CLUSTER"

      - name: "set env: KUBECONFIG"
        run: echo "KUBECONFIG=$(k3d kubeconfig write "$CLUSTER")" >> "$GITHUB_ENV"


      - name: Initialize Zarf
        run: |
          cd "$MOD_PATH"
          zarf init --confirm

      - name: Package Pepr Module with Zarf
        run: |
          cd "$MOD_PATH"
          zarf package create --confirm "dist/"

      - name: Deploy Pepr Module with Zarf
        run: |
          cd "$MOD_PATH"
          zarf package deploy --confirm zarf-package-pepr-pepr-test-zarf-amd64-0.0.1.tar.zst

      - name: Check Deployment Readiness
        timeout-minutes: 5
        run: |
          ${PEPR}/.github/workflows/scripts/check-deployment-readiness.sh pepr-$MOD_NAME
