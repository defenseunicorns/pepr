/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: release-1.25
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AWSElasticBlockStoreVolumeSource } from './v1AWSElasticBlockStoreVolumeSource';
import { AzureDiskVolumeSource } from './v1AzureDiskVolumeSource';
import { AzureFileVolumeSource } from './v1AzureFileVolumeSource';
import { CSIVolumeSource } from './v1CSIVolumeSource';
import { CephFSVolumeSource } from './v1CephFSVolumeSource';
import { CinderVolumeSource } from './v1CinderVolumeSource';
import { ConfigMapVolumeSource } from './v1ConfigMapVolumeSource';
import { DownwardAPIVolumeSource } from './v1DownwardAPIVolumeSource';
import { EmptyDirVolumeSource } from './v1EmptyDirVolumeSource';
import { EphemeralVolumeSource } from './v1EphemeralVolumeSource';
import { FCVolumeSource } from './v1FCVolumeSource';
import { FlexVolumeSource } from './v1FlexVolumeSource';
import { FlockerVolumeSource } from './v1FlockerVolumeSource';
import { GCEPersistentDiskVolumeSource } from './v1GCEPersistentDiskVolumeSource';
import { GitRepoVolumeSource } from './v1GitRepoVolumeSource';
import { GlusterfsVolumeSource } from './v1GlusterfsVolumeSource';
import { HostPathVolumeSource } from './v1HostPathVolumeSource';
import { ISCSIVolumeSource } from './v1ISCSIVolumeSource';
import { NFSVolumeSource } from './v1NFSVolumeSource';
import { PersistentVolumeClaimVolumeSource } from './v1PersistentVolumeClaimVolumeSource';
import { PhotonPersistentDiskVolumeSource } from './v1PhotonPersistentDiskVolumeSource';
import { PortworxVolumeSource } from './v1PortworxVolumeSource';
import { ProjectedVolumeSource } from './v1ProjectedVolumeSource';
import { QuobyteVolumeSource } from './v1QuobyteVolumeSource';
import { RBDVolumeSource } from './v1RBDVolumeSource';
import { ScaleIOVolumeSource } from './v1ScaleIOVolumeSource';
import { SecretVolumeSource } from './v1SecretVolumeSource';
import { StorageOSVolumeSource } from './v1StorageOSVolumeSource';
import { VsphereVirtualDiskVolumeSource } from './v1VsphereVirtualDiskVolumeSource';
/**
* Volume represents a named volume in a pod that may be accessed by any container in the pod.
*/
export declare class Volume {
    'awsElasticBlockStore'?: AWSElasticBlockStoreVolumeSource;
    'azureDisk'?: AzureDiskVolumeSource;
    'azureFile'?: AzureFileVolumeSource;
    'cephfs'?: CephFSVolumeSource;
    'cinder'?: CinderVolumeSource;
    'configMap'?: ConfigMapVolumeSource;
    'csi'?: CSIVolumeSource;
    'downwardAPI'?: DownwardAPIVolumeSource;
    'emptyDir'?: EmptyDirVolumeSource;
    'ephemeral'?: EphemeralVolumeSource;
    'fc'?: FCVolumeSource;
    'flexVolume'?: FlexVolumeSource;
    'flocker'?: FlockerVolumeSource;
    'gcePersistentDisk'?: GCEPersistentDiskVolumeSource;
    'gitRepo'?: GitRepoVolumeSource;
    'glusterfs'?: GlusterfsVolumeSource;
    'hostPath'?: HostPathVolumeSource;
    'iscsi'?: ISCSIVolumeSource;
    /**
    * name of the volume. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    */
    'name': string;
    'nfs'?: NFSVolumeSource;
    'persistentVolumeClaim'?: PersistentVolumeClaimVolumeSource;
    'photonPersistentDisk'?: PhotonPersistentDiskVolumeSource;
    'portworxVolume'?: PortworxVolumeSource;
    'projected'?: ProjectedVolumeSource;
    'quobyte'?: QuobyteVolumeSource;
    'rbd'?: RBDVolumeSource;
    'scaleIO'?: ScaleIOVolumeSource;
    'secret'?: SecretVolumeSource;
    'storageos'?: StorageOSVolumeSource;
    'vsphereVolume'?: VsphereVirtualDiskVolumeSource;
    static discriminator: string | undefined;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
